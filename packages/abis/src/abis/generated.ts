//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// auctionHouse
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const auctionHouseAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "protocol_", internalType: "address", type: "address" },
      { name: "permit2_", internalType: "address", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "FailedCallback" },
  { type: "error", inputs: [], name: "InsufficientFunding" },
  { type: "error", inputs: [], name: "InvalidCallback" },
  { type: "error", inputs: [], name: "InvalidCallbackResponse" },
  { type: "error", inputs: [], name: "InvalidFee" },
  {
    type: "error",
    inputs: [{ name: "id_", internalType: "uint96", type: "uint96" }],
    name: "InvalidLotId",
  },
  {
    type: "error",
    inputs: [
      { name: "keycode_", internalType: "Keycode", type: "bytes5" },
      { name: "version_", internalType: "uint8", type: "uint8" },
    ],
    name: "InvalidModuleInstall",
  },
  { type: "error", inputs: [], name: "InvalidParams" },
  { type: "error", inputs: [], name: "InvalidState" },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "ModuleAlreadySunset",
  },
  {
    type: "error",
    inputs: [{ name: "error_", internalType: "bytes", type: "bytes" }],
    name: "ModuleExecutionReverted",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "ModuleIsSunset",
  },
  {
    type: "error",
    inputs: [
      { name: "keycode_", internalType: "Keycode", type: "bytes5" },
      { name: "version_", internalType: "uint8", type: "uint8" },
    ],
    name: "ModuleNotInstalled",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  {
    type: "error",
    inputs: [{ name: "target_", internalType: "address", type: "address" }],
    name: "TargetNotAContract",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "auctionRef",
        internalType: "Veecode",
        type: "bytes7",
        indexed: true,
      },
    ],
    name: "AuctionCancelled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "auctionRef",
        internalType: "Veecode",
        type: "bytes7",
        indexed: true,
      },
      {
        name: "infoHash",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "AuctionCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "bidder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Bid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "curator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "Curated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "keycode",
        internalType: "Keycode",
        type: "bytes5",
        indexed: true,
      },
      { name: "version", internalType: "uint8", type: "uint8", indexed: true },
      {
        name: "location",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "ModuleInstalled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "keycode",
        internalType: "Keycode",
        type: "bytes5",
        indexed: true,
      },
    ],
    name: "ModuleSunset",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "buyer",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "referrer",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "payout",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Purchase",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "bidder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "RefundBid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
    ],
    name: "Settle",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "routing_",
        internalType: "struct Auctioneer.RoutingParams",
        type: "tuple",
        components: [
          { name: "auctionType", internalType: "Keycode", type: "bytes5" },
          {
            name: "baseToken",
            internalType: "contract ERC20",
            type: "address",
          },
          {
            name: "quoteToken",
            internalType: "contract ERC20",
            type: "address",
          },
          { name: "curator", internalType: "address", type: "address" },
          {
            name: "callbacks",
            internalType: "contract ICallback",
            type: "address",
          },
          { name: "callbackData", internalType: "bytes", type: "bytes" },
          { name: "derivativeType", internalType: "Keycode", type: "bytes5" },
          { name: "derivativeParams", internalType: "bytes", type: "bytes" },
          { name: "wrapDerivative", internalType: "bool", type: "bool" },
          { name: "prefunded", internalType: "bool", type: "bool" },
        ],
      },
      {
        name: "params_",
        internalType: "struct Auction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint96", type: "uint96" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "infoHash_", internalType: "string", type: "string" },
    ],
    name: "auction",
    outputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "params_",
        internalType: "struct Router.BidParams",
        type: "tuple",
        components: [
          { name: "lotId", internalType: "uint96", type: "uint96" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "amount", internalType: "uint96", type: "uint96" },
          { name: "auctionData", internalType: "bytes", type: "bytes" },
          { name: "permit2Data", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "protocolFee_", internalType: "uint96", type: "uint96" },
      { name: "referrerFee_", internalType: "uint96", type: "uint96" },
      { name: "hasReferrer_", internalType: "bool", type: "bool" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
    ],
    name: "calculateQuoteFees",
    outputs: [
      { name: "toReferrer", internalType: "uint96", type: "uint96" },
      { name: "toProtocol", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "cancel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "claimProceeds",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "claimRewards",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "curate",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "veecode_", internalType: "Veecode", type: "bytes7" },
      { name: "callData_", internalType: "bytes", type: "bytes" },
    ],
    name: "execOnModule",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
    name: "fees",
    outputs: [
      { name: "protocol", internalType: "uint48", type: "uint48" },
      { name: "referrer", internalType: "uint48", type: "uint48" },
      { name: "maxCuratorFee", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getModuleForId",
    outputs: [
      { name: "", internalType: "contract AuctionModule", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
    name: "getModuleForVeecode",
    outputs: [{ name: "", internalType: "contract Module", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
    name: "getModuleStatus",
    outputs: [
      { name: "latestVersion", internalType: "uint8", type: "uint8" },
      { name: "sunset", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newModule_", internalType: "contract Module", type: "address" },
    ],
    name: "installModule",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isExecOnModule",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotCounter",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotFees",
    outputs: [
      { name: "curator", internalType: "address", type: "address" },
      { name: "curated", internalType: "bool", type: "bool" },
      { name: "curatorFee", internalType: "uint48", type: "uint48" },
      { name: "protocolFee", internalType: "uint48", type: "uint48" },
      { name: "referrerFee", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotRouting",
    outputs: [
      { name: "seller", internalType: "address", type: "address" },
      { name: "funding", internalType: "uint96", type: "uint96" },
      { name: "baseToken", internalType: "contract ERC20", type: "address" },
      { name: "auctionReference", internalType: "Veecode", type: "bytes7" },
      { name: "quoteToken", internalType: "contract ERC20", type: "address" },
      {
        name: "callbacks",
        internalType: "contract ICallback",
        type: "address",
      },
      { name: "derivativeReference", internalType: "Veecode", type: "bytes7" },
      { name: "wrapDerivative", internalType: "bool", type: "bool" },
      { name: "derivativeParams", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "modules",
    outputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "modulesCount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "params_",
        internalType: "struct Router.PurchaseParams",
        type: "tuple",
        components: [
          { name: "recipient", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "lotId", internalType: "uint96", type: "uint96" },
          { name: "amount", internalType: "uint96", type: "uint96" },
          { name: "minAmountOut", internalType: "uint96", type: "uint96" },
          { name: "auctionData", internalType: "bytes", type: "bytes" },
          { name: "permit2Data", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "purchase",
    outputs: [{ name: "payoutAmount", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "refundBid",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "contract ERC20", type: "address" },
    ],
    name: "rewards",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctionType_", internalType: "Keycode", type: "bytes5" },
      { name: "fee_", internalType: "uint48", type: "uint48" },
    ],
    name: "setCuratorFee",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctionType_", internalType: "Keycode", type: "bytes5" },
      { name: "type_", internalType: "enum FeeManager.FeeType", type: "uint8" },
      { name: "fee_", internalType: "uint48", type: "uint48" },
    ],
    name: "setFee",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "protocol_", internalType: "address", type: "address" }],
    name: "setProtocol",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "settle",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "sunsetModule",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  { type: "error", inputs: [], name: "Auction_InvalidKey" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketNotActive",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyMarketOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  { type: "error", inputs: [], name: "Auction_InsufficientPayout" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketNotActive",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auction_PayoutGreaterThanMax" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  { type: "error", inputs: [], name: "BrokenInvariant" },
  { type: "error", inputs: [], name: "Derivative_NotImplemented" },
  { type: "error", inputs: [], name: "InsufficientBalance" },
  { type: "error", inputs: [], name: "InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  { type: "error", inputs: [], name: "NotPermitted" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// catalogue
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const catalogueAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionHouse",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getRouting",
    outputs: [
      {
        name: "",
        internalType: "struct Auctioneer.Routing",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "funding", internalType: "uint96", type: "uint96" },
          {
            name: "baseToken",
            internalType: "contract ERC20",
            type: "address",
          },
          { name: "auctionReference", internalType: "Veecode", type: "bytes7" },
          {
            name: "quoteToken",
            internalType: "contract ERC20",
            type: "address",
          },
          {
            name: "callbacks",
            internalType: "contract ICallback",
            type: "address",
          },
          {
            name: "derivativeReference",
            internalType: "Veecode",
            type: "bytes7",
          },
          { name: "wrapDerivative", internalType: "bool", type: "bool" },
          { name: "derivativeParams", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "payout_", internalType: "uint96", type: "uint96" },
    ],
    name: "priceFor",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// empam
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const empamAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  { type: "error", inputs: [], name: "Auction_InvalidKey" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketNotActive",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyMarketOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint64", type: "uint64", indexed: true },
      {
        name: "amountIn",
        internalType: "uint96",
        type: "uint96",
        indexed: false,
      },
      {
        name: "amountOut",
        internalType: "uint96",
        type: "uint96",
        indexed: false,
      },
    ],
    name: "BidDecrypted",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      {
        name: "params_",
        internalType: "struct Auction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint96", type: "uint96" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "quoteTokenDecimals_", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals_", internalType: "uint8", type: "uint8" },
    ],
    name: "auction",
    outputs: [{ name: "capacity", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "auctionData",
    outputs: [
      { name: "nextBidId", internalType: "uint64", type: "uint64" },
      { name: "marginalPrice", internalType: "uint96", type: "uint96" },
      { name: "minPrice", internalType: "uint96", type: "uint96" },
      { name: "nextDecryptIndex", internalType: "uint64", type: "uint64" },
      { name: "minFilled", internalType: "uint96", type: "uint96" },
      { name: "minBidSize", internalType: "uint96", type: "uint96" },
      { name: "status", internalType: "enum Auction.Status", type: "uint8" },
      { name: "marginalBidId", internalType: "uint64", type: "uint64" },
      {
        name: "publicKey",
        internalType: "struct Point",
        type: "tuple",
        components: [
          { name: "x", internalType: "uint256", type: "uint256" },
          { name: "y", internalType: "uint256", type: "uint256" },
        ],
      },
      { name: "privateKey", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "auctionType",
    outputs: [
      { name: "", internalType: "enum Auction.AuctionType", type: "uint8" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidder_", internalType: "address", type: "address" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "bids",
    outputs: [
      { name: "bidder", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint96", type: "uint96" },
      { name: "minAmountOut", internalType: "uint96", type: "uint96" },
      { name: "referrer", internalType: "address", type: "address" },
      {
        name: "status",
        internalType: "enum EncryptedMarginalPriceAuctionModule.BidStatus",
        type: "uint8",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "cancelAuction",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "capacityInQuote",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [
      {
        name: "bidClaims",
        internalType: "struct Auction.BidClaim[]",
        type: "tuple[]",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint96", type: "uint96" },
          { name: "payout", internalType: "uint96", type: "uint96" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "claimProceeds",
    outputs: [
      { name: "purchased", internalType: "uint96", type: "uint96" },
      { name: "sold", internalType: "uint96", type: "uint96" },
      { name: "payoutSent", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "num_", internalType: "uint64", type: "uint64" },
    ],
    name: "decryptAndSortBids",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "decryptedBids",
    outputs: [{ name: "numBids", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "encryptedBids",
    outputs: [
      { name: "encryptedAmountOut", internalType: "uint256", type: "uint256" },
      {
        name: "bidPubKey",
        internalType: "struct Point",
        type: "tuple",
        components: [
          { name: "x", internalType: "uint256", type: "uint256" },
          { name: "y", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getAuctionData",
    outputs: [
      {
        name: "auctionData_",
        internalType: "struct EncryptedMarginalPriceAuctionModule.AuctionData",
        type: "tuple",
        components: [
          { name: "nextBidId", internalType: "uint64", type: "uint64" },
          { name: "marginalPrice", internalType: "uint96", type: "uint96" },
          { name: "minPrice", internalType: "uint96", type: "uint96" },
          { name: "nextDecryptIndex", internalType: "uint64", type: "uint64" },
          { name: "minFilled", internalType: "uint96", type: "uint96" },
          { name: "minBidSize", internalType: "uint96", type: "uint96" },
          {
            name: "status",
            internalType: "enum Auction.Status",
            type: "uint8",
          },
          { name: "marginalBidId", internalType: "uint64", type: "uint64" },
          {
            name: "publicKey",
            internalType: "struct Point",
            type: "tuple",
            components: [
              { name: "x", internalType: "uint256", type: "uint256" },
              { name: "y", internalType: "uint256", type: "uint256" },
            ],
          },
          { name: "privateKey", internalType: "uint256", type: "uint256" },
          { name: "bidIds", internalType: "uint64[]", type: "uint64[]" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBid",
    outputs: [
      {
        name: "bid",
        internalType: "struct EncryptedMarginalPriceAuctionModule.Bid",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "amount", internalType: "uint96", type: "uint96" },
          { name: "minAmountOut", internalType: "uint96", type: "uint96" },
          { name: "referrer", internalType: "address", type: "address" },
          {
            name: "status",
            internalType: "enum EncryptedMarginalPriceAuctionModule.BidStatus",
            type: "uint8",
          },
        ],
      },
      {
        name: "encryptedBid",
        internalType: "struct EncryptedMarginalPriceAuctionModule.EncryptedBid",
        type: "tuple",
        components: [
          {
            name: "encryptedAmountOut",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "bidPubKey",
            internalType: "struct Point",
            type: "tuple",
            components: [
              { name: "x", internalType: "uint256", type: "uint256" },
              { name: "y", internalType: "uint256", type: "uint256" },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getLot",
    outputs: [
      {
        name: "",
        internalType: "struct Auction.Lot",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "conclusion", internalType: "uint48", type: "uint48" },
          { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint96", type: "uint96" },
          { name: "sold", internalType: "uint96", type: "uint96" },
          { name: "purchased", internalType: "uint96", type: "uint96" },
          { name: "partialPayout", internalType: "uint96", type: "uint96" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint96", type: "uint96" }],
    name: "lotData",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint96", type: "uint96" },
      { name: "sold", internalType: "uint96", type: "uint96" },
      { name: "purchased", internalType: "uint96", type: "uint96" },
      { name: "partialPayout", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minAuctionDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "payout_", internalType: "uint96", type: "uint96" },
    ],
    name: "priceFor",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "purchase",
    outputs: [
      { name: "payout", internalType: "uint96", type: "uint96" },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
      { name: "caller_", internalType: "address", type: "address" },
    ],
    name: "refundBid",
    outputs: [{ name: "refund", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "settle",
    outputs: [
      {
        name: "settlement",
        internalType: "struct Auction.Settlement",
        type: "tuple",
        components: [
          { name: "totalIn", internalType: "uint96", type: "uint96" },
          { name: "totalOut", internalType: "uint96", type: "uint96" },
          { name: "pfBidder", internalType: "address", type: "address" },
          { name: "pfReferrer", internalType: "address", type: "address" },
          { name: "pfRefund", internalType: "uint96", type: "uint96" },
          { name: "pfPayout", internalType: "uint96", type: "uint96" },
          { name: "auctionOutput", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "privateKey_", internalType: "uint256", type: "uint256" },
      { name: "num_", internalType: "uint64", type: "uint64" },
    ],
    name: "submitPrivateKey",
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fpam
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fpamAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  { type: "error", inputs: [], name: "Auction_InsufficientPayout" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_MarketNotActive",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotEnoughCapacity" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyMarketOwner" },
  { type: "error", inputs: [], name: "Auction_PayoutGreaterThanMax" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      {
        name: "params_",
        internalType: "struct Auction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint96", type: "uint96" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "quoteTokenDecimals_", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals_", internalType: "uint8", type: "uint8" },
    ],
    name: "auction",
    outputs: [{ name: "capacity", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "auctionData",
    outputs: [
      { name: "price", internalType: "uint96", type: "uint96" },
      { name: "maxPayout", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "auctionType",
    outputs: [
      { name: "", internalType: "enum Auction.AuctionType", type: "uint8" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidder_", internalType: "address", type: "address" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "cancelAuction",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "capacityInQuote",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [
      {
        name: "bidClaims",
        internalType: "struct Auction.BidClaim[]",
        type: "tuple[]",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint96", type: "uint96" },
          { name: "payout", internalType: "uint96", type: "uint96" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "claimProceeds",
    outputs: [
      { name: "purchased", internalType: "uint96", type: "uint96" },
      { name: "sold", internalType: "uint96", type: "uint96" },
      { name: "payoutSent", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getLot",
    outputs: [
      {
        name: "",
        internalType: "struct Auction.Lot",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "conclusion", internalType: "uint48", type: "uint48" },
          { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint96", type: "uint96" },
          { name: "sold", internalType: "uint96", type: "uint96" },
          { name: "purchased", internalType: "uint96", type: "uint96" },
          { name: "partialPayout", internalType: "uint96", type: "uint96" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint96", type: "uint96" }],
    name: "lotData",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint96", type: "uint96" },
      { name: "sold", internalType: "uint96", type: "uint96" },
      { name: "purchased", internalType: "uint96", type: "uint96" },
      { name: "partialPayout", internalType: "uint96", type: "uint96" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxAmountAccepted",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "maxPayout",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minAuctionDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
    ],
    name: "payoutFor",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "payout_", internalType: "uint96", type: "uint96" },
    ],
    name: "priceFor",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "amount_", internalType: "uint96", type: "uint96" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "purchase",
    outputs: [
      { name: "payout", internalType: "uint96", type: "uint96" },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
      { name: "caller_", internalType: "address", type: "address" },
    ],
    name: "refundBid",
    outputs: [{ name: "refund", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "settle",
    outputs: [
      {
        name: "settlement",
        internalType: "struct Auction.Settlement",
        type: "tuple",
        components: [
          { name: "totalIn", internalType: "uint96", type: "uint96" },
          { name: "totalOut", internalType: "uint96", type: "uint96" },
          { name: "pfBidder", internalType: "address", type: "address" },
          { name: "pfReferrer", internalType: "address", type: "address" },
          { name: "pfRefund", internalType: "uint96", type: "uint96" },
          { name: "pfPayout", internalType: "uint96", type: "uint96" },
          { name: "auctionOutput", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// linearVesting
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const linearVestingAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "BrokenInvariant" },
  { type: "error", inputs: [], name: "Derivative_NotImplemented" },
  { type: "error", inputs: [], name: "InsufficientBalance" },
  { type: "error", inputs: [], name: "InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  { type: "error", inputs: [], name: "NotPermitted" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "start", internalType: "uint48", type: "uint48", indexed: false },
      {
        name: "expiry",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "baseToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "DerivativeCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "OperatorSet",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Redeemed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "caller",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "Unwrapped",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "Wrapped",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "WrappedDerivativeCreated",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
    ],
    name: "computeId",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "bytes", type: "bytes" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "convertsTo",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "deploy",
    outputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "wrappedAddress_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "exercise",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "bytes", type: "bytes" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "exerciseCost",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getTokenMetadata",
    outputs: [
      {
        name: "",
        internalType: "struct Derivative.Token",
        type: "tuple",
        components: [
          { name: "exists", internalType: "bool", type: "bool" },
          { name: "wrapped", internalType: "address", type: "address" },
          { name: "underlyingToken", internalType: "address", type: "address" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "isOperator",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "mint",
    outputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to_", internalType: "address", type: "address" },
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "mint",
    outputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "wrappedAddress_", internalType: "address", type: "address" },
      { name: "amountCreated_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "reclaim",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeem",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "redeemMax",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeemable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setOperator",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenMetadata",
    outputs: [
      { name: "exists", internalType: "bool", type: "bool" },
      { name: "wrapped", internalType: "address", type: "address" },
      { name: "underlyingToken", internalType: "address", type: "address" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transform",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "unwrap",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
    ],
    name: "userClaimed",
    outputs: [{ name: "claimed_", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
    ],
    name: "validate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "wrap",
    outputs: [],
  },
] as const;
