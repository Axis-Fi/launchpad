{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "parent_", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "INIT",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "PARENT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TYPE",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum Module.Type" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "VEECODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes7", "internalType": "Veecode" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "computeId",
      "inputs": [
        {
          "name": "underlyingToken_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "params_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "convertsTo",
      "inputs": [
        { "name": "", "type": "bytes", "internalType": "bytes" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deploy",
      "inputs": [
        {
          "name": "underlyingToken_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "params_", "type": "bytes", "internalType": "bytes" },
        { "name": "wrapped_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "wrappedAddress_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "exercise",
      "inputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "exerciseCost",
      "inputs": [
        { "name": "", "type": "bytes", "internalType": "bytes" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenMetadata",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Derivative.Token",
          "components": [
            { "name": "exists", "type": "bool", "internalType": "bool" },
            { "name": "wrapped", "type": "address", "internalType": "address" },
            {
              "name": "underlyingToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "wrapped_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "to_", "type": "address", "internalType": "address" },
        {
          "name": "underlyingToken_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "params_", "type": "bytes", "internalType": "bytes" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "wrapped_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "wrappedAddress_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amountCreated_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reclaim",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "redeem",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "redeemMax",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "redeemable",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" },
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenMetadata",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "exists", "type": "bool", "internalType": "bool" },
        { "name": "wrapped", "type": "address", "internalType": "address" },
        {
          "name": "underlyingToken",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transform",
      "inputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unwrap",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "userClaimed",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" },
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "claimed_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validate",
      "inputs": [
        {
          "name": "underlyingToken_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "params_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wrap",
      "inputs": [
        { "name": "tokenId_", "type": "uint256", "internalType": "uint256" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DerivativeCreated",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "start",
          "type": "uint48",
          "indexed": false,
          "internalType": "uint48"
        },
        {
          "name": "expiry",
          "type": "uint48",
          "indexed": false,
          "internalType": "uint48"
        },
        {
          "name": "baseToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Redeemed",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unwrapped",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "wrappedToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Wrapped",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "wrappedToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WrappedDerivativeCreated",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "wrappedToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "BrokenInvariant", "inputs": [] },
    { "type": "error", "name": "Derivative_NotImplemented", "inputs": [] },
    { "type": "error", "name": "InsufficientBalance", "inputs": [] },
    { "type": "error", "name": "InvalidParams", "inputs": [] },
    {
      "type": "error",
      "name": "Module_InvalidParent",
      "inputs": [
        { "name": "parent_", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "Module_OnlyInternal", "inputs": [] },
    {
      "type": "error",
      "name": "Module_OnlyParent",
      "inputs": [
        { "name": "caller_", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "NotPermitted", "inputs": [] },
    {
      "type": "error",
      "name": "UnsupportedToken",
      "inputs": [
        { "name": "token_", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1273:28720:163:-:0;;;;;2997:51;;3446:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3482:7;-1:-1:-1;;;;;11238:21:158;;11234:63;;11268:29;;-1:-1:-1;;;11268:29:158;;-1:-1:-1;;;;;473:32:253;;11268:29:158;;;455:51:253;428:18;;11268:29:158;;;;;;;11234:63;-1:-1:-1;;;;;11308:16:158;;;3570:25:163::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;3544:52:163::1;;::::0;-1:-1:-1;1273:28720:163;;;;;;;;;;:::o;14:290:253:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:253;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:253:o;309:203::-;1273:28720:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101f95760003560e01c80636a9311b71161011a578063d61735ca116100ad578063ea6439141161007c578063ea64391414610513578063f6e9936a1461051b578063f904eed814610529578063fcbf8b241461053c578063fe99049a1461056757600080fd5b8063d61735ca14610496578063dbad2d9a146104b7578063dbf110a7146104ca578063e40d88f81461050057600080fd5b8063a86265bb116100e9578063a86265bb14610438578063b6363cf214610446578063bb24fe8a14610474578063caf927851461048357600080fd5b80636a9311b7146103ff5780636e286671146104125780637cbc2373146104255780639ad790c5146103ff57600080fd5b80633f47e66211610192578063598af9e711610161578063598af9e71461037857806360316801146103a957806367627b62146103c95780636914db60146103dc57600080fd5b80633f47e6621461032d578063426a8493146102835780634e41a1fb14610352578063558a72971461036557600080fd5b8063122b83f9116101ce578063122b83f9146102965780631f54245b146102d557806325ded586146103055780632dabbeed1461031a57600080fd5b8062ad800c146101fe578062fdd58e1461022757806301ffc9a714610260578063095bcdb614610283575b600080fd5b61021161020c36600461295e565b610575565b60405161021e91906129c7565b60405180910390f35b6102526102353660046129f9565b600260209081526000928352604080842090915290825290205481565b60405190815260200161021e565b61027361026e366004612a25565b610681565b604051901515815260200161021e565b610273610291366004612a4f565b6106b8565b6102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161021e565b6102e86102e3366004612b5e565b6106d3565b604080519283526001600160a01b0390911660208301520161021e565b610318610313366004612bbe565b61072c565b005b61031861032836600461295e565b61089c565b61034061033b36600461295e565b6108b5565b60405160ff909116815260200161021e565b61021161036036600461295e565b610a0c565b610273610373366004612be0565b610b16565b610252610386366004612c15565b600360209081526000938452604080852082529284528284209052825290205481565b6103bc6103b736600461295e565b610b86565b60405161021e9190612c56565b6102526103d73660046129f9565b610c92565b6103ef6103ea36600461295e565b610f18565b60405161021e9493929190612c9f565b61025261040d366004612cdd565b610fdb565b610318610420366004612bbe565b610ff6565b610318610433366004612bbe565b6111eb565b610318610328366004612bbe565b610273610454366004612d22565b600160209081526000928352604080842090915290825290205460ff1681565b600160405161021e9190612d5b565b610273610491366004612d83565b611283565b61049e6112a3565b6040516001600160c81b0319909116815260200161021e565b6102526104c5366004612d83565b6112bb565b6104dd6104d8366004612dd3565b6112de565b604080519384526001600160a01b0390921660208401529082015260600161021e565b6104dd61050e366004612e1b565b611371565b61031861141a565b610318610328366004612e98565b61031861053736600461295e565b61146c565b61025261054a3660046129f9565b600460209081526000928352604080842090915290825290205481565b610273610291366004612ebf565b600081815260208190526040812054606091839160ff16151590036105ad57604051635435b28960e11b815260040160405180910390fd5b60008381526020819052604081206002810180549192916105cd90612f05565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990612f05565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b505050505080602001905181019061065e9190612f4f565b90506000610674826040015183602001516114e2565b5094505050505b50919050565b60006301ffc9a760e01b6001600160e01b0319831614806106b25750630f632fb360e01b6001600160e01b03198316145b92915050565b60006040516339218f3b60e01b815260040160405180910390fd5b60008060006106e185611625565b90506106ed868261168e565b151560000361070f57604051635435b28960e11b815260040160405180910390fd5b60008061071d88848861172b565b90999098509650505050505050565b600082815260208190526040812054839160ff9091161515900361076357604051635435b28960e11b815260040160405180910390fd5b8160000361078457604051635435b28960e11b815260040160405180910390fd5b3360009081526002602090815260408083208684529091529020548211156107bf57604051631e9acf1760e31b815260040160405180910390fd5b6107ca338484611915565b60008381526020819052604090206107e2848261199c565b5080546040516340c10f1960e01b8152336004820152602481018590526101009091046001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561083257600080fd5b505af1158015610846573d6000803e3d6000fd5b50508254604080518781526101009092046001600160a01b031660208301523393508792507fed8f3f6d485df7980ffa03dd0323e0e62decf810572edd79af06baf0f74efe06910160405180910390a350505050565b60405163cb93550d60e01b815260040160405180910390fd5b600081815260208190526040812054829060ff16151582036108ea57604051635435b28960e11b815260040160405180910390fd5b600083815260208190526040812060028101805491929161090a90612f05565b80601f016020809104026020016040519081016040528092919081815260200182805461093690612f05565b80156109835780601f1061095857610100808354040283529160200191610983565b820191906000526020600020905b81548152906001019060200180831161096657829003601f168201915b505050505080602001905181019061099b9190612f4f565b905080604001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190612fbd565b95945050505050565b600081815260208190526040812054606091839160ff1615159003610a4457604051635435b28960e11b815260040160405180910390fd5b6000838152602081905260408120600281018054919291610a6490612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9090612f05565b8015610add5780601f10610ab257610100808354040283529160200191610add565b820191906000526020600020905b815481529060010190602001808311610ac057829003601f168201915b5050505050806020019051810190610af59190612f4f565b90506000610b0b826040015183602001516114e2565b979650505050505050565b3360008181526001602090815260408083206001600160a01b038716808552908352818420805460ff191687151590811790915591519182529293917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a350600192915050565b6040805160808101825260008082526020820181905291810191909152606080820152600082815260208181526040918290208251608081018452815460ff8116151582526001600160a01b03610100909104811693820193909352600182015490921692820192909252600282018054919291606084019190610c0990612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3590612f05565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b5050505050815250509050919050565b600081815260208190526040812054829060ff1615158203610cc757604051635435b28960e11b815260040160405180910390fd5b6000838152602081905260408120600281018054919291610ce790612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1390612f05565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b5050505050806020019051810190610d789190612f4f565b805190915065ffffffffffff164211610d9657600093505050610f11565b6001600160a01b038087166000908152600260209081526040808320898452909152812054845490926101009091041615610e435783546040516370a0823160e01b81526001600160a01b038a81166004830152610100909204909116906370a0823190602401602060405180830381865afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e9190612fe0565b610e46565b60005b6001600160a01b03891660009081526004602090815260408083208b845290915281205491925081610e78848661300f565b610e82919061300f565b90506000856020015165ffffffffffff164210610ea0575080610edc565b8551610ed990610eb89065ffffffffffff1642613022565b87516020890151610ec99190613035565b84919065ffffffffffff16611c6f565b90505b82811015610efd5760405163efbc9a9760e01b815260040160405180910390fd5b610f078382613022565b9850505050505050505b5092915050565b60006020819052908152604090208054600182015460028301805460ff8416946101009094046001600160a01b03908116949316929190610f5890612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8490612f05565b8015610fd15780601f10610fa657610100808354040283529160200191610fd1565b820191906000526020600020905b815481529060010190602001808311610fb457829003601f168201915b5050505050905084565b600060405163cb93550d60e01b815260040160405180910390fd5b600082815260208190526040812054839160ff9091161515900361102d57604051635435b28960e11b815260040160405180910390fd5b600083815260208190526040902054839061010090046001600160a01b031661106957604051635435b28960e11b815260040160405180910390fd5b8260000361108a57604051635435b28960e11b815260040160405180910390fd5b60008481526020819052604090819020805491516370a0823160e01b8152336004820152909161010090046001600160a01b031690859082906370a0823190602401602060405180830381865afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d9190612fe0565b101561112c57604051631e9acf1760e31b815260040160405180910390fd5b604051632770a7eb60e21b8152336004820152602481018690526001600160a01b03821690639dc29fac90604401600060405180830381600087803b15801561117457600080fd5b505af1158015611188573d6000803e3d6000fd5b50505050611197338787611c8d565b8154604080518781526101009092046001600160a01b03166020830152339188917f171711504f91229e77cb6057e65ba3567d9072edd7152eb5f11cc13152407da3910160405180910390a3505050505050565b600082815260208190526040812054839160ff9091161515900361122257604051635435b28960e11b815260040160405180910390fd5b8160000361124357604051635435b28960e11b815260040160405180910390fd5b600061124f3385610c92565b90508281101561127257604051631e9acf1760e31b815260040160405180910390fd5b61127d843385611d0b565b50505050565b60008061128f83611625565b905061129b848261168e565b949350505050565b60006112b6622624ab60e91b6001611fd2565b905090565b6000806112c783611625565b805160208201519192508591610a03918391612058565b60008381526020819052604081205481908190869060ff161515820361131757604051635435b28960e11b815260040160405180910390fd5b8560000361133857604051635435b28960e11b815260040160405180910390fd5b6000878152602081905260409020611353898989848a6120e5565b5496986101009097046001600160a01b031697509495945050505050565b60008060008460000361139757604051635435b28960e11b815260040160405180910390fd5b60006113a287611625565b90506113ae888261168e565b15156000036113d057604051635435b28960e11b815260040160405180910390fd5b6113db88828761172b565b5060008181526020819052604090209094506113fa8a8689848a6120e5565b5493996101009094046001600160a01b0316985094965091945050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461146a576040516366e069e160e01b81523360048201526024015b60405180910390fd5b565b600081815260208190526040812054829160ff909116151590036114a357604051635435b28960e11b815260040160405180910390fd5b60006114af3384610c92565b9050806000036114d257604051631e9acf1760e31b815260040160405180910390fd5b6114dd833383611d0b565b505050565b60608060008060006114fb8665ffffffffffff1661238c565b925092509250866001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561153f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115679190810190613054565b83838360405160200161157d94939291906130c2565b604051602081830303815290604052876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156115ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115f29190810190613054565b84848460405160200161160894939291906130c2565b604051602081830303815290604052945094505050509250929050565b60408051808201909152600080825260208201527f000000000000000000000000000000000000000000000000000000000000000082511461167a57604051635435b28960e11b815260040160405180910390fd5b818060200190518101906106b2919061313f565b805160009065ffffffffffff1615806116b15750602082015165ffffffffffff16155b156116be575060006106b2565b816020015165ffffffffffff16826000015165ffffffffffff16036116e5575060006106b2565b816020015165ffffffffffff16826000015165ffffffffffff161061170c575060006106b2565b6001600160a01b038316611722575060006106b2565b50600192915050565b60008060008590506117468186600001518760200151612058565b600081815260208190526040812080549295509160ff16151590036118e8578054600160ff1990911681178255810180546001600160a01b0319166001600160a01b03898116919091179091556040805160608082018352895165ffffffffffff9081168084526020808d0151831681860190815289881695870195865286519182019290925290519091168185015291519093168184015281518082039093018352608001905260028201906117fd90826131e8565b5060008481526020819052604090208154815460ff909116151560ff1982168117835583546001600160a01b03610100918290048116909102610100600160a81b03199092166001600160a81b03199093169290921717825560018084015490830180546001600160a01b031916919092161790558190600280820190611886908401826132a8565b505086516020808901516040805165ffffffffffff948516815293909116918301919091526001600160a01b038a1682820152518692507f4ab4dadc5d33a7b415be92bf51b712368ca8cae2ed2024779d3748a0dd229be49181900360600190a25b84156118fa576118f8848261199c565b505b546001600160a01b0361010090910416915050935093915050565b6001600160a01b038316600090815260026020908152604080832085845290915281208054839290611948908490613022565b9091555050604080513381526020810183905283916000916001600160a01b038716917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac72885991015b60405180910390a4505050565b805460009061010090046001600160a01b0316611c5a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119fa57604051635435b28960e11b815260040160405180910390fd5b6000826002018054611a0b90612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3790612f05565b8015611a845780601f10611a5957610100808354040283529160200191611a84565b820191906000526020600020905b815481529060010190602001808311611a6757829003601f168201915b5050505050806020019051810190611a9c9190612f4f565b9050600080611ab3836040015184602001516114e2565b91509150600082611ac39061337b565b611acc8361337b565b85604001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b329190612fbd565b866020015165ffffffffffff16308860400151604051602001611bb196959493929190958652602086019490945260f89290921b6001600160f81b031916604085015260c01b6001600160c01b0319166041840152606090811b6bffffffffffffffffffffffff19908116604985015291901b16605d82015260710190565b60408051601f198184030181529190529050611bf76001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896125c3565b8654610100600160a81b0319166101006001600160a01b03928316810291909117808955604051919004909116815287907fc687cf6c60d91b1f6be3b5e820ae9a808dc51f7b3bf4aab1967232b2f71c97d49060200160405180910390a2505050505b505461010090046001600160a01b0316919050565b6000826000190484118302158202611c8657600080fd5b5091020490565b6001600160a01b038316600090815260026020908152604080832085845290915281208054839290611cc090849061300f565b9091555050604080513381526020810183905283916001600160a01b038616916000917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859910161198f565b6000838152602081815260408083206001600160a01b0380871685526002845282852088865290935290832054815491939092909161010090041615611dc35782546040516370a0823160e01b81526001600160a01b038781166004830152610100909204909116906370a0823190602401602060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe9190612fe0565b611dc6565b60005b90506000828511611dd75784611dd9565b825b90506000611de78287613022565b905082811115611e0a57604051631e9acf1760e31b815260040160405180910390fd5b6001600160a01b03871660009081526004602090815260408083208b845290915281208054889290611e3d90849061300f565b90915550508115611e5357611e53878984611915565b8015611ec5578454604051632770a7eb60e21b81526001600160a01b0389811660048301526024820184905261010090920490911690639dc29fac90604401600060405180830381600087803b158015611eac57600080fd5b505af1158015611ec0573d6000803e3d6000fd5b505050505b6000856002018054611ed690612f05565b80601f0160208091040260200160405190810160405280929190818152602001828054611f0290612f05565b8015611f4f5780601f10611f2457610100808354040283529160200191611f4f565b820191906000526020600020905b815481529060010190602001808311611f3257829003601f168201915b5050505050806020019051810190611f679190612f4f565b6040810151909150611f83906001600160a01b0316898961271c565b876001600160a01b0316897fa18626381edd3d7a115c4a09f678bb79665034a541affcdba9fe65a1d3d107ee89604051611fbf91815260200190565b60405180910390a3505050505050505050565b600080611fe0600a846133b5565b611feb9060306133d7565b60f81b90506000611ffd600a856133f0565b6120089060306133d7565b6040516001600160f81b0319808516602083015260f89290921b91821660218201526001600160d81b031987166022820152909150602701604051602081830303815290604052610a0390613412565b60006120626112a3565b604080516001600160a01b038716602082015265ffffffffffff80871692820192909252908416606082015260800160408051601f198184030181529082905280516020918201206001600160c81b031990931690820152602781019190915260470160408051601f198184030181529190528051602090910120949350505050565b80156120f7576120f5848361199c565b505b600082600201805461210890612f05565b80601f016020809104026020016040519081016040528092919081815260200182805461213490612f05565b80156121815780601f1061215657610100808354040283529160200191612181565b820191906000526020600020905b81548152906001019060200180831161216457829003601f168201915b50505050508060200190518101906121999190612f4f565b60408082015190516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156121e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220d9190612fe0565b604083015190915061222a906001600160a01b031633308861279d565b612234858261300f565b60408084015190516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561227e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a29190612fe0565b10156122d2576040808301519051635f8b555b60e11b81526001600160a01b039091166004820152602401611461565b5050801561237a57815461010090046001600160a01b031661230757604051635435b28960e11b815260040160405180910390fd5b81546040516340c10f1960e01b81526001600160a01b038781166004830152602482018690526101009092049091169081906340c10f1990604401600060405180830381600087803b15801561235c57600080fd5b505af1158015612370573d6000803e3d6000fd5b5050505050612385565b612385858585611c8d565b5050505050565b6060808060008080806123a26201518089613449565b60050b905060006123b68262010bd9613486565b6123c39062253d8c613486565b9050600062023ab16123d68360046134ae565b6123e091906134de565b905060046123f18262023ab16134ae565b6123fc906003613486565b61240691906134de565b612410908361350c565b9150600062164b09612423846001613486565b61242f90610fa06134ae565b61243991906134de565b90506004612449826105b56134ae565b61245391906134de565b61245d908461350c565b61246890601f613486565b9250600061098f61247a8560506134ae565b61248491906134de565b9050600060506124968361098f6134ae565b6124a091906134de565b6124aa908661350c565b90506124b7600b836134de565b94506124c485600c6134ae565b6124cf836002613486565b6124d9919061350c565b915084836124e860318761350c565b6124f39060646134ae565b6124fd9190613486565b6125079190613486565b985090965094506000935061252c9250612527915061271090508661352c565b612832565b90506000600a84106125465761254184612832565b61256f565b61254f84612832565b60405160200161255f9190613540565b6040516020818303038152906040525b90506000600a84106125895761258484612832565b6125b2565b61259284612832565b6040516020016125a29190613540565b6040516020818303038152906040525b929a91995091975095505050505050565b8151604051613d6160f01b8152603a820160f090811b6002838101919091526680600b3d3981f360c81b600484015264363d3d376160d81b600b8401528301901b6010820181905268603836393d3d3d366160b81b6012830152601b82015262013d7360e81b601d820152606085901b6020808301919091526e5af43d82803e903d91603657fd5bf360881b60348301526000929160458301918390604383019088015b602083106126865780518252601f199092019160209182019101612667565b60006001846020036101000a0319905080825116835283830192508660f01b83526f67363d3d37363d34f03d5260086018f3600052886010806000f5806126d55763ebfef1886000526004601cfd5b8060145261d69460005260016034536017601e20985060008088886000855af115893b15171561270d57638f86d2f16000526004601cfd5b50505050505050509392505050565b600060405163a9059cbb60e01b81526001600160a01b0384166004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061127d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401611461565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b03841660248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806123855760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401611461565b6060816000036128595750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612883578061286d81613569565b915061287c9050600a83613582565b915061285d565b60008167ffffffffffffffff81111561289e5761289e612a84565b6040519080825280601f01601f1916602001820160405280156128c8576020820181803683370190505b509050815b8515612955576128de600182613022565b905060006128ed600a88613582565b6128f890600a613596565b6129029088613022565b61290d9060306133d7565b905060008160f81b90508084848151811061292a5761292a6135ad565b60200101906001600160f81b031916908160001a90535061294c600a89613582565b975050506128cd565b50949350505050565b60006020828403121561297057600080fd5b5035919050565b60005b8381101561299257818101518382015260200161297a565b50506000910152565b600081518084526129b3816020860160208601612977565b601f01601f19169290920160200192915050565b6020815260006129da602083018461299b565b9392505050565b6001600160a01b03811681146129f657600080fd5b50565b60008060408385031215612a0c57600080fd5b8235612a17816129e1565b946020939093013593505050565b600060208284031215612a3757600080fd5b81356001600160e01b0319811681146129da57600080fd5b600080600060608486031215612a6457600080fd5b8335612a6f816129e1565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ac357612ac3612a84565b604052919050565b600067ffffffffffffffff821115612ae557612ae5612a84565b50601f01601f191660200190565b600082601f830112612b0457600080fd5b8135612b17612b1282612acb565b612a9a565b818152846020838601011115612b2c57600080fd5b816020850160208301376000918101602001919091529392505050565b80358015158114612b5957600080fd5b919050565b600080600060608486031215612b7357600080fd5b8335612b7e816129e1565b9250602084013567ffffffffffffffff811115612b9a57600080fd5b612ba686828701612af3565b925050612bb560408501612b49565b90509250925092565b60008060408385031215612bd157600080fd5b50508035926020909101359150565b60008060408385031215612bf357600080fd5b8235612bfe816129e1565b9150612c0c60208401612b49565b90509250929050565b600080600060608486031215612c2a57600080fd5b8335612c35816129e1565b92506020840135612c45816129e1565b929592945050506040919091013590565b602081528151151560208201526000602083015160018060a01b0380821660408501528060408601511660608501525050606083015160808084015261129b60a084018261299b565b84151581526001600160a01b03848116602083015283166040820152608060608201819052600090612cd39083018461299b565b9695505050505050565b60008060408385031215612cf057600080fd5b823567ffffffffffffffff811115612d0757600080fd5b612d1385828601612af3565b95602094909401359450505050565b60008060408385031215612d3557600080fd5b8235612d40816129e1565b91506020830135612d50816129e1565b809150509250929050565b6020810160048310612d7d57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612d9657600080fd5b8235612da1816129e1565b9150602083013567ffffffffffffffff811115612dbd57600080fd5b612dc985828601612af3565b9150509250929050565b60008060008060808587031215612de957600080fd5b8435612df4816129e1565b93506020850135925060408501359150612e1060608601612b49565b905092959194509250565b600080600080600060a08688031215612e3357600080fd5b8535612e3e816129e1565b94506020860135612e4e816129e1565b9350604086013567ffffffffffffffff811115612e6a57600080fd5b612e7688828901612af3565b93505060608601359150612e8c60808701612b49565b90509295509295909350565b600080600060608486031215612ead57600080fd5b833592506020840135612c45816129e1565b60008060008060808587031215612ed557600080fd5b8435612ee0816129e1565b93506020850135612ef0816129e1565b93969395505050506040820135916060013590565b600181811c90821680612f1957607f821691505b60208210810361067b57634e487b7160e01b600052602260045260246000fd5b805165ffffffffffff81168114612b5957600080fd5b600060608284031215612f6157600080fd5b6040516060810181811067ffffffffffffffff82111715612f8457612f84612a84565b604052612f9083612f39565b8152612f9e60208401612f39565b60208201526040830151612fb1816129e1565b60408201529392505050565b600060208284031215612fcf57600080fd5b815160ff811681146129da57600080fd5b600060208284031215612ff257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106b2576106b2612ff9565b818103818111156106b2576106b2612ff9565b65ffffffffffff828116828216039080821115610f1157610f11612ff9565b60006020828403121561306657600080fd5b815167ffffffffffffffff81111561307d57600080fd5b8201601f8101841361308e57600080fd5b805161309c612b1282612acb565b8181528560208385010111156130b157600080fd5b610a03826020830160208601612977565b600085516130d4818460208a01612977565b600160fd1b90830190815285516130f2816001840160208a01612977565b808201915050602d60f81b8060018301528551613116816002850160208a01612977565b60029201918201528351613131816003840160208801612977565b016003019695505050505050565b60006040828403121561315157600080fd5b6040516040810181811067ffffffffffffffff8211171561317457613174612a84565b60405261318083612f39565b815261318e60208401612f39565b60208201529392505050565b601f8211156114dd57600081815260208120601f850160051c810160208610156131c15750805b601f850160051c820191505b818110156131e0578281556001016131cd565b505050505050565b815167ffffffffffffffff81111561320257613202612a84565b613216816132108454612f05565b8461319a565b602080601f83116001811461324b57600084156132335750858301515b600019600386901b1c1916600185901b1785556131e0565b600085815260208120601f198616915b8281101561327a5788860151825594840194600190910190840161325b565b50858210156132985787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181036132b3575050565b6132bd8254612f05565b67ffffffffffffffff8111156132d5576132d5612a84565b6132e3816132108454612f05565b6000601f82116001811461331757600083156132ff5750848201545b600019600385901b1c1916600184901b178455612385565b600085815260209020601f19841690600086815260209020845b838110156133515782860154825560019586019590910190602001613331565b50858310156132985793015460001960f8600387901b161c19169092555050600190811b01905550565b8051602080830151919081101561067b5760001960209190910360031b1b16919050565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806133c8576133c861339f565b8060ff84160491505092915050565b60ff81811683821601908111156106b2576106b2612ff9565b600060ff8316806134035761340361339f565b8060ff84160691505092915050565b805160208201516001600160c81b031980821692919060078310156134415780818460070360031b1b83161693505b505050919050565b60008160050b8360050b806134605761346061339f565b657fffffffffff1982146000198214161561347d5761347d612ff9565b90059392505050565b80820182811260008312801582168215821617156134a6576134a6612ff9565b505092915050565b80820260008212600160ff1b841416156134ca576134ca612ff9565b81810583148215176106b2576106b2612ff9565b6000826134ed576134ed61339f565b600160ff1b82146000198414161561350757613507612ff9565b500590565b8181036000831280158383131683831282161715610f1157610f11612ff9565b60008261353b5761353b61339f565b500690565b600360fc1b81526000825161355c816001850160208701612977565b9190910160010192915050565b60006001820161357b5761357b612ff9565b5060010190565b6000826135915761359161339f565b500490565b80820281158282048414176106b2576106b2612ff9565b634e487b7160e01b600052603260045260246000fdfea264697066735822122069425bd5935f1d896d5e9a7434901d96750fac9d6cf785dc548b20b08739543d64736f6c63430008130033",
    "sourceMap": "1273:28720:163:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28556:407;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:64:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:25:253;;;1545:2;1530:18;1002:64:53;1411:177:253;2930:253:53;;;;;;:::i;:::-;;:::i;:::-;;;2049:14:253;;2042:22;2024:41;;2012:2;1997:18;2930:253:53;1884:187:253;4382:122:163;;;;;;:::i;:::-;;:::i;11114:31:158:-;;;;;;;;-1:-1:-1;;;;;2628:32:253;;;2610:51;;2598:2;2583:18;11114:31:158;2464:203:253;5880:642:163;;;;;;:::i;:::-;;:::i;:::-;;;;4609:25:253;;;-1:-1:-1;;;;;4670:32:253;;;4665:2;4650:18;;4643:60;4582:18;5880:642:163;4435:274:253;18206:685:163;;;;;;:::i;:::-;;:::i;:::-;;17680:114;;;;;;:::i;:::-;;:::i;29653:338::-;;;;;;:::i;:::-;;:::i;:::-;;;5139:4:253;5127:17;;;5109:36;;5097:2;5082:18;29653:338:163;4967:184:253;29101:414:163;;;;;;:::i;:::-;;:::i;2517:225:53:-;;;;;;:::i;:::-;;:::i;1073:84::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8765:134:156;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15896:1514:163:-;;;;;;:::i;:::-;;:::i;1027:63:156:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;21882:156:163:-;;;;;;:::i;:::-;;:::i;19176:686::-;;;;;;:::i;:::-;;:::i;14601:517::-;;;;;;:::i;:::-;;:::i;17483:124::-;;;;;;:::i;933:62:53:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3636:91:163;3705:15;3636:91;;;;;;:::i;21519:290::-;;;;;;:::i;:::-;;:::i;3760:114::-;;;:::i;:::-;;;-1:-1:-1;;;;;;8861:39:253;;;8843:58;;8831:2;8816:18;3760:114:163;8669:238:253;23525:398:163;;;;;;:::i;:::-;;:::i;11687:458::-;;;;;;:::i;:::-;;:::i;:::-;;;;9571:25:253;;;-1:-1:-1;;;;;9632:32:253;;;9627:2;9612:18;;9605:60;9681:18;;;9674:34;9559:2;9544:18;11687:458:163;9369:345:253;9682:946:163;;;;;;:::i;:::-;;:::i;13040:46:158:-;;;:::i;17867:134:163:-;;;;;;:::i;13922:411::-;;;;;;:::i;:::-;;:::i;3302:91::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4604:173;;;;;;:::i;28556:407::-;3981:13;:23;;;;;;;;;;:30;28701:13;;28674:8;;3981:30;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;28730:19:::1;28752:23:::0;;;::::1;::::0;;;;;;28822:10:::1;::::0;::::1;28811:37:::0;;28752:23;;28730:19;28811:37:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28785:63;;28860:19;28884:50;28906:4;:14;;;28922:4;:11;;;28884:21;:50::i;:::-;-1:-1:-1::0;28859:75:163;-1:-1:-1;;;;4054:1:163::1;28556:407:::0;;;;:::o;2930:253:53:-;3006:4;-1:-1:-1;;;;;;;;;3041:25:53;;;;:100;;-1:-1:-1;;;;;;;;;;3116:25:53;;;3041:100;3022:119;2930:253;-1:-1:-1;;2930:253:53:o;4382:122:163:-;4460:4;4483:14;;-1:-1:-1;;;4483:14:163;;;;;;;;;;;5880:642;6024:16;6042:23;6106:27;6136:29;6157:7;6136:20;:29::i;:::-;6106:59;;6211:35;6221:16;6239:6;6211:9;:35::i;:::-;:44;;6250:5;6211:44;6207:97;;6278:15;;-1:-1:-1;;;6278:15:163;;;;;;;;;;;6207:97;6366:15;6383:22;6421:51;6437:16;6455:6;6463:8;6421:15;:51::i;:::-;6365:107;;;;-1:-1:-1;5880:642:163;-1:-1:-1;;;;;;;5880:642:163:o;18206:685::-;3981:13;:23;;;;;;;;;;:30;18320:8;;3981:30;;;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;18344:7:::1;18355:1;18344:12:::0;18340:40:::1;;18365:15;;-1:-1:-1::0;;;18365:15:163::1;;;;;;;;;;;18340:40;18405:10;18395:21;::::0;;;:9:::1;:21;::::0;;;;;;;:31;;;;;;;;;:41;-1:-1:-1;18391:75:163::1;;;18445:21;;-1:-1:-1::0;;;18445:21:163::1;;;;;;;;;;;18391:75;18514:36;18520:10;18532:8;18542:7;18514:5;:36::i;:::-;18614:19;18636:23:::0;;;::::1;::::0;;;;;;18669:36:::1;18650:8:::0;18636:23;18669:19:::1;:36::i;:::-;-1:-1:-1::0;18775:13:163;;18755:60:::1;::::0;-1:-1:-1;;;18755:60:163;;18795:10:::1;18755:60;::::0;::::1;12794:51:253::0;12861:18;;;12854:34;;;18775:13:163::1;::::0;;::::1;-1:-1:-1::0;;;;;18775:13:163::1;::::0;18755:39:::1;::::0;12767:18:253;;18755:60:163::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;18870:13:163;;18831:53:::1;::::0;;4609:25:253;;;18870:13:163::1;::::0;;::::1;-1:-1:-1::0;;;;;18870:13:163::1;4665:2:253::0;4650:18;;4643:60;18849:10:163::1;::::0;-1:-1:-1;18839:8:163;;-1:-1:-1;18831:53:163::1;::::0;4582:18:253;18831:53:163::1;;;;;;;18330:561;18206:685:::0;;;:::o;17680:114::-;17749:38;;-1:-1:-1;;;17749:38:163;;;;;;;;;;;29653:338;29802:5;3981:23;;;;;;;;;;:30;29775:8;;3981:30;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;29823:19:::1;29845:23:::0;;;::::1;::::0;;;;;;29915:10:::1;::::0;::::1;29904:37:::0;;29845:23;;29823:19;29904:37:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29878:63;;29959:4;:14;;;-1:-1:-1::0;;;;;29959:23:163::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29952:32:::0;29653:338;-1:-1:-1;;;;;29653:338:163:o;29101:414::-;3981:13;:23;;;;;;;;;;:30;29248:13;;29221:8;;3981:30;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;29277:19:::1;29299:23:::0;;;::::1;::::0;;;;;;29369:10:::1;::::0;::::1;29358:37:::0;;29299:23;;29277:19;29358:37:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29332:63;;29409:21;29434:50;29456:4;:14;;;29472:4;:11;;;29434:21;:50::i;:::-;29406:78:::0;29101:414;-1:-1:-1;;;;;;;29101:414:163:o;2517:225:53:-;2622:10;2595:4;2611:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;2611:32:53;;;;;;;;;;;:43;;-1:-1:-1;;2611:43:53;;;;;;;;;;2670;;2024:41:253;;;2595:4:53;;2622:10;2670:43;;1997:18:253;2670:43:53;;;;;;;-1:-1:-1;2731:4:53;2517:225;;;;:::o;8765:134:156:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8870:13:156;:22;;;;;;;;;;;;8863:29;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8863:29:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8870:22;8863:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8765:134;;;:::o;15896:1514:163:-;16037:7;3981:23;;;;;;;;;;:30;16018:8;;3981:30;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;16088:19:::1;16110:23:::0;;;::::1;::::0;;;;;;16180:10:::1;::::0;::::1;16169:37:::0;;16110:23;;16088:19;16169:37:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16279:10:::0;;16143:63;;-1:-1:-1;16260:29:163::1;;:15;:29;16256:43;;16298:1;16291:8;;;;;;16256:43;-1:-1:-1::0;;;;;16362:17:163;;::::1;16334:25;16362:17:::0;;;:9:::1;:17;::::0;;;;;;;:27;;;;;;;;;16436:13;;16362:27;;16436:13:::1;::::0;;::::1;;:27:::0;:86:::1;;16490:13:::0;;16470:52:::1;::::0;-1:-1:-1;;;16470:52:163;;-1:-1:-1;;;;;2628:32:253;;;16470:52:163::1;::::0;::::1;2610:51:253::0;16490:13:163::1;::::0;;::::1;::::0;;::::1;::::0;16470:44:::1;::::0;2583:18:253;;16470:52:163::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16436:86;;;16466:1;16436:86;-1:-1:-1::0;;;;;16557:19:163;::::1;16532:22;16557:19:::0;;;:11:::1;:19;::::0;;;;;;;:29;;;;;;;;;16399:123;;-1:-1:-1;16557:29:163;16618:34:::1;16399:123:::0;16618:17;:34:::1;:::i;:::-;:51;;;;:::i;:::-;16596:73;;16785:14;16895:4;:11;;;16876:30;;:15;:30;16872:279;;-1:-1:-1::0;16931:11:163;16872:279:::1;;;17103:10:::0;;17062:78:::1;::::0;17085:28:::1;::::0;::::1;;:15;:28;:::i;:::-;17129:10:::0;;17115:11:::1;::::0;::::1;::::0;:24:::1;::::0;17129:10;17115:24:::1;:::i;:::-;17062:11:::0;;:78;::::1;;:22;:78::i;:::-;17053:87;;16872:279;17239:14;17230:6;:23;17226:78;;;17276:17;;-1:-1:-1::0;;;17276:17:163::1;;;;;;;;;;;17226:78;17355:24;17365:14:::0;17355:24;::::1;:::i;:::-;::::0;-1:-1:-1;;;;;;;;4054:1:163::1;15896:1514:::0;;;;;:::o;1027:63:156:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1027:63:156;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21882:156:163:-;21967:7;21993:38;;-1:-1:-1;;;21993:38:163;;;;;;;;;;;19176:686;3981:13;:23;;;;;;;;;;:30;19292:8;;3981:30;;;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;4172:1:::1;4129:23:::0;;;::::1;::::0;;;;;;:31;19322:8;;4129:31:::1;::::0;::::1;-1:-1:-1::0;;;;;4129:31:163::1;4125:98;;4197:15;;-1:-1:-1::0;;;4197:15:163::1;;;;;;;;;;;4125:98;19346:7:::2;19357:1;19346:12:::0;19342:40:::2;;19367:15;;-1:-1:-1::0;;;19367:15:163::2;;;;;;;;;;;19342:40;19393:19;19415:23:::0;;;::::2;::::0;;;;;;;;19503:13;;19532:34;;-1:-1:-1;;;19532:34:163;;19555:10:::2;19532:34;::::0;::::2;2610:51:253::0;19415:23:163;;19503:13:::2;::::0;::::2;-1:-1:-1::0;;;;;19503:13:163::2;::::0;19569:7;;19503:13;;19532:22:::2;::::0;2583:18:253;;19532:34:163::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;19528:78;;;19585:21;;-1:-1:-1::0;;;19585:21:163::2;;;;;;;;;;;19528:78;19662:38;::::0;-1:-1:-1;;;19662:38:163;;19680:10:::2;19662:38;::::0;::::2;12794:51:253::0;12861:18;;;12854:34;;;-1:-1:-1;;;;;19662:17:163;::::2;::::0;::::2;::::0;12767:18:253;;19662:38:163::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;19748:36;19754:10;19766:8;19776:7;19748:5;:36::i;:::-;19841:13:::0;;19800:55:::2;::::0;;4609:25:253;;;19841:13:163::2;::::0;;::::2;-1:-1:-1::0;;;;;19841:13:163::2;4665:2:253::0;4650:18;;4643:60;19820:10:163::2;::::0;19810:8;;19800:55:::2;::::0;4582:18:253;19800:55:163::2;;;;;;;19332:530;;4054:1:::1;19176:686:::0;;;:::o;14601:517::-;3981:13;:23;;;;;;;;;;:30;14717:8;;3981:30;;;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;14741:7:::1;14752:1;14741:12:::0;14737:40:::1;;14762:15;;-1:-1:-1::0;;;14762:15:163::1;;;;;;;;;;;14737:40;14825:24;14852:32;14863:10;14875:8;14852:10;:32::i;:::-;14825:59;;14996:7;14977:16;:26;14973:60;;;15012:21;;-1:-1:-1::0;;;15012:21:163::1;;;;;;;;;;;14973:60;15073:38;15081:8;15091:10;15103:7;15073;:38::i;:::-;14727:391;14601:517:::0;;;:::o;21519:290::-;21645:4;21694:25;21722:29;21743:7;21722:20;:29::i;:::-;21694:57;;21769:33;21779:16;21797:4;21769:9;:33::i;:::-;21762:40;21519:290;-1:-1:-1;;;;21519:290:163:o;3760:114::-;3809:7;3835:32;-1:-1:-1;;;3865:1:163;3835:11;:32::i;:::-;3828:39;;3760:114;:::o;23525:398::-;23654:7;23706:25;23734:29;23755:7;23734:20;:29::i;:::-;23892:10;;23904:11;;;;23706:57;;-1:-1:-1;23803:16:163;;23864:52;;23803:16;;23864:10;:52::i;11687:458::-;11864:7;3981:23;;;;;;;;;;:30;11864:7;;;;11845:8;;3981:30;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;11929:7:::1;11940:1;11929:12:::0;11925:40:::1;;11950:15;;-1:-1:-1::0;;;11950:15:163::1;;;;;;;;;;;11925:40;11976:19;11998:23:::0;;;::::1;::::0;;;;;;12032:54:::1;12046:3:::0;12012:8;12061:7;11998:23;12077:8;12032:13:::1;:54::i;:::-;12115:13:::0;12105:8;;12115:13:::1;::::0;;::::1;-1:-1:-1::0;;;;;12115:13:163::1;::::0;-1:-1:-1;12130:7:163;;11687:458;-1:-1:-1;;;;;11687:458:163:o;9682:946::-;9902:16;9920:23;9945:22;10011:7;10022:1;10011:12;10007:40;;10032:15;;-1:-1:-1;;;10032:15:163;;;;;;;;;;;10007:40;10087:27;10117:29;10138:7;10117:20;:29::i;:::-;10087:59;;10192:35;10202:16;10220:6;10192:9;:35::i;:::-;:44;;10231:5;10192:44;10188:97;;10259:15;;-1:-1:-1;;;10259:15:163;;;;;;;;;;;10188:97;10360:51;10376:16;10394:6;10402:8;10360:15;:51::i;:::-;-1:-1:-1;10459:19:163;10481:23;;;;;;;;;;10346:65;;-1:-1:-1;10515:54:163;10529:3;10346:65;10544:7;10481:23;10560:8;10515:13;:54::i;:::-;10598:13;9682:946;;10598:13;;;;-1:-1:-1;;;;;10598:13:163;;-1:-1:-1;10613:7:163;;-1:-1:-1;9682:946:163;;-1:-1:-1;;;;;9682:946:163:o;13040:46:158:-;11501:10;-1:-1:-1;;;;;11515:6:158;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:158;;11548:10;11530:29;;;2610:51:253;2583:18;;11530:29:158;;;;;;;;11497:62;13040:46::o;13922:411:163:-;3981:13;:23;;;;;;;;;;:30;14002:8;;3981:30;;;;:39;;;;3977:67;;4029:15;;-1:-1:-1;;;4029:15:163;;;;;;;;;;;3977:67;14065:24:::1;14092:32;14103:10;14115:8;14092:10;:32::i;:::-;14065:59;;14188:16;14208:1;14188:21:::0;14184:55:::1;;14218:21;;-1:-1:-1::0;;;14218:21:163::1;;;;;;;;;;;14184:55;14279:47;14287:8;14297:10;14309:16;14279:7;:47::i;:::-;14012:321;13922:411:::0;;:::o;24283:474::-;24388:13;24403;24464:18;24484:19;24505:17;24526:24;:7;:22;;;:24::i;:::-;24463:87;;;;;;24606:5;-1:-1:-1;;;;;24606:10:163;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24606:12:163;;;;;;;;;;;;:::i;:::-;24625:4;24636:5;24648:3;24589:63;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24691:5;-1:-1:-1;;;;;24691:12:163;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24691:14:163;;;;;;;;;;;;:::i;:::-;24712:4;24723:5;24735:3;24674:65;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24561:189;;;;;;;24283:474;;;;;:::o;22398:261::-;-1:-1:-1;;;;;;;;;;;;;;;;;22555:19:163;22537:7;:14;:37;22533:65;;22583:15;;-1:-1:-1;;;22583:15:163;;;;;;;;;;;22533:65;22627:7;22616:36;;;;;;;;;;;;:::i;20737:648::-;20924:11;;20855:4;;20924:16;;;;:37;;-1:-1:-1;20944:12:163;;;;:17;;;20924:37;20920:55;;;-1:-1:-1;20970:5:163;20963:12;;20920:55;21100:5;:12;;;21085:27;;:5;:11;;;:27;;;21081:45;;-1:-1:-1;21121:5:163;21114:12;;21081:45;21219:5;:12;;;21204:27;;:5;:11;;;:27;;;21200:45;;-1:-1:-1;21240:5:163;21233:12;;21200:45;-1:-1:-1;;;;;21312:30:163;;21308:48;;-1:-1:-1;21351:5:163;21344:12;;21308:48;-1:-1:-1;21374:4:163;20737:648;;;;:::o;25391:1275::-;25535:16;25553:23;25620:21;25650:16;25620:47;;25688:58;25699:15;25716:7;:13;;;25731:7;:14;;;25688:10;:58::i;:::-;25805:19;25827:23;;;;;;;;;;25864:12;;25677:69;;-1:-1:-1;25827:23:163;25864:12;;:21;;;;25860:622;;25938:19;;25953:4;-1:-1:-1;;25938:19:163;;;;;;;25971:21;;:40;;-1:-1:-1;;;;;;25971:40:163;-1:-1:-1;;;;;25971:40:163;;;;;;;;;;26066:165;;;;;;;;;26107:13;;26066:165;;;;;;;;26150:14;;;;26066:165;;;;;;;;;;;;;;;;;26038:207;;;;;16739:41:253;;;;16822:24;;16818:33;;;16796:20;;;16789:63;16894:24;;16890:50;;;16868:20;;;16861:80;26038:207:163;;;;;;;;;;16679:18:253;;26038:207:163;;26025:10;;;;:220;;:10;:220;:::i;:::-;-1:-1:-1;26318:13:163;:23;;;;;;;;;;:31;;;;;;;;;;-1:-1:-1;;26318:31:163;;;;;;;;-1:-1:-1;;;;;26318:31:163;;;;;;;;;;-1:-1:-1;;;;;;26318:31:163;;;-1:-1:-1;;;;;;26318:31:163;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;26318:31:163;;;;;;;;26344:5;;26318:31;;;;;;;;;;;:::i;:::-;-1:-1:-1;;26423:13:163;;26438:14;;;;;26395:76;;;20789:14:253;20830:15;;;20812:34;;20882:15;;;;20862:18;;;20855:43;;;;-1:-1:-1;;;;;20934:32:253;;20914:18;;;20907:60;26395:76:163;26413:8;;-1:-1:-1;26395:76:163;;;;;20767:2:253;26395:76:163;;;25860:622;26546:8;26542:75;;;26570:36;26590:8;26600:5;26570:19;:36::i;:::-;;26542:75;26645:13;-1:-1:-1;;;;;26645:13:163;;;;;;-1:-1:-1;;25391:1275:163;;;;;;:::o;3611:222:53:-;-1:-1:-1;;;;;3727:17:53;;;;;;:9;:17;;;;;;;;:21;;;;;;;;:31;;3752:6;;3727:17;:31;;3752:6;;3727:31;:::i;:::-;;;;-1:-1:-1;;3774:52:53;;;3783:10;12794:51:253;;12876:2;12861:18;;12854:34;;;3815:2:53;;3811:1;;-1:-1:-1;;;;;3774:52:53;;;;;12767:18:253;3774:52:53;;;;;;;;3611:222;;;:::o;27087:1281:163:-;27284:14;;27196:22;;27284:14;;;-1:-1:-1;;;;;27284:14:163;27280:1050;;27402:15;-1:-1:-1;;;;;27402:29:163;27398:57;;27440:15;;-1:-1:-1;;;27440:15:163;;;;;;;;;;;27398:57;27504:23;27541:6;:11;;27530:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27504:64;;27633:19;27654:21;27695:50;27717:4;:14;;;27733:4;:11;;;27695:21;:50::i;:::-;27632:113;;;;27759:29;27839:5;27825:21;;;:::i;:::-;27872:23;27886:7;27872:23;:::i;:::-;27929:4;:14;;;-1:-1:-1;;;;;27929:23:163;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27992:4;:11;;;27985:19;;28050:4;28090;:14;;;27791:342;;;;;;;;;;;;21543:19:253;;;21587:2;21578:12;;21571:28;;;;21655:3;21633:16;;;;-1:-1:-1;;;;;;21629:36:253;21624:2;21615:12;;21608:58;21722:3;21700:16;-1:-1:-1;;;;;;21696:51:253;21691:2;21682:12;;21675:73;21836:2;21832:15;;;-1:-1:-1;;21828:24:253;;;21823:2;21814:12;;21807:46;21887:15;;;21883:24;21878:2;21869:12;;21862:46;21933:3;21924:13;;21280:663;27791:342:163;;;;-1:-1:-1;;27791:342:163;;;;;;;;;;-1:-1:-1;28164:59:163;-1:-1:-1;;;;;28164:15:163;:22;27791:342;28213:8;28164:22;:59::i;:::-;28147:76;;-1:-1:-1;;;;;;28147:76:163;;-1:-1:-1;;;;;28147:76:163;;;;;;;;;;;;28269:50;;28304:14;;;;;;2610:51:253;;28294:8:163;;28269:50;;2598:2:253;2583:18;28269:50:163;;;;;;;27314:1016;;;;27280:1050;-1:-1:-1;28347:14:163;;;;-1:-1:-1;;;;;28347:14:163;;27087:1281;-1:-1:-1;27087:1281:163:o;1564:526:54:-;1680:9;1928:1;-1:-1:-1;;1911:19:54;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:54;;2047:27;;1564:526::o;3377:228:53:-;-1:-1:-1;;;;;3495:19:53;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;3522:6;;3495:19;:33;;3522:6;;3495:33;:::i;:::-;;;;-1:-1:-1;;3544:54:53;;;3553:10;12794:51:253;;12876:2;12861:18;;12854:34;;;3587:2:53;;-1:-1:-1;;;;;3544:54:53;;;3573:1;;3544:54;;12767:18:253;3544:54:53;12620:274:253;12544:1341:163;12630:23;12656;;;;;;;;;;;-1:-1:-1;;;;;12760:16:163;;;;;:9;:16;;;;;:26;;;;;;;;;;12821:17;;12656:23;;12760:26;;12630:23;;12821:17;;;;:31;:117;;12903:17;;12883:55;;-1:-1:-1;;;12883:55:163;;-1:-1:-1;;;;;2628:32:253;;;12883:55:163;;;2610:51:253;12903:17:163;;;;;;;;12883:48;;2583:18:253;;12883:55:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12821:117;;;12867:1;12821:117;12796:142;;12949:24;12986:17;12976:7;:27;:57;;13026:7;12976:57;;;13006:17;12976:57;12949:84;-1:-1:-1;13043:21:163;13067:26;12949:84;13067:7;:26;:::i;:::-;13043:50;;13123:14;13107:13;:30;13103:89;;;13160:21;;-1:-1:-1;;;13160:21:163;;;;;;;;;;;13103:89;-1:-1:-1;;;;;13246:18:163;;;;;;:11;:18;;;;;;;;:28;;;;;;;;:39;;13278:7;;13246:18;:39;;13278:7;;13246:39;:::i;:::-;;;;-1:-1:-1;;13337:20:163;;13333:91;;13373:40;13379:5;13386:8;13396:16;13373:5;:40::i;:::-;13499:17;;13495:113;;13552:17;;13532:65;;-1:-1:-1;;;13532:65:163;;-1:-1:-1;;;;;12812:32:253;;;13532:65:163;;;12794:51:253;12861:18;;;12854:34;;;13552:17:163;;;;;;;;13532:43;;12767:18:253;;13532:65:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13495:113;13672:30;13716:9;:14;;13705:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13756:21;;;;13672:74;;-1:-1:-1;13756:50:163;;-1:-1:-1;;;;;13756:34:163;13791:5;13798:7;13756:34;:50::i;:::-;13863:5;-1:-1:-1;;;;;13844:34:163;13853:8;13844:34;13870:7;13844:34;;;;1557:25:253;;1545:2;1530:18;;1411:177;13844:34:163;;;;;;;;12620:1265;;;;;;12544:1341;;;:::o;758:361:157:-;827:7;;906:13;917:2;906:8;:13;:::i;:::-;:20;;922:4;906:20;:::i;:::-;899:28;;;-1:-1:-1;933:18:157;962:13;973:2;962:8;:13;:::i;:::-;961:22;;979:4;961:22;:::i;:::-;1063:51;;-1:-1:-1;;;;;;22818:15:253;;;1063:51:157;;;22806:28:253;954:30:157;;;;;22863:15:253;;;22850:11;;;22843:36;-1:-1:-1;;;;;;22908:35:253;;22895:11;;;22888:56;954:30:157;;-1:-1:-1;22960:11:253;;1063:51:157;;;;;;;;;;;;1056:59;;;:::i;23125:266:163:-;23242:7;23316:9;:7;:9::i;:::-;23337:34;;;-1:-1:-1;;;;;23585:32:253;;23337:34:163;;;23567:51:253;23637:14;23687:15;;;23667:18;;;23660:43;;;;23739:15;;;23719:18;;;23712:43;23540:18;;23337:34:163;;;-1:-1:-1;;23337:34:163;;;;;;;;;;23327:45;;23337:34;23327:45;;;;-1:-1:-1;;;;;;23963:39:253;;;23299:74:163;;;23951:52:253;24019:11;;;24012:27;;;;24055:12;;23299:74:163;;;-1:-1:-1;;23299:74:163;;;;;;;;;23289:85;;23299:74;23289:85;;;;;23125:266;-1:-1:-1;;;;23125:266:163:o;7031:1305::-;7314:8;7310:76;;;7338:37;7358:8;7368:6;7338:19;:37::i;:::-;;7310:76;7464:23;7501:6;:11;;7490:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7566:14;;;;;:39;;-1:-1:-1;;;7566:39:163;;7599:4;7566:39;;;2610:51:253;7464:64:163;;-1:-1:-1;7542:21:163;;-1:-1:-1;;;;;7566:24:163;;;;;;2583:18:253;;7566:39:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7619:14;;;;7542:63;;-1:-1:-1;7619:67:163;;-1:-1:-1;;;;;7619:31:163;7651:10;7671:4;7678:7;7619:31;:67::i;:::-;7804:23;7820:7;7804:13;:23;:::i;:::-;7762:14;;;;;:39;;-1:-1:-1;;;7762:39:163;;7795:4;7762:39;;;2610:51:253;-1:-1:-1;;;;;7762:24:163;;;;;;2583:18:253;;7762:39:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;7758:152;;;7879:14;;;;;7854:41;;-1:-1:-1;;;7854:41:163;;-1:-1:-1;;;;;2628:32:253;;;7854:41:163;;;2610:51:253;2583:18;;7854:41:163;2464:203:253;7758:152:163;7450:470;;7991:8;7987:343;;;8019:14;;;;;-1:-1:-1;;;;;8019:14:163;8015:56;;8056:15;;-1:-1:-1;;;8056:15:163;;;;;;;;;;;8015:56;8141:14;;8170:31;;-1:-1:-1;;;8170:31:163;;-1:-1:-1;;;;;12812:32:253;;;8170:31:163;;;12794:51:253;12861:18;;;12854:34;;;8141:14:163;;;;;;;;;;8170:17;;12767:18:253;;8170:31:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8001:211;7987:343;;;8290:29;8296:3;8301:8;8311:7;8290:5;:29::i;:::-;7031:1305;;;;;:::o;129:1494:143:-;218:13;;;499:12;;;;602:25;621:6;608:9;602:25;:::i;:::-;595:33;;;-1:-1:-1;643:11:143;657:15;595:33;666:6;657:15;:::i;:::-;:27;;675:9;657:27;:::i;:::-;643:41;-1:-1:-1;726:11:143;753:7;741:8;643:41;741:1;:8;:::i;:::-;740:20;;;;:::i;:::-;726:34;-1:-1:-1;811:1:143;789:14;726:34;789:7;:14;:::i;:::-;:18;;806:1;789:18;:::i;:::-;788:24;;;;:::i;:::-;781:31;;:4;:31;:::i;:::-;774:38;-1:-1:-1;826:12:143;863:9;850:8;774:38;857:1;850:8;:::i;:::-;842:17;;:4;:17;:::i;:::-;841:31;;;;:::i;:::-;826:46;-1:-1:-1;917:1:143;901:12;826:46;901:4;:12;:::i;:::-;900:18;;;;:::i;:::-;893:25;;:4;:25;:::i;:::-;:30;;921:2;893:30;:::i;:::-;886:37;-1:-1:-1;937:13:143;967:4;954:9;886:37;954:2;:9;:::i;:::-;953:18;;;;:::i;:::-;937:34;-1:-1:-1;985:11:143;1024:2;1007:13;937:34;1007:4;:13;:::i;:::-;1006:20;;;;:::i;:::-;999:27;;:4;:27;:::i;:::-;985:41;-1:-1:-1;1047:11:143;1056:2;1047:6;:11;:::i;:::-;1040:18;-1:-1:-1;1094:9:143;1040:18;1094:2;:9;:::i;:::-;1081:10;:6;1090:1;1081:10;:::i;:::-;:22;;;;:::i;:::-;1072:31;-1:-1:-1;1153:4:143;1145:5;1132:9;1139:2;1132:4;:9;:::i;:::-;1125:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;1117:40;-1:-1:-1;1223:6:143;;-1:-1:-1;1258:4:143;-1:-1:-1;1284:21:143;;-1:-1:-1;1308:23:143;;-1:-1:-1;1317:13:143;;-1:-1:-1;1324:6:143;;-1:-1:-1;1117:40:143;1317:13;:::i;:::-;1308:8;:23::i;:::-;1284:47;;1341:22;1386:2;1378:5;:10;:77;;1440:15;1449:5;1440:8;:15::i;:::-;1378:77;;;1420:15;1429:5;1420:8;:15::i;:::-;1398:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;1378:77;1341:114;;1465:20;1506:2;1500:3;:8;:71;;1558:13;1567:3;1558:8;:13::i;:::-;1500:71;;;1540:13;1549:3;1540:8;:13::i;:::-;1518:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;1500:71;1590:7;;1599:8;;-1:-1:-1;1590:7:143;;-1:-1:-1;129:1494:143;-1:-1:-1;;;;;;129:1494:143:o;9633:10091:148:-;9900:11;;10177:4;10171:11;-1:-1:-1;;;10672:79:148;;10800:21;;;10795:3;10791:31;;;9914:1;10775:14;;;10768:55;;;;-1:-1:-1;;;11540:4:148;11531:14;;11503:148;-1:-1:-1;;;10818:2:148;12452:14;;12424:148;9900:15;;12612:21;;12605:4;12596:14;;12589:45;;;-1:-1:-1;;;13549:4:148;13540:14;;13512:148;13693:4;13684:14;;13677:45;-1:-1:-1;;;14088:4:148;14079:14;;14051:148;14243:4;14239:25;;;14232:4;14223:14;;;14216:49;;;;-1:-1:-1;;;15873:4:148;15864:14;;15836:148;9754:16;;9900:11;10020:18;;;;9900:11;;10020:4;16481:10;;;16632:13;;16672:276;16690:2;16679:7;:13;16672:276;;16838:14;;16822:31;;-1:-1:-1;;16694:13:148;;;;16900:2;16889:13;;;;16920;16672:276;;;16961:12;17002:1;16991:7;16986:2;:12;16978:3;:21;:25;16976:28;16961:43;;17141:4;17131:7;17125:14;17121:25;17112:7;17105:42;17185:7;17174:18;;;;17318:11;17313:3;17309:21;17300:7;17293:38;17573:23;17567:4;17560:37;17731:4;17725;17719;17716:1;17708:28;17839:5;17829:241;;17951:10;17945:4;17938:24;18047:4;18041;18034:18;17829:241;18147:5;18141:4;18134:19;18367:6;18361:4;18354:20;18457:4;18451;18443:19;18508:4;18502;18492:21;18480:33;;19374:4;19319;19248:12;19183:3;19136:1;19081:5;19028;18994:431;18962:485;18930:8;18918:21;18911:29;18887:578;18884:810;;;19575:10;19569:4;19562:24;19671:4;19665;19658:18;18884:810;;17475:2233;;;;;;;9633:10091;;;;;:::o;3116:1607:56:-;3228:12;3398:4;3392:11;-1:-1:-1;;;3521:17:56;3514:93;-1:-1:-1;;;;;3658:2:56;3654:51;3650:1;3631:17;3627:25;3620:86;3792:6;3787:2;3768:17;3764:26;3757:42;4644:2;4641:1;4637:2;4618:17;4615:1;4608:5;4601;4596:51;4165:16;4158:24;4152:2;4134:16;4131:24;4127:1;4123;4117:8;4114:15;4110:46;4107:76;3907:754;3896:765;;;4689:7;4681:35;;;;-1:-1:-1;;;4681:35:56;;25986:2:253;4681:35:56;;;25968:21:253;26025:2;26005:18;;;25998:30;-1:-1:-1;;;26044:18:253;;;26037:45;26099:18;;4681:35:56;25784:339:253;1328:1782:56;1466:12;1636:4;1630:11;-1:-1:-1;;;1759:17:56;1752:93;-1:-1:-1;;;;;1896:4:56;1892:53;1888:1;1869:17;1865:25;1858:88;-1:-1:-1;;;;;2038:2:56;2034:51;2029:2;2010:17;2006:26;1999:87;2172:6;2167:2;2148:17;2144:26;2137:42;3026:2;3023:1;3018:3;2999:17;2996:1;2989:5;2982;2977:52;2545:16;2538:24;2532:2;2514:16;2511:24;2507:1;2503;2497:8;2494:15;2490:46;2487:76;2287:756;2276:767;;;3071:7;3063:40;;;;-1:-1:-1;;;3063:40:56;;26330:2:253;3063:40:56;;;26312:21:253;26369:2;26349:18;;;26342:30;-1:-1:-1;;;26388:18:253;;;26381:50;26448:18;;3063:40:56;26128:344:253;262:466:145;306:13;331:2;337:1;331:7;327:40;;-1:-1:-1;;350:10:145;;;;;;;;;;;;-1:-1:-1;;;350:10:145;;;;;262:466::o;327:40::-;384:2;372:9;409:54;416:6;;409:54;;434:5;;;;:::i;:::-;;-1:-1:-1;449:7:145;;-1:-1:-1;454:2:145;449:7;;:::i;:::-;;;409:54;;;468:17;498:3;488:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;488:14:145;-1:-1:-1;468:34:145;-1:-1:-1;520:3:145;529:172;536:7;;529:172;;559:5;563:1;559;:5;:::i;:::-;555:9;-1:-1:-1;574:10:145;605:7;610:2;605;:7;:::i;:::-;604:14;;616:2;604:14;:::i;:::-;599:19;;:2;:19;:::i;:::-;588:31;;:2;:31;:::i;:::-;574:46;;630:9;649:4;642:12;;630:24;;674:2;664:4;669:1;664:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;664:12:145;;;;;;;;-1:-1:-1;686:8:145;692:2;686:8;;:::i;:::-;;;545:156;;529:172;;;-1:-1:-1;720:4:145;262:466;-1:-1:-1;;;;262:466:145:o;14:180:253:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:253;;14:180;-1:-1:-1;14:180:253:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:253;423:16;;416:27;199:250::o;454:271::-;496:3;534:5;528:12;561:6;556:3;549:19;577:76;646:6;639:4;634:3;630:14;623:4;616:5;612:16;577:76;:::i;:::-;707:2;686:15;-1:-1:-1;;682:29:253;673:39;;;;714:4;669:50;;454:271;-1:-1:-1;;454:271:253:o;730:220::-;879:2;868:9;861:21;842:4;899:45;940:2;929:9;925:18;917:6;899:45;:::i;:::-;891:53;730:220;-1:-1:-1;;;730:220:253:o;955:131::-;-1:-1:-1;;;;;1030:31:253;;1020:42;;1010:70;;1076:1;1073;1066:12;1010:70;955:131;:::o;1091:315::-;1159:6;1167;1220:2;1208:9;1199:7;1195:23;1191:32;1188:52;;;1236:1;1233;1226:12;1188:52;1275:9;1262:23;1294:31;1319:5;1294:31;:::i;:::-;1344:5;1396:2;1381:18;;;;1368:32;;-1:-1:-1;;;1091:315:253:o;1593:286::-;1651:6;1704:2;1692:9;1683:7;1679:23;1675:32;1672:52;;;1720:1;1717;1710:12;1672:52;1746:23;;-1:-1:-1;;;;;;1798:32:253;;1788:43;;1778:71;;1845:1;1842;1835:12;2076:383;2153:6;2161;2169;2222:2;2210:9;2201:7;2197:23;2193:32;2190:52;;;2238:1;2235;2228:12;2190:52;2277:9;2264:23;2296:31;2321:5;2296:31;:::i;:::-;2346:5;2398:2;2383:18;;2370:32;;-1:-1:-1;2449:2:253;2434:18;;;2421:32;;2076:383;-1:-1:-1;;;2076:383:253:o;2672:127::-;2733:10;2728:3;2724:20;2721:1;2714:31;2764:4;2761:1;2754:15;2788:4;2785:1;2778:15;2804:275;2875:2;2869:9;2940:2;2921:13;;-1:-1:-1;;2917:27:253;2905:40;;2975:18;2960:34;;2996:22;;;2957:62;2954:88;;;3022:18;;:::i;:::-;3058:2;3051:22;2804:275;;-1:-1:-1;2804:275:253:o;3084:186::-;3132:4;3165:18;3157:6;3154:30;3151:56;;;3187:18;;:::i;:::-;-1:-1:-1;3253:2:253;3232:15;-1:-1:-1;;3228:29:253;3259:4;3224:40;;3084:186::o;3275:462::-;3317:5;3370:3;3363:4;3355:6;3351:17;3347:27;3337:55;;3388:1;3385;3378:12;3337:55;3424:6;3411:20;3455:48;3471:31;3499:2;3471:31;:::i;:::-;3455:48;:::i;:::-;3528:2;3519:7;3512:19;3574:3;3567:4;3562:2;3554:6;3550:15;3546:26;3543:35;3540:55;;;3591:1;3588;3581:12;3540:55;3656:2;3649:4;3641:6;3637:17;3630:4;3621:7;3617:18;3604:55;3704:1;3679:16;;;3697:4;3675:27;3668:38;;;;3683:7;3275:462;-1:-1:-1;;;3275:462:253:o;3742:160::-;3807:20;;3863:13;;3856:21;3846:32;;3836:60;;3892:1;3889;3882:12;3836:60;3742:160;;;:::o;3907:523::-;3990:6;3998;4006;4059:2;4047:9;4038:7;4034:23;4030:32;4027:52;;;4075:1;4072;4065:12;4027:52;4114:9;4101:23;4133:31;4158:5;4133:31;:::i;:::-;4183:5;-1:-1:-1;4239:2:253;4224:18;;4211:32;4266:18;4255:30;;4252:50;;;4298:1;4295;4288:12;4252:50;4321:49;4362:7;4353:6;4342:9;4338:22;4321:49;:::i;:::-;4311:59;;;4389:35;4420:2;4409:9;4405:18;4389:35;:::i;:::-;4379:45;;3907:523;;;;;:::o;4714:248::-;4782:6;4790;4843:2;4831:9;4822:7;4818:23;4814:32;4811:52;;;4859:1;4856;4849:12;4811:52;-1:-1:-1;;4882:23:253;;;4952:2;4937:18;;;4924:32;;-1:-1:-1;4714:248:253:o;5156:315::-;5221:6;5229;5282:2;5270:9;5261:7;5257:23;5253:32;5250:52;;;5298:1;5295;5288:12;5250:52;5337:9;5324:23;5356:31;5381:5;5356:31;:::i;:::-;5406:5;-1:-1:-1;5430:35:253;5461:2;5446:18;;5430:35;:::i;:::-;5420:45;;5156:315;;;;;:::o;5476:456::-;5553:6;5561;5569;5622:2;5610:9;5601:7;5597:23;5593:32;5590:52;;;5638:1;5635;5628:12;5590:52;5677:9;5664:23;5696:31;5721:5;5696:31;:::i;:::-;5746:5;-1:-1:-1;5803:2:253;5788:18;;5775:32;5816:33;5775:32;5816:33;:::i;:::-;5476:456;;5868:7;;-1:-1:-1;;;5922:2:253;5907:18;;;;5894:32;;5476:456::o;5937:634::-;6114:2;6103:9;6096:21;6173:6;6167:13;6160:21;6153:29;6148:2;6137:9;6133:18;6126:57;6077:4;6230:2;6222:6;6218:15;6212:22;6270:1;6266;6261:3;6257:11;6253:19;6326:2;6312:12;6308:21;6303:2;6292:9;6288:18;6281:49;6394:2;6388;6380:6;6376:15;6370:22;6366:31;6361:2;6350:9;6346:18;6339:59;;;6447:2;6439:6;6435:15;6429:22;6489:4;6482;6471:9;6467:20;6460:34;6511:54;6560:3;6549:9;6545:19;6529:14;6511:54;:::i;6576:499::-;6808:14;;6801:22;6783:41;;-1:-1:-1;;;;;6898:15:253;;;6893:2;6878:18;;6871:43;6950:15;;6945:2;6930:18;;6923:43;7002:3;6997:2;6982:18;;6975:31;;;6764:4;;7023:46;;7049:19;;7041:6;7023:46;:::i;:::-;7015:54;6576:499;-1:-1:-1;;;;;;6576:499:253:o;7080:388::-;7157:6;7165;7218:2;7206:9;7197:7;7193:23;7189:32;7186:52;;;7234:1;7231;7224:12;7186:52;7274:9;7261:23;7307:18;7299:6;7296:30;7293:50;;;7339:1;7336;7329:12;7293:50;7362:49;7403:7;7394:6;7383:9;7379:22;7362:49;:::i;:::-;7352:59;7458:2;7443:18;;;;7430:32;;-1:-1:-1;;;;7080:388:253:o;7473:::-;7541:6;7549;7602:2;7590:9;7581:7;7577:23;7573:32;7570:52;;;7618:1;7615;7608:12;7570:52;7657:9;7644:23;7676:31;7701:5;7676:31;:::i;:::-;7726:5;-1:-1:-1;7783:2:253;7768:18;;7755:32;7796:33;7755:32;7796:33;:::i;:::-;7848:7;7838:17;;;7473:388;;;;;:::o;7866:338::-;8008:2;7993:18;;8041:1;8030:13;;8020:144;;8086:10;8081:3;8077:20;8074:1;8067:31;8121:4;8118:1;8111:15;8149:4;8146:1;8139:15;8020:144;8173:25;;;7866:338;:::o;8209:455::-;8286:6;8294;8347:2;8335:9;8326:7;8322:23;8318:32;8315:52;;;8363:1;8360;8353:12;8315:52;8402:9;8389:23;8421:31;8446:5;8421:31;:::i;:::-;8471:5;-1:-1:-1;8527:2:253;8512:18;;8499:32;8554:18;8543:30;;8540:50;;;8586:1;8583;8576:12;8540:50;8609:49;8650:7;8641:6;8630:9;8626:22;8609:49;:::i;:::-;8599:59;;;8209:455;;;;;:::o;8912:452::-;8995:6;9003;9011;9019;9072:3;9060:9;9051:7;9047:23;9043:33;9040:53;;;9089:1;9086;9079:12;9040:53;9128:9;9115:23;9147:31;9172:5;9147:31;:::i;:::-;9197:5;-1:-1:-1;9249:2:253;9234:18;;9221:32;;-1:-1:-1;9300:2:253;9285:18;;9272:32;;-1:-1:-1;9323:35:253;9354:2;9339:18;;9323:35;:::i;:::-;9313:45;;8912:452;;;;;;;:::o;9719:734::-;9820:6;9828;9836;9844;9852;9905:3;9893:9;9884:7;9880:23;9876:33;9873:53;;;9922:1;9919;9912:12;9873:53;9961:9;9948:23;9980:31;10005:5;9980:31;:::i;:::-;10030:5;-1:-1:-1;10087:2:253;10072:18;;10059:32;10100:33;10059:32;10100:33;:::i;:::-;10152:7;-1:-1:-1;10210:2:253;10195:18;;10182:32;10237:18;10226:30;;10223:50;;;10269:1;10266;10259:12;10223:50;10292:49;10333:7;10324:6;10313:9;10309:22;10292:49;:::i;:::-;10282:59;;;10388:2;10377:9;10373:18;10360:32;10350:42;;10411:36;10442:3;10431:9;10427:19;10411:36;:::i;:::-;10401:46;;9719:734;;;;;;;;:::o;10458:383::-;10535:6;10543;10551;10604:2;10592:9;10583:7;10579:23;10575:32;10572:52;;;10620:1;10617;10610:12;10572:52;10656:9;10643:23;10633:33;;10716:2;10705:9;10701:18;10688:32;10729:31;10754:5;10729:31;:::i;10846:525::-;10932:6;10940;10948;10956;11009:3;10997:9;10988:7;10984:23;10980:33;10977:53;;;11026:1;11023;11016:12;10977:53;11065:9;11052:23;11084:31;11109:5;11084:31;:::i;:::-;11134:5;-1:-1:-1;11191:2:253;11176:18;;11163:32;11204:33;11163:32;11204:33;:::i;:::-;10846:525;;11256:7;;-1:-1:-1;;;;11310:2:253;11295:18;;11282:32;;11361:2;11346:18;11333:32;;10846:525::o;11376:380::-;11455:1;11451:12;;;;11498;;;11519:61;;11573:4;11565:6;11561:17;11551:27;;11519:61;11626:2;11618:6;11615:14;11595:18;11592:38;11589:161;;11672:10;11667:3;11663:20;11660:1;11653:31;11707:4;11704:1;11697:15;11735:4;11732:1;11725:15;11761:171;11839:13;;11892:14;11881:26;;11871:37;;11861:65;;11922:1;11919;11912:12;11937:678;12037:6;12090:2;12078:9;12069:7;12065:23;12061:32;12058:52;;;12106:1;12103;12096:12;12058:52;12139:2;12133:9;12181:2;12173:6;12169:15;12250:6;12238:10;12235:22;12214:18;12202:10;12199:34;12196:62;12193:88;;;12261:18;;:::i;:::-;12297:2;12290:22;12336:39;12365:9;12336:39;:::i;:::-;12328:6;12321:55;12409:48;12453:2;12442:9;12438:18;12409:48;:::i;:::-;12404:2;12396:6;12392:15;12385:73;12501:2;12490:9;12486:18;12480:25;12514:31;12539:5;12514:31;:::i;:::-;12573:2;12561:15;;12554:30;12565:6;11937:678;-1:-1:-1;;;11937:678:253:o;12899:273::-;12967:6;13020:2;13008:9;12999:7;12995:23;12991:32;12988:52;;;13036:1;13033;13026:12;12988:52;13068:9;13062:16;13118:4;13111:5;13107:16;13100:5;13097:27;13087:55;;13138:1;13135;13128:12;13177:184;13247:6;13300:2;13288:9;13279:7;13275:23;13271:32;13268:52;;;13316:1;13313;13306:12;13268:52;-1:-1:-1;13339:16:253;;13177:184;-1:-1:-1;13177:184:253:o;13366:127::-;13427:10;13422:3;13418:20;13415:1;13408:31;13458:4;13455:1;13448:15;13482:4;13479:1;13472:15;13498:125;13563:9;;;13584:10;;;13581:36;;;13597:18;;:::i;13628:128::-;13695:9;;;13716:11;;;13713:37;;;13730:18;;:::i;13761:179::-;13829:14;13876:10;;;13864;;;13860:27;;13899:12;;;13896:38;;;13914:18;;:::i;13945:648::-;14025:6;14078:2;14066:9;14057:7;14053:23;14049:32;14046:52;;;14094:1;14091;14084:12;14046:52;14127:9;14121:16;14160:18;14152:6;14149:30;14146:50;;;14192:1;14189;14182:12;14146:50;14215:22;;14268:4;14260:13;;14256:27;-1:-1:-1;14246:55:253;;14297:1;14294;14287:12;14246:55;14326:2;14320:9;14351:48;14367:31;14395:2;14367:31;:::i;14351:48::-;14422:2;14415:5;14408:17;14462:7;14457:2;14452;14448;14444:11;14440:20;14437:33;14434:53;;;14483:1;14480;14473:12;14434:53;14496:67;14560:2;14555;14548:5;14544:14;14539:2;14535;14531:11;14496:67;:::i;14598:1338::-;15176:3;15214:6;15208:13;15230:66;15289:6;15284:3;15277:4;15269:6;15265:17;15230:66;:::i;:::-;-1:-1:-1;;;15318:16:253;;;15343:18;;;15386:13;;15408:78;15386:13;15473:1;15462:13;;15455:4;15443:17;;15408:78;:::i;:::-;15516:8;15509:5;15505:20;15495:30;;;-1:-1:-1;;;15575:2:253;15571:1;15567:2;15563:10;15556:22;15609:6;15603:13;15625:75;15691:8;15687:1;15683:2;15679:10;15672:4;15664:6;15660:17;15625:75;:::i;:::-;15760:1;15719:17;;15752:10;;;15745:22;15792:13;;15814:75;15792:13;15876:1;15868:10;;15861:4;15849:17;;15814:75;:::i;:::-;15909:17;15928:1;15905:25;;14598:1338;-1:-1:-1;;;;;;14598:1338:253:o;15941:554::-;16043:6;16096:2;16084:9;16075:7;16071:23;16067:32;16064:52;;;16112:1;16109;16102:12;16064:52;16145:2;16139:9;16187:2;16179:6;16175:15;16256:6;16244:10;16241:22;16220:18;16208:10;16205:34;16202:62;16199:88;;;16267:18;;:::i;:::-;16303:2;16296:22;16342:39;16371:9;16342:39;:::i;:::-;16334:6;16327:55;16415:48;16459:2;16448:9;16444:18;16415:48;:::i;:::-;16410:2;16398:15;;16391:73;16402:6;15941:554;-1:-1:-1;;;15941:554:253:o;17077:544::-;17178:2;17173:3;17170:11;17167:448;;;17214:1;17239:5;17235:2;17228:17;17284:4;17280:2;17270:19;17354:2;17342:10;17338:19;17335:1;17331:27;17325:4;17321:38;17390:4;17378:10;17375:20;17372:47;;;-1:-1:-1;17413:4:253;17372:47;17468:2;17463:3;17459:12;17456:1;17452:20;17446:4;17442:31;17432:41;;17523:82;17541:2;17534:5;17531:13;17523:82;;;17586:17;;;17567:1;17556:13;17523:82;;;17527:3;;;17077:544;;;:::o;17797:1348::-;17921:3;17915:10;17948:18;17940:6;17937:30;17934:56;;;17970:18;;:::i;:::-;17999:96;18088:6;18048:38;18080:4;18074:11;18048:38;:::i;:::-;18042:4;17999:96;:::i;:::-;18150:4;;18214:2;18203:14;;18231:1;18226:662;;;;18932:1;18949:6;18946:89;;;-1:-1:-1;19001:19:253;;;18995:26;18946:89;-1:-1:-1;;17754:1:253;17750:11;;;17746:24;17742:29;17732:40;17778:1;17774:11;;;17729:57;19048:81;;18196:943;;18226:662;17024:1;17017:14;;;17061:4;17048:18;;-1:-1:-1;;18262:20:253;;;18379:236;18393:7;18390:1;18387:14;18379:236;;;18482:19;;;18476:26;18461:42;;18574:27;;;;18542:1;18530:14;;;;18409:19;;18379:236;;;18383:3;18643:6;18634:7;18631:19;18628:201;;;18704:19;;;18698:26;-1:-1:-1;;18787:1:253;18783:14;;;18799:3;18779:24;18775:37;18771:42;18756:58;18741:74;;18628:201;-1:-1:-1;;;;;18875:1:253;18859:14;;;18855:22;18842:36;;-1:-1:-1;17797:1348:253:o;19150:1426::-;19263:3;19257:4;19254:13;19251:26;;19270:5;;19150:1426::o;19251:26::-;19300:37;19332:3;19326:10;19300:37;:::i;:::-;19360:18;19352:6;19349:30;19346:56;;;19382:18;;:::i;:::-;19411:96;19500:6;19460:38;19492:4;19486:11;19460:38;:::i;19411:96::-;19533:1;19561:2;19553:6;19550:14;19578:1;19573:746;;;;20363:1;20380:6;20377:89;;;-1:-1:-1;20432:19:253;;;20426:26;20377:89;-1:-1:-1;;17754:1:253;17750:11;;;17746:24;17742:29;17732:40;17778:1;17774:11;;;17729:57;20479:81;;19543:1027;;19573:746;17024:1;17017:14;;;17061:4;17048:18;;-1:-1:-1;;19609:20:253;;;17024:1;17017:14;;;17061:4;17048:18;;19771:9;19793:251;19807:7;19804:1;19801:14;19793:251;;;19889:21;;;19883:28;19868:44;;19939:1;20012:18;;;;19967:15;;;;19830:4;19823:12;19793:251;;;19797:3;20072:6;20063:7;20060:19;20057:203;;;20133:21;;20127:28;-1:-1:-1;;20230:3:253;20218:1;20214:14;;;20210:24;20206:37;20202:42;20187:58;20172:74;;;-1:-1:-1;;20306:1:253;20290:14;;;20286:22;20273:36;;-1:-1:-1;19150:1426:253:o;20978:297::-;21096:12;;21143:4;21132:16;;;21126:23;;21096:12;21161:16;;21158:111;;;-1:-1:-1;;21235:4:253;21231:17;;;;21228:1;21224:25;21220:38;21209:50;;20978:297;-1:-1:-1;20978:297:253:o;21948:127::-;22009:10;22004:3;22000:20;21997:1;21990:31;22040:4;22037:1;22030:15;22064:4;22061:1;22054:15;22080:165;22118:1;22152:4;22149:1;22145:12;22176:3;22166:37;;22183:18;;:::i;:::-;22235:3;22228:4;22225:1;22221:12;22217:22;22212:27;;;22080:165;;;;:::o;22250:148::-;22338:4;22317:12;;;22331;;;22313:31;;22356:13;;22353:39;;;22372:18;;:::i;22403:157::-;22433:1;22467:4;22464:1;22460:12;22491:3;22481:37;;22498:18;;:::i;:::-;22550:3;22543:4;22540:1;22536:12;22532:22;22527:27;;;22403:157;;;;:::o;22982:367::-;23099:12;;23147:4;23136:16;;23130:23;-1:-1:-1;;;;;;23216:11:253;;;;23099:12;23130:23;23250:1;23239:13;;23236:107;;;23330:2;23324;23314:6;23311:1;23307:14;23304:1;23300:22;23296:31;23292:2;23288:40;23284:49;23275:58;;23236:107;;;;22982:367;;;:::o;24078:282::-;24116:1;24157;24154;24143:16;24193:1;24190;24179:16;24214:3;24204:37;;24221:18;;:::i;:::-;-1:-1:-1;;24257:28:253;;-1:-1:-1;;24287:15:253;;24253:50;24250:76;;;24306:18;;:::i;:::-;24340:14;;;24078:282;-1:-1:-1;;;24078:282:253:o;24365:216::-;24429:9;;;24457:11;;;24404:3;24487:9;;24515:10;;24511:19;;24540:10;;24532:19;;24508:44;24505:70;;;24555:18;;:::i;:::-;24505:70;;24365:216;;;;:::o;24586:237::-;24658:9;;;24625:7;24683:9;;-1:-1:-1;;;24694:18:253;;24679:34;24676:60;;;24716:18;;:::i;:::-;24789:1;24780:7;24775:16;24772:1;24769:23;24765:1;24758:9;24755:38;24745:72;;24797:18;;:::i;24828:193::-;24867:1;24893;24883:35;;24898:18;;:::i;:::-;-1:-1:-1;;;24934:18:253;;-1:-1:-1;;24954:13:253;;24930:38;24927:64;;;24971:18;;:::i;:::-;-1:-1:-1;25005:10:253;;24828:193::o;25026:200::-;25092:9;;;25065:4;25120:9;;25148:10;;25160:12;;;25144:29;25183:12;;;25175:21;;25141:56;25138:82;;;25200:18;;:::i;25231:112::-;25263:1;25289;25279:35;;25294:18;;:::i;:::-;-1:-1:-1;25328:9:253;;25231:112::o;25348:431::-;-1:-1:-1;;;25605:3:253;25598:16;25580:3;25643:6;25637:13;25659:74;25726:6;25722:1;25717:3;25713:11;25706:4;25698:6;25694:17;25659:74;:::i;:::-;25753:16;;;;25771:1;25749:24;;25348:431;-1:-1:-1;;25348:431:253:o;26477:135::-;26516:3;26537:17;;;26534:43;;26557:18;;:::i;:::-;-1:-1:-1;26604:1:253;26593:13;;26477:135::o;26617:120::-;26657:1;26683;26673:35;;26688:18;;:::i;:::-;-1:-1:-1;26722:9:253;;26617:120::o;26742:168::-;26815:9;;;26846;;26863:15;;;26857:22;;26843:37;26833:71;;26884:18;;:::i;26915:127::-;26976:10;26971:3;26967:20;26964:1;26957:31;27007:4;27004:1;26997:15;27031:4;27028:1;27021:15",
    "linkReferences": {},
    "immutableReferences": {
      "84480": [
        { "start": 667, "length": 32 },
        { "start": 5157, "length": 32 }
      ],
      "88021": [{ "start": 5691, "length": 32 }],
      "88024": [
        { "start": 6581, "length": 32 },
        { "start": 7120, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "PARENT()": "122b83f9",
    "TYPE()": "bb24fe8a",
    "VEECODE()": "d61735ca",
    "allowance(address,address,uint256)": "598af9e7",
    "approve(address,uint256,uint256)": "426a8493",
    "balanceOf(address,uint256)": "00fdd58e",
    "computeId(address,bytes)": "dbad2d9a",
    "convertsTo(bytes,uint256)": "9ad790c5",
    "decimals(uint256)": "3f47e662",
    "deploy(address,bytes,bool)": "1f54245b",
    "exercise(uint256,uint256)": "a86265bb",
    "exerciseCost(bytes,uint256)": "6a9311b7",
    "getTokenMetadata(uint256)": "60316801",
    "isOperator(address,address)": "b6363cf2",
    "mint(address,address,bytes,uint256,bool)": "e40d88f8",
    "mint(address,uint256,uint256,bool)": "dbf110a7",
    "name(uint256)": "00ad800c",
    "reclaim(uint256)": "2dabbeed",
    "redeem(uint256,uint256)": "7cbc2373",
    "redeemMax(uint256)": "f904eed8",
    "redeemable(address,uint256)": "67627b62",
    "setOperator(address,bool)": "558a7297",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol(uint256)": "4e41a1fb",
    "tokenMetadata(uint256)": "6914db60",
    "transfer(address,uint256,uint256)": "095bcdb6",
    "transferFrom(address,address,uint256,uint256)": "fe99049a",
    "transform(uint256,address,uint256)": "f6e9936a",
    "unwrap(uint256,uint256)": "6e286671",
    "userClaimed(address,uint256)": "fcbf8b24",
    "validate(address,bytes)": "caf92785",
    "wrap(uint256,uint256)": "25ded586"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BrokenInvariant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Derivative_NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent_\",\"type\":\"address\"}],\"name\":\"Module_InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module_OnlyInternal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"Module_OnlyParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPermitted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"DerivativeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"Unwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"Wrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrappedDerivativeCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PARENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"internalType\":\"enum Module.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VEECODE\",\"outputs\":[{\"internalType\":\"Veecode\",\"name\":\"\",\"type\":\"bytes7\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"computeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"convertsTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"wrapped_\",\"type\":\"bool\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wrappedAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exerciseCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"wrapped\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Derivative.Token\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wrapped_\",\"type\":\"bool\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wrapped_\",\"type\":\"bool\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wrappedAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountCreated_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"redeemMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"redeemable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"wrapped\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"userClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Axis Finance\",\"details\":\"This module allows for the creation of linearly vesting tokens, where the vesting             period is defined by a start and expiry timestamp. The tokens can be wrapped and             unwrapped, and the underlying tokens can be redeemed once vested.             The start timestamp enables vesting tokens to have a cliff, after which vesting commences.\",\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic.\"},\"TYPE()\":{\"details\":\"This enables the parent contract to check that the module Keycode specifiedis of the correct type\"},\"approve(address,uint256,uint256)\":{\"details\":\"Vesting tokens are soulbound/not transferable\"},\"computeId(address,bytes)\":{\"params\":{\"params_\":\"The abi-encoded `VestingParams` for the derivative token\"},\"returns\":{\"_0\":\"tokenId_            The unique token ID\"}},\"decimals(uint256)\":{\"details\":\"This function reverts if:             - The token ID does not exist\",\"params\":{\"tokenId_\":\"The ID of the token\"},\"returns\":{\"_0\":\"uint8       The number of decimals used by the token\"}},\"deploy(address,bytes,bool)\":{\"details\":\"This function performs the following:             - Validates the parameters             - Deploys the derivative token if it does not already exist             This function reverts if:             - The parameters are in an invalid format             - The parameters fail validation\",\"params\":{\"params_\":\"The abi-encoded `VestingParams` for the derivative token\",\"underlyingToken_\":\"The address of the underlying token\",\"wrapped_\":\"Whether or not to wrap the derivative token\"},\"returns\":{\"tokenId_\":\"           The ID of the derivative token\",\"wrappedAddress_\":\"    The address of the wrapped derivative token (if applicable)\"}},\"exercise(uint256,uint256)\":{\"details\":\"Not implemented\",\"params\":{\"amount\":\"The amount of derivative tokens to exercise\",\"tokenId_\":\"The ID of the derivative token to exercise\"}},\"exerciseCost(bytes,uint256)\":{\"details\":\"Not implemented\"},\"getTokenMetadata(uint256)\":{\"params\":{\"tokenId\":\"The ID of the derivative token\"},\"returns\":{\"_0\":\"Token       The metadata for the derivative token\"}},\"mint(address,address,bytes,uint256,bool)\":{\"details\":\"This function performs the following:             - Validates the parameters             - Deploys the derivative token if it does not already exist             - Mints the derivative token to the recipient             This function reverts if:             - The parameters are in an invalid format             - The parameters fail validation             - `amount_` is 0             A derivative token can be minted after vesting expiry, which prevents mitigates problems with auctions that settle late.\",\"params\":{\"amount_\":\"The amount of the derivative token to mint\",\"params_\":\"The abi-encoded `VestingParams` for the derivative token\",\"to_\":\"The address of the recipient of the derivative token\",\"underlyingToken_\":\"The address of the underlying token\",\"wrapped_\":\"Whether or not to wrap the derivative token\"},\"returns\":{\"amountCreated_\":\"     The amount of the derivative token that was minted\",\"tokenId_\":\"           The ID of the derivative token\",\"wrappedAddress_\":\"    The address of the wrapped derivative token (if applicable)\"}},\"mint(address,uint256,uint256,bool)\":{\"details\":\"This function performs the following:             - Mints the derivative token to the recipient             This function reverts if:             - `tokenId_` does not exist             - The amount to mint is 0             A derivative token can be minted after vesting expiry, which prevents mitigates problems with auctions that settle late.\",\"params\":{\"amount_\":\"The amount of the derivative token to mint\",\"to_\":\"The address of the recipient of the derivative token\",\"tokenId_\":\"The ID of the derivative token\",\"wrapped_\":\"Whether or not to wrap the derivative token\"},\"returns\":{\"_0\":\"uint256             The ID of the derivative token\",\"_1\":\"adress              The address of the wrapped derivative token (if applicable)\",\"_2\":\"uint256             The amount of the derivative token that was minted\"}},\"name(uint256)\":{\"details\":\"This function reverts if:             - The token ID does not exist\",\"params\":{\"tokenId_\":\"The ID of the token\"},\"returns\":{\"_0\":\"string      The name of the token\"}},\"reclaim(uint256)\":{\"details\":\"Not implemented\",\"params\":{\"tokenId_\":\"The ID of the derivative token to reclaim\"}},\"redeem(uint256,uint256)\":{\"details\":\"This function reverts if:             - `amount_` is 0             - The redeemable amount is less than `amount_`             - The derivative token with `tokenId_` has not been deployed\",\"params\":{\"amount_\":\"The amount of derivative tokens to redeem\",\"tokenId_\":\"The ID of the derivative token to redeem\"}},\"redeemMax(uint256)\":{\"params\":{\"tokenId_\":\"The ID of the derivative token to redeem\"}},\"redeemable(address,uint256)\":{\"details\":\"The redeemable amount is computed as:             - The amount of tokens that have vested               - x: number of vestable tokens               - t: current timestamp               - s: start timestamp               - T: expiry timestamp               - Vested = x * (t - s) / (T - s)             - Minus the amount of tokens that have already been redeemed\",\"params\":{\"owner_\":\"The address of the owner of the derivative token\",\"tokenId_\":\"The ID of the derivative token\"},\"returns\":{\"_0\":\"uint256     The amount of tokens that can be redeemed\"}},\"symbol(uint256)\":{\"details\":\"This function reverts if:             - The token ID does not exist\",\"params\":{\"tokenId_\":\"The ID of the token\"},\"returns\":{\"_0\":\"string      The symbol of the token\"}},\"transfer(address,uint256,uint256)\":{\"details\":\"Vesting tokens are soulbound/not transferable\"},\"transferFrom(address,address,uint256,uint256)\":{\"details\":\"Vesting tokens are soulbound/not transferable\"},\"transform(uint256,address,uint256)\":{\"details\":\"Not implemented\",\"params\":{\"amount_\":\"The amount of derivative tokens to transform\",\"from_\":\"The address of the owner of the derivative token\",\"tokenId_\":\"The ID of the derivative token to transform\"}},\"unwrap(uint256,uint256)\":{\"details\":\"This function will revert if:             - The derivative token with `tokenId_` has not been deployed             - A wrapped derivative for `tokenId_` has not been deployed             - `amount_` is 0\",\"params\":{\"amount_\":\"The amount of derivative tokens to unwrap\",\"tokenId_\":\"The ID of the derivative token to unwrap\"}},\"validate(address,bytes)\":{\"params\":{\"params_\":\"The abi-encoded `VestingParams` for the derivative token\"},\"returns\":{\"_0\":\"bool                Whether or not the params are valid\"}},\"wrap(uint256,uint256)\":{\"details\":\"This function will revert if:             - The derivative token with `tokenId_` has not been deployed             - `amount_` is 0\",\"params\":{\"amount_\":\"The amount of derivative tokens to wrap\",\"tokenId_\":\"The ID of the derivative token to wrap\"}}},\"title\":\"LinearVesting\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_InvalidParent(address)\":[{\"notice\":\"Error when the parent contract is invalid\"}],\"Module_OnlyInternal()\":[{\"notice\":\"Error when a module function is called by a non-internal contract\"}],\"Module_OnlyParent(address)\":[{\"notice\":\"Error when a module function is called by a non-parent contract\"}]},\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"PARENT()\":{\"notice\":\"The parent contract for this module.\"},\"TYPE()\":{\"notice\":\"2 byte identifier for the module type\"},\"VEECODE()\":{\"notice\":\"7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z.\"},\"computeId(address,bytes)\":{\"notice\":\"Compute a unique token ID, given the parameters for the derivative\"},\"decimals(uint256)\":{\"notice\":\"Returns the number of decimals used by the token\"},\"deploy(address,bytes,bool)\":{\"notice\":\"Deploy a new derivative token. Optionally, deploys an ERC20 wrapper for composability.\"},\"exercise(uint256,uint256)\":{\"notice\":\"Exercise a conversion of the derivative token per the specific implementation logic\"},\"getTokenMetadata(uint256)\":{\"notice\":\"Get the metadata for a derivative token\"},\"mint(address,address,bytes,uint256,bool)\":{\"notice\":\"Mint new derivative tokens.Deploys the derivative token if it does not already exist.The module is expected to transfer the collateral token to itself.\"},\"mint(address,uint256,uint256,bool)\":{\"notice\":\"Mint new derivative tokens for a specific token ID\"},\"name(uint256)\":{\"notice\":\"Returns the name of the token\"},\"reclaim(uint256)\":{\"notice\":\"Reclaim posted collateral for a derivative token which can no longer be exercisedAccess controlled: only callable by the derivative issuer via the auction house.\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem derivative tokens for underlying collateral\"},\"redeemMax(uint256)\":{\"notice\":\"Redeem all available derivative tokens for underlying collateral\"},\"redeemable(address,uint256)\":{\"notice\":\"Returns the amount of vested tokens that can be redeemed for the underlying base token\"},\"symbol(uint256)\":{\"notice\":\"Returns the symbol of the token\"},\"tokenMetadata(uint256)\":{\"notice\":\"The metadata for each derivative token\"},\"transform(uint256,address,uint256)\":{\"notice\":\"Transforms an existing derivative issued by this contract into something else. Derivative is burned and collateral sent to the auction house.Access controlled: only callable by the auction house.\"},\"unwrap(uint256,uint256)\":{\"notice\":\"Unwrap an ERC20 derivative token into the underlying ERC6909 derivative\"},\"userClaimed(address,uint256)\":{\"notice\":\"Stores the amount that a user has claimed\"},\"validate(address,bytes)\":{\"notice\":\"Validate derivative params for the specific implementation             The parameters should be the same as what is passed into `deploy()` or `mint()`\"},\"wrap(uint256,uint256)\":{\"notice\":\"Wrap an existing derivative into an ERC20 token for composability             Deploys the ERC20 wrapper if it does not already exist\"}},\"notice\":\"A derivative module that allows for the creation of linearly vesting tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/derivatives/LinearVesting.sol\":\"LinearVesting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":g-uni-v1-core/=lib/g-uni-v1-core/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\":uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC6909.sol\":{\"keccak256\":\"0x767ed60e11d739ed7eb9e10467eb0e0573293238b7a2a56f96b23f145297f1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5bc9f48d84ecc46f2627b2a91948f8060f78d2f548a6c5ca1f282f8778e01e0\",\"dweb:/ipfs/QmeATtgjaDVhxcCs6auJrC8nqCwUqntTi3WygHVRa9xg6M\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/lib/ERC6909Metadata.sol\":{\"keccak256\":\"0x08860d5892ece3b99a9b2d99f7c1f571223e5255b9392897a579815f30cca3af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe1c389fb96d772043ad643d30a2676cca164bec8079abc38da8a08ce872c0cc\",\"dweb:/ipfs/Qmf4Wpyx5rwX9eCWuaxY63tez2odgmDUYU8gU7dPhb1j5e\"]},\"src/lib/Timestamp.sol\":{\"keccak256\":\"0x8698230543af14affc4b58fb64aabed2116c1c8a41ac94309e2ec0241f0fb129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c1a9cee00e32f1b66518e686890fa39969155a8738236bc91eb2f6151bb2b99\",\"dweb:/ipfs/QmXiq4CVSHddc9c49gdqxAD23XqXeA5eqGbCqFHsuwdjXT\"]},\"src/lib/Uint2Str.sol\":{\"keccak256\":\"0xd5bed46248c82664844898fee717cf46ac94df59f7dc67c8db626ef666e7ce52\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://56ff374909e3030e11301a6fd3c16a893e85a0fd3ffa042ee877b850336a8b0f\",\"dweb:/ipfs/QmewNgdjU2EzjdgtRii9MENC43J9P33DpBkqznpHNFrF1W\"]},\"src/lib/clones/Clone.sol\":{\"keccak256\":\"0x56f39ad54b1d26569bd281a4da2fa0deb54bad7cf05f5bfacb488cd050c9027e\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://bb9530726000c21fd93b42412cd528dfc37f0270966362a672b486bf43e41368\",\"dweb:/ipfs/QmWrL3YjSzXMBFFW7o5d22HZrxk25sdru7XowLoqukZN3M\"]},\"src/lib/clones/CloneERC20.sol\":{\"keccak256\":\"0xbd7e0d8863ad7c758ac5b8940ad1fb52bfa75d54ad5e23726db6fa2717811bc7\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://3de09440ec47fc9f80297fc21beb4264858ed66451302046a486e59b0a9c29c8\",\"dweb:/ipfs/QmfJQ14a59gf8sah6tfuHeKAUKX4eECd9ktdGwuW7x7hVX\"]},\"src/lib/clones/ClonesWithImmutableArgs.sol\":{\"keccak256\":\"0x19e9432ce100392e198e8cf8ad985add8441028b8be9704b66de64da052bd79d\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://fb89861ef99a1f89a25498aa648d73c3f694f5c18dc92e8e93dffdf454a9a04e\",\"dweb:/ipfs/QmV6T5Fj6WUNHFSAqDPkvdXRRoQv76LpeigbGY6r2Hzxn8\"]},\"src/modules/Derivative.sol\":{\"keccak256\":\"0x9613dc24eae8ad5e5cbb6408e929f30cee9aecacae2dee65ea7d225771fabcbe\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://abbbe0734d960701082c8febe520a20d994978b30de8c8dcf32dfa5324845468\",\"dweb:/ipfs/Qmav2W9P8FswhDrt4BiaDGzB7gVjTG7bihBVGRm4Pbd1k9\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd\",\"dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu\"]},\"src/modules/Modules.sol\":{\"keccak256\":\"0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee\",\"dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v\"]},\"src/modules/derivatives/LinearVesting.sol\":{\"keccak256\":\"0xcafe9e611c241938bdefc190a3e06725c03f5e118b2c3f96b28026c57a0a51d5\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://29e9e7a7d458ce88c3eb93d4d98ecb4275ff54f1217547b7870cc1b0953e1225\",\"dweb:/ipfs/QmcqPj2c6E7y4duuSZZrbgTdRywRKKwSvK33CwfZdkk1ab\"]},\"src/modules/derivatives/SoulboundCloneERC20.sol\":{\"keccak256\":\"0x4d7fe1d97c69ee3b098b156c5aae174fa1543e234230a7b5d0537594b27046f0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d635de27ea6c5aa6de0dd41b6c005d6259cbe4ac4e5dca3e589fad4a42da4a36\",\"dweb:/ipfs/QmdtwdodoKQS3eRuaVwHqAKppV5Y9nQ2e6pEbycVRDmUVo\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "parent_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "BrokenInvariant" },
        { "inputs": [], "type": "error", "name": "Derivative_NotImplemented" },
        { "inputs": [], "type": "error", "name": "InsufficientBalance" },
        { "inputs": [], "type": "error", "name": "InvalidParams" },
        {
          "inputs": [
            { "internalType": "address", "name": "parent_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_InvalidParent"
        },
        { "inputs": [], "type": "error", "name": "Module_OnlyInternal" },
        {
          "inputs": [
            { "internalType": "address", "name": "caller_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_OnlyParent"
        },
        { "inputs": [], "type": "error", "name": "NotPermitted" },
        {
          "inputs": [
            { "internalType": "address", "name": "token_", "type": "address" }
          ],
          "type": "error",
          "name": "UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DerivativeCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Redeemed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unwrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Wrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WrappedDerivativeCreated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PARENT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "TYPE",
          "outputs": [
            { "internalType": "enum Module.Type", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VEECODE",
          "outputs": [
            { "internalType": "Veecode", "name": "", "type": "bytes7" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "underlyingToken_",
              "type": "address"
            },
            { "internalType": "bytes", "name": "params_", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "computeId",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "", "type": "bytes" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertsTo",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "underlyingToken_",
              "type": "address"
            },
            { "internalType": "bytes", "name": "params_", "type": "bytes" },
            { "internalType": "bool", "name": "wrapped_", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wrappedAddress_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exercise"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "", "type": "bytes" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exerciseCost",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenMetadata",
          "outputs": [
            {
              "internalType": "struct Derivative.Token",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "bool", "name": "exists", "type": "bool" },
                {
                  "internalType": "address",
                  "name": "wrapped",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to_", "type": "address" },
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            { "internalType": "bool", "name": "wrapped_", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to_", "type": "address" },
            {
              "internalType": "address",
              "name": "underlyingToken_",
              "type": "address"
            },
            { "internalType": "bytes", "name": "params_", "type": "bytes" },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            { "internalType": "bool", "name": "wrapped_", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wrappedAddress_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountCreated_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemMax"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" },
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "redeemable",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            { "internalType": "bool", "name": "exists", "type": "bool" },
            { "internalType": "address", "name": "wrapped", "type": "address" },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transform"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" },
            { "internalType": "uint256", "name": "tokenId_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userClaimed",
          "outputs": [
            { "internalType": "uint256", "name": "claimed_", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "underlyingToken_",
              "type": "address"
            },
            { "internalType": "bytes", "name": "params_", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validate",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "wrap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic."
          },
          "TYPE()": {
            "details": "This enables the parent contract to check that the module Keycode specifiedis of the correct type"
          },
          "approve(address,uint256,uint256)": {
            "details": "Vesting tokens are soulbound/not transferable"
          },
          "computeId(address,bytes)": {
            "params": {
              "params_": "The abi-encoded `VestingParams` for the derivative token"
            },
            "returns": { "_0": "tokenId_            The unique token ID" }
          },
          "decimals(uint256)": {
            "details": "This function reverts if:             - The token ID does not exist",
            "params": { "tokenId_": "The ID of the token" },
            "returns": {
              "_0": "uint8       The number of decimals used by the token"
            }
          },
          "deploy(address,bytes,bool)": {
            "details": "This function performs the following:             - Validates the parameters             - Deploys the derivative token if it does not already exist             This function reverts if:             - The parameters are in an invalid format             - The parameters fail validation",
            "params": {
              "params_": "The abi-encoded `VestingParams` for the derivative token",
              "underlyingToken_": "The address of the underlying token",
              "wrapped_": "Whether or not to wrap the derivative token"
            },
            "returns": {
              "tokenId_": "           The ID of the derivative token",
              "wrappedAddress_": "    The address of the wrapped derivative token (if applicable)"
            }
          },
          "exercise(uint256,uint256)": {
            "details": "Not implemented",
            "params": {
              "amount": "The amount of derivative tokens to exercise",
              "tokenId_": "The ID of the derivative token to exercise"
            }
          },
          "exerciseCost(bytes,uint256)": { "details": "Not implemented" },
          "getTokenMetadata(uint256)": {
            "params": { "tokenId": "The ID of the derivative token" },
            "returns": {
              "_0": "Token       The metadata for the derivative token"
            }
          },
          "mint(address,address,bytes,uint256,bool)": {
            "details": "This function performs the following:             - Validates the parameters             - Deploys the derivative token if it does not already exist             - Mints the derivative token to the recipient             This function reverts if:             - The parameters are in an invalid format             - The parameters fail validation             - `amount_` is 0             A derivative token can be minted after vesting expiry, which prevents mitigates problems with auctions that settle late.",
            "params": {
              "amount_": "The amount of the derivative token to mint",
              "params_": "The abi-encoded `VestingParams` for the derivative token",
              "to_": "The address of the recipient of the derivative token",
              "underlyingToken_": "The address of the underlying token",
              "wrapped_": "Whether or not to wrap the derivative token"
            },
            "returns": {
              "amountCreated_": "     The amount of the derivative token that was minted",
              "tokenId_": "           The ID of the derivative token",
              "wrappedAddress_": "    The address of the wrapped derivative token (if applicable)"
            }
          },
          "mint(address,uint256,uint256,bool)": {
            "details": "This function performs the following:             - Mints the derivative token to the recipient             This function reverts if:             - `tokenId_` does not exist             - The amount to mint is 0             A derivative token can be minted after vesting expiry, which prevents mitigates problems with auctions that settle late.",
            "params": {
              "amount_": "The amount of the derivative token to mint",
              "to_": "The address of the recipient of the derivative token",
              "tokenId_": "The ID of the derivative token",
              "wrapped_": "Whether or not to wrap the derivative token"
            },
            "returns": {
              "_0": "uint256             The ID of the derivative token",
              "_1": "adress              The address of the wrapped derivative token (if applicable)",
              "_2": "uint256             The amount of the derivative token that was minted"
            }
          },
          "name(uint256)": {
            "details": "This function reverts if:             - The token ID does not exist",
            "params": { "tokenId_": "The ID of the token" },
            "returns": { "_0": "string      The name of the token" }
          },
          "reclaim(uint256)": {
            "details": "Not implemented",
            "params": {
              "tokenId_": "The ID of the derivative token to reclaim"
            }
          },
          "redeem(uint256,uint256)": {
            "details": "This function reverts if:             - `amount_` is 0             - The redeemable amount is less than `amount_`             - The derivative token with `tokenId_` has not been deployed",
            "params": {
              "amount_": "The amount of derivative tokens to redeem",
              "tokenId_": "The ID of the derivative token to redeem"
            }
          },
          "redeemMax(uint256)": {
            "params": { "tokenId_": "The ID of the derivative token to redeem" }
          },
          "redeemable(address,uint256)": {
            "details": "The redeemable amount is computed as:             - The amount of tokens that have vested               - x: number of vestable tokens               - t: current timestamp               - s: start timestamp               - T: expiry timestamp               - Vested = x * (t - s) / (T - s)             - Minus the amount of tokens that have already been redeemed",
            "params": {
              "owner_": "The address of the owner of the derivative token",
              "tokenId_": "The ID of the derivative token"
            },
            "returns": {
              "_0": "uint256     The amount of tokens that can be redeemed"
            }
          },
          "symbol(uint256)": {
            "details": "This function reverts if:             - The token ID does not exist",
            "params": { "tokenId_": "The ID of the token" },
            "returns": { "_0": "string      The symbol of the token" }
          },
          "transfer(address,uint256,uint256)": {
            "details": "Vesting tokens are soulbound/not transferable"
          },
          "transferFrom(address,address,uint256,uint256)": {
            "details": "Vesting tokens are soulbound/not transferable"
          },
          "transform(uint256,address,uint256)": {
            "details": "Not implemented",
            "params": {
              "amount_": "The amount of derivative tokens to transform",
              "from_": "The address of the owner of the derivative token",
              "tokenId_": "The ID of the derivative token to transform"
            }
          },
          "unwrap(uint256,uint256)": {
            "details": "This function will revert if:             - The derivative token with `tokenId_` has not been deployed             - A wrapped derivative for `tokenId_` has not been deployed             - `amount_` is 0",
            "params": {
              "amount_": "The amount of derivative tokens to unwrap",
              "tokenId_": "The ID of the derivative token to unwrap"
            }
          },
          "validate(address,bytes)": {
            "params": {
              "params_": "The abi-encoded `VestingParams` for the derivative token"
            },
            "returns": {
              "_0": "bool                Whether or not the params are valid"
            }
          },
          "wrap(uint256,uint256)": {
            "details": "This function will revert if:             - The derivative token with `tokenId_` has not been deployed             - `amount_` is 0",
            "params": {
              "amount_": "The amount of derivative tokens to wrap",
              "tokenId_": "The ID of the derivative token to wrap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": { "notice": "Initialization function for the module" },
          "PARENT()": { "notice": "The parent contract for this module." },
          "TYPE()": { "notice": "2 byte identifier for the module type" },
          "VEECODE()": {
            "notice": "7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z."
          },
          "computeId(address,bytes)": {
            "notice": "Compute a unique token ID, given the parameters for the derivative"
          },
          "decimals(uint256)": {
            "notice": "Returns the number of decimals used by the token"
          },
          "deploy(address,bytes,bool)": {
            "notice": "Deploy a new derivative token. Optionally, deploys an ERC20 wrapper for composability."
          },
          "exercise(uint256,uint256)": {
            "notice": "Exercise a conversion of the derivative token per the specific implementation logic"
          },
          "getTokenMetadata(uint256)": {
            "notice": "Get the metadata for a derivative token"
          },
          "mint(address,address,bytes,uint256,bool)": {
            "notice": "Mint new derivative tokens.Deploys the derivative token if it does not already exist.The module is expected to transfer the collateral token to itself."
          },
          "mint(address,uint256,uint256,bool)": {
            "notice": "Mint new derivative tokens for a specific token ID"
          },
          "name(uint256)": { "notice": "Returns the name of the token" },
          "reclaim(uint256)": {
            "notice": "Reclaim posted collateral for a derivative token which can no longer be exercisedAccess controlled: only callable by the derivative issuer via the auction house."
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem derivative tokens for underlying collateral"
          },
          "redeemMax(uint256)": {
            "notice": "Redeem all available derivative tokens for underlying collateral"
          },
          "redeemable(address,uint256)": {
            "notice": "Returns the amount of vested tokens that can be redeemed for the underlying base token"
          },
          "symbol(uint256)": { "notice": "Returns the symbol of the token" },
          "tokenMetadata(uint256)": {
            "notice": "The metadata for each derivative token"
          },
          "transform(uint256,address,uint256)": {
            "notice": "Transforms an existing derivative issued by this contract into something else. Derivative is burned and collateral sent to the auction house.Access controlled: only callable by the auction house."
          },
          "unwrap(uint256,uint256)": {
            "notice": "Unwrap an ERC20 derivative token into the underlying ERC6909 derivative"
          },
          "userClaimed(address,uint256)": {
            "notice": "Stores the amount that a user has claimed"
          },
          "validate(address,bytes)": {
            "notice": "Validate derivative params for the specific implementation             The parameters should be the same as what is passed into `deploy()` or `mint()`"
          },
          "wrap(uint256,uint256)": {
            "notice": "Wrap an existing derivative into an ERC20 token for composability             Deploys the ERC20 wrapper if it does not already exist"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-math/node_modules/@prb/test/",
        "@uniswap/v3-core/=lib/uniswap-v3-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "g-uni-v1-core/=lib/g-uni-v1-core/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/solmate/src/",
        "uniswap-v2-core/=lib/uniswap-v2-core/contracts/",
        "uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/",
        "uniswap-v3-core/=lib/uniswap-v3-core/contracts/",
        "uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/modules/derivatives/LinearVesting.sol": "LinearVesting"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC6909.sol": {
        "keccak256": "0x767ed60e11d739ed7eb9e10467eb0e0573293238b7a2a56f96b23f145297f1d2",
        "urls": [
          "bzz-raw://e5bc9f48d84ecc46f2627b2a91948f8060f78d2f548a6c5ca1f282f8778e01e0",
          "dweb:/ipfs/QmeATtgjaDVhxcCs6auJrC8nqCwUqntTi3WygHVRa9xg6M"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/ERC6909Metadata.sol": {
        "keccak256": "0x08860d5892ece3b99a9b2d99f7c1f571223e5255b9392897a579815f30cca3af",
        "urls": [
          "bzz-raw://fe1c389fb96d772043ad643d30a2676cca164bec8079abc38da8a08ce872c0cc",
          "dweb:/ipfs/Qmf4Wpyx5rwX9eCWuaxY63tez2odgmDUYU8gU7dPhb1j5e"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/Timestamp.sol": {
        "keccak256": "0x8698230543af14affc4b58fb64aabed2116c1c8a41ac94309e2ec0241f0fb129",
        "urls": [
          "bzz-raw://5c1a9cee00e32f1b66518e686890fa39969155a8738236bc91eb2f6151bb2b99",
          "dweb:/ipfs/QmXiq4CVSHddc9c49gdqxAD23XqXeA5eqGbCqFHsuwdjXT"
        ],
        "license": "MIT"
      },
      "src/lib/Uint2Str.sol": {
        "keccak256": "0xd5bed46248c82664844898fee717cf46ac94df59f7dc67c8db626ef666e7ce52",
        "urls": [
          "bzz-raw://56ff374909e3030e11301a6fd3c16a893e85a0fd3ffa042ee877b850336a8b0f",
          "dweb:/ipfs/QmewNgdjU2EzjdgtRii9MENC43J9P33DpBkqznpHNFrF1W"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/clones/Clone.sol": {
        "keccak256": "0x56f39ad54b1d26569bd281a4da2fa0deb54bad7cf05f5bfacb488cd050c9027e",
        "urls": [
          "bzz-raw://bb9530726000c21fd93b42412cd528dfc37f0270966362a672b486bf43e41368",
          "dweb:/ipfs/QmWrL3YjSzXMBFFW7o5d22HZrxk25sdru7XowLoqukZN3M"
        ],
        "license": "BSD"
      },
      "src/lib/clones/CloneERC20.sol": {
        "keccak256": "0xbd7e0d8863ad7c758ac5b8940ad1fb52bfa75d54ad5e23726db6fa2717811bc7",
        "urls": [
          "bzz-raw://3de09440ec47fc9f80297fc21beb4264858ed66451302046a486e59b0a9c29c8",
          "dweb:/ipfs/QmfJQ14a59gf8sah6tfuHeKAUKX4eECd9ktdGwuW7x7hVX"
        ],
        "license": "BSD"
      },
      "src/lib/clones/ClonesWithImmutableArgs.sol": {
        "keccak256": "0x19e9432ce100392e198e8cf8ad985add8441028b8be9704b66de64da052bd79d",
        "urls": [
          "bzz-raw://fb89861ef99a1f89a25498aa648d73c3f694f5c18dc92e8e93dffdf454a9a04e",
          "dweb:/ipfs/QmV6T5Fj6WUNHFSAqDPkvdXRRoQv76LpeigbGY6r2Hzxn8"
        ],
        "license": "BSD"
      },
      "src/modules/Derivative.sol": {
        "keccak256": "0x9613dc24eae8ad5e5cbb6408e929f30cee9aecacae2dee65ea7d225771fabcbe",
        "urls": [
          "bzz-raw://abbbe0734d960701082c8febe520a20d994978b30de8c8dcf32dfa5324845468",
          "dweb:/ipfs/Qmav2W9P8FswhDrt4BiaDGzB7gVjTG7bihBVGRm4Pbd1k9"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e",
        "urls": [
          "bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd",
          "dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Modules.sol": {
        "keccak256": "0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689",
        "urls": [
          "bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee",
          "dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/derivatives/LinearVesting.sol": {
        "keccak256": "0xcafe9e611c241938bdefc190a3e06725c03f5e118b2c3f96b28026c57a0a51d5",
        "urls": [
          "bzz-raw://29e9e7a7d458ce88c3eb93d4d98ecb4275ff54f1217547b7870cc1b0953e1225",
          "dweb:/ipfs/QmcqPj2c6E7y4duuSZZrbgTdRywRKKwSvK33CwfZdkk1ab"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/derivatives/SoulboundCloneERC20.sol": {
        "keccak256": "0x4d7fe1d97c69ee3b098b156c5aae174fa1543e234230a7b5d0537594b27046f0",
        "urls": [
          "bzz-raw://d635de27ea6c5aa6de0dd41b6c005d6259cbe4ac4e5dca3e589fad4a42da4a36",
          "dweb:/ipfs/QmdtwdodoKQS3eRuaVwHqAKppV5Y9nQ2e6pEbycVRDmUVo"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "id": 163
}
