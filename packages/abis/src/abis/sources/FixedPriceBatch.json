{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "auctionHouse_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "INIT",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "PARENT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TYPE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum Module.Type"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "VEECODE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes7",
          "internalType": "Veecode"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "abort",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auction",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "params_",
          "type": "tuple",
          "internalType": "struct IAuction.AuctionParams",
          "components": [
            {
              "name": "start",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "duration",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "implParams",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "quoteTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auctionType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IAuction.AuctionType"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "bid",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidder_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "referrer_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "auctionData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "bidId",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancelAuction",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "capacityInQuote",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimBids",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidIds_",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "outputs": [
        {
          "name": "bidClaims",
          "type": "tuple[]",
          "internalType": "struct IBatchAuction.BidClaim[]",
          "components": [
            {
              "name": "bidder",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paid",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payout",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "refund",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "auctionOutput",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "dedicatedSettlePeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint48",
          "internalType": "uint48"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAuctionData",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "auctionData_",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.AuctionData",
          "components": [
            {
              "name": "price",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum IFixedPriceBatch.LotStatus"
            },
            {
              "name": "nextBidId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "settlementCleared",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "totalBidAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minFilled",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBid",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId_",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "bid",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.Bid",
          "components": [
            {
              "name": "bidder",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint96",
              "internalType": "uint96"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum IFixedPriceBatch.BidStatus"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidClaim",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId_",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "bidClaim",
          "type": "tuple",
          "internalType": "struct IBatchAuction.BidClaim",
          "components": [
            {
              "name": "bidder",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paid",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payout",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "refund",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIdAtIndex",
      "inputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIds",
      "inputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLot",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAuction.Lot",
          "components": [
            {
              "name": "start",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "conclusion",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "quoteTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "sold",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "purchased",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNumBids",
      "inputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPartialFill",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "hasPartialFill",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "partialFill",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.PartialFill",
          "components": [
            {
              "name": "bidId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refund",
              "type": "uint96",
              "internalType": "uint96"
            },
            {
              "name": "payout",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasEnded",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isLive",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isUpcoming",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotAuctionOutput",
      "inputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotData",
      "inputs": [
        {
          "name": "id",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "start",
          "type": "uint48",
          "internalType": "uint48"
        },
        {
          "name": "conclusion",
          "type": "uint48",
          "internalType": "uint48"
        },
        {
          "name": "quoteTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "capacityInQuote",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "capacity",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "purchased",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minAuctionDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint48",
          "internalType": "uint48"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundBid",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId_",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "index_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "caller_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "refund",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "remainingCapacity",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDedicatedSettlePeriod",
      "inputs": [
        {
          "name": "period_",
          "type": "uint48",
          "internalType": "uint48"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinAuctionDuration",
      "inputs": [
        {
          "name": "duration_",
          "type": "uint48",
          "internalType": "uint48"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "num_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "totalIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "capacity",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "finished",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "auctionOutput",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "error",
      "name": "Auction_AmountLessThanMinimum",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_DedicatedSettlePeriod",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InsufficientCapacity",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_InvalidBidId",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidDuration",
      "inputs": [
        {
          "name": "duration_",
          "type": "uint48",
          "internalType": "uint48"
        },
        {
          "name": "minimum_",
          "type": "uint48",
          "internalType": "uint48"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidLotId",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidParams",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_InvalidStart",
      "inputs": [
        {
          "name": "start_",
          "type": "uint48",
          "internalType": "uint48"
        },
        {
          "name": "minimum_",
          "type": "uint48",
          "internalType": "uint48"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotActive",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotNotActive",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotNotConcluded",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Auction_NotAuthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_NotBidder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_NotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_OnlyLotOwner",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Auction_WrongState",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ]
    },
    {
      "type": "error",
      "name": "Bid_WrongState",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId",
          "type": "uint64",
          "internalType": "uint64"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module_InvalidParent",
      "inputs": [
        {
          "name": "parent_",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "Module_OnlyInternal",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module_OnlyParent",
      "inputs": [
        {
          "name": "caller_",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotPermitted",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "642:19268:182:-:0;;;1380:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1429:13;;-1:-1:-1;;;;;11238:21:177;;11234:63;;11268:29;;-1:-1:-1;;;11268:29:177;;-1:-1:-1;;;;;473:32:293;;11268:29:177;;;455:51:293;428:18;;11268:29:177;;;;;;;11234:63;-1:-1:-1;;;;;11308:16:177;;;-1:-1:-1;;1517:18:182::1;:27:::0;;1538:6:::1;-1:-1:-1::0;;1517:27:182;;::::1;::::0;::::1;::::0;;;1617:21:::1;:30:::0;;;;::::1;::::0;;::::1;::::0;;642:19268;;14:290:293;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:293;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:293:o;309:203::-;642:19268:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e45760003560e01c80637d9234bc1161010f578063b04046df116100a2578063cd280bdb11610071578063cd280bdb1461064d578063d61735ca14610671578063d899a33714610688578063ea6439141461069c57600080fd5b8063b04046df146105f8578063bae96bdd1461060b578063bb24fe8a1461061e578063cadb33831461062d57600080fd5b8063a16f7ef7116100de578063a16f7ef71461054a578063a85cebb614610599578063a8bf44e4146105ab578063ace54da5146105cb57600080fd5b80637d9234bc146104e757806387698a31146105085780638f21c3181461051b578063994595e11461053b57600080fd5b80631ed75f1f11610187578063541348761161015657806354134876146103c25780635806afc3146103eb578063732efc03146104a65780637d7b6853146104b957600080fd5b80631ed75f1f146102e157806329da5abd146102f457806339792cdc146103075780634e1f42581461033a57600080fd5b80630a35511b116101c35780630a35511b1461024c5780630cd0bcf21461026d578063122b83f91461028d57806312d6ef2d146102cc57600080fd5b8062b33217146101e957806303855921146102165780630440ec5314610239575b600080fd5b6102006101f7366004612813565b60609392505050565b60405161020d9190612846565b60405180910390f35b610229610224366004612893565b6106a4565b604051901515815260200161020d565b610229610247366004612893565b6106ff565b61025f61025a3660046128ae565b610786565b60405161020d9291906129b4565b61028061027b366004612893565b6108a2565b60405161020d9190612a0b565b6102b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161020d565b6102df6102da366004612a34565b61093c565b005b6102df6102ef366004612893565b6109a7565b6102df610302366004612a34565b610ac2565b610229610315366004612893565b6001600160601b0316600090815260016020526040902054600160701b900460ff1690565b61034d610348366004612893565b610b59565b60405161020d919060006101008201905065ffffffffffff8084511683528060208501511660208401525060ff604084015116604083015260ff606084015116606083015260808301511515608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6000546103d49065ffffffffffff1681565b60405165ffffffffffff909116815260200161020d565b6104596103f9366004612893565b6001602081905260009182526040909120805491810154600282015460039092015465ffffffffffff80851694600160301b81049091169360ff600160601b8304811694600160681b8404821694600160701b9094049091169290919088565b6040805165ffffffffffff998a16815298909716602089015260ff958616968801969096529390921660608601521515608085015260a084015260c083015260e08201526101000161020d565b6102296104b4366004612893565b610bf6565b6104cf6104c7366004612a4f565b600092915050565b6040516001600160401b03909116815260200161020d565b6104fa6104f5366004612aa7565b610c7e565b60405190815260200161020d565b6104cf610516366004612af4565b610dba565b61052e610529366004612ba0565b610ee6565b60405161020d9190612bd3565b600160405161020d9190612c07565b61055d610558366004612893565b610f1b565b60408051921515835281516001600160401b03166020808501919091528201516001600160601b0316838201520151606082015260800161020d565b6002546103d49065ffffffffffff1681565b6105be6105b9366004612ba0565b610fa2565b60405161020d9190612c1a565b6104fa6105d9366004612893565b6001600160601b03166000908152600160208190526040909120015490565b6102df610606366004612893565b61107e565b6102df610619366004612cf6565b6111c4565b600060405161020d9190612e1c565b61064061063b366004612893565b6114a8565b60405161020d9190612e30565b61066061065b366004612a4f565b611582565b60405161020d959493929190612e87565b6040516530314650424160d01b815260200161020d565b6104fa610696366004612893565b50600090565b6102df61170f565b6001600160601b03811660009081526001602052604081205465ffffffffffff600160301b9091048116429091161015806106f957506001600160601b03821660009081526001602081905260409091200154155b92915050565b6001600160601b0381166000908152600160208190526040822001541580159061075457506001600160601b03821660009081526001602052604090205465ffffffffffff600160301b909104811642909116105b80156106f95750506001600160601b031660009081526001602052604090205465ffffffffffff908116429091161090565b606080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d9576040516366e069e160e01b81523360048201526024015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b9190612eb4565b156108795760405163115250c560e21b815260040160405180910390fd5b6108828561175c565b61088b856117a7565b610896858585611801565b91509150935093915050565b600360205260009081526040902080546108bb90612ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546108e790612ed1565b80156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610987576040516366e069e160e01b81523360048201526024016107d0565b6000805465ffffffffffff191665ffffffffffff92909216919091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109f2576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190612eb4565b15610a925760405163115250c560e21b815260040160405180910390fd5b610a9b8161175c565b610aa4816119b9565b610aad81611a38565b610ab681611ac4565b610abf81611b1e565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b0d576040516366e069e160e01b81523360048201526024016107d0565b62093a808165ffffffffffff161115610b3957604051633350f82560e11b815260040160405180910390fd5b6002805465ffffffffffff191665ffffffffffff92909216919091179055565b610b61612772565b506001600160601b0316600090815260016020818152604092839020835161010081018552815465ffffffffffff8082168352600160301b8204169382019390935260ff600160601b8404811695820195909552600160681b830485166060820152600160701b909204909316151560808201529082015460a0820152600282015460c082015260039091015460e082015290565b6001600160601b03811660009081526001602081905260408220015415801590610c4b57506001600160601b03821660009081526001602052604090205465ffffffffffff600160301b909104811642909116105b80156106f95750506001600160601b031660009081526001602052604090205465ffffffffffff90811642909116101590565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ccb576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4d9190612eb4565b15610d6b5760405163115250c560e21b815260040160405180910390fd5b610d748561175c565b610d7d85611b47565b610d878585611b98565b610d92858584611c6c565b610d9c8585611cd4565b610da585611d5a565b610db185858585611df7565b95945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e07576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190612eb4565b15610ea75760405163115250c560e21b815260040160405180910390fd5b610eb08761175c565b610eb987611b47565b610ec287611d5a565b610ecb87611ac4565b610ed9878787878787611e8b565b90505b9695505050505050565b610eee6127b6565b610ef78361175c565b610f00836117a7565b610f0a8383611b98565b610f14838361216c565b9392505050565b60408051606081018252600080825260208201819052918101829052610f408361175c565b610f49836117a7565b50506001600160601b03908116600090815260066020908152604091829020825160608101845281546001600160401b038116808352600160401b90910490951692810192909252600101549181019190915290151591565b610fca6040805160808101825260008082526020820181905291810182905290606082015290565b610fd38361175c565b610fdd8383611b98565b6001600160601b0383811660009081526005602090815260408083206001600160401b0387168452825291829020825160808101845281546001600160a01b038082168352600160a01b918290049096169382019390935260018083015495861694820194909452939092606085019290910460ff169081111561106357611063612be1565b600181111561107457611074612be1565b9052509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110c9576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190612eb4565b156111695760405163115250c560e21b815260040160405180910390fd5b6111728161175c565b61117b81611d5a565b6111848161237a565b6001600160601b03166000908152600160208190526040822080546bffffffffffff0000000000001916600160301b4265ffffffffffff16021781550155565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461120f576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112919190612eb4565b156112af5760405163115250c560e21b815260040160405180910390fd5b825165ffffffffffff16158015906112d25750825165ffffffffffff4281169116105b15611306578251604051639421aa8960e01b815265ffffffffffff91821660048201524290911660248201526044016107d0565b600054602084015165ffffffffffff918216911610156113535760208301516000546040516302c1012760e21b815265ffffffffffff9283166004820152911660248201526044016107d0565b61135b612772565b835165ffffffffffff1615611371578351611373565b425b65ffffffffffff16808252602085015161138c91612f21565b65ffffffffffff16602082015260ff8084166040808401919091529083166060808401919091529085015115156080808401919091529085015160a08301528401516113db9086908390612383565b6001600160601b039490941660009081526001602081815260409283902087518154928901519489015160608a015160808b015165ffffffffffff9384166bffffffffffffffffffffffff1990961695909517600160301b93909716929092029590951761ffff60601b1916600160601b60ff9687160260ff60681b191617600160681b95909116949094029390931760ff60701b1916600160701b9115159190910217825560a08601519082015560c0850151600282015560e090940151600390940193909355505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526114e38261175c565b6001600160601b038216600090815260046020908152604091829020825160c0810190935280548352600180820154919284019160ff169081111561152a5761152a612be1565b600181111561153b5761153b612be1565b8152600182015461010081046001600160401b03166020830152600160481b900460ff16151560408201526002820154606082015260039091015460809091015292915050565b60008080806060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115d4576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116569190612eb4565b156116745760405163115250c560e21b815260040160405180910390fd5b61167d8761175c565b61168687611b47565b61168f87612453565b61169887611ac4565b6001600160601b03871660009081526001602052604090206116ba888861250f565b6001600160601b038c166000908152600160209081526040808320600380820189905560029091018790559091529020939950919750945092506116fe8382612f8e565b506001015492509295509295909350565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461175a576040516366e069e160e01b81523360048201526024016107d0565b565b6001600160601b03811660009081526001602052604081205465ffffffffffff169003610abf57604051638c54233f60e01b81526001600160601b03821660048201526024016107d0565b6001600160601b038116600090815260046020526040902060019081015460ff16818111156117d8576117d8612be1565b14610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b60608082806001600160401b0381111561181d5761181d612c69565b60405190808252806020026020018201604052801561185657816020015b6118436127b6565b81526020019060019003908161183b5790505b50925060005b818110156119af576118948787878481811061187a5761187a61304d565b905060200201602081019061188f9190613063565b611b98565b6118c4878787848181106118aa576118aa61304d565b90506020020160208101906118bf9190613063565b611cd4565b6001600160601b03871660009081526005602052604081206001918888858181106118f1576118f161304d565b90506020020160208101906119069190613063565b6001600160401b03166001600160401b0316815260200190815260200160002060010160146101000a81548160ff0219169083600181111561194a5761194a612be1565b021790555061197f878787848181106119655761196561304d565b905060200201602081019061197a9190613063565b61216c565b8482815181106119915761199161304d565b602002602001018190525080806119a79061307e565b91505061185c565b5050935093915050565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b909104811642909116108015611a0f57506001600160601b0381166000908152600160208190526040909120015415155b15610abf5760405163f7babce560e01b81526001600160601b03821660048201526024016107d0565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b90910481169042168111801590611a975750600254611a849065ffffffffffff1682612f21565b65ffffffffffff164265ffffffffffff16105b15611ac057604051630340ca2960e11b81526001600160601b03831660048201526024016107d0565b5050565b6001600160601b038116600090815260046020526040902060019081015460ff1681811115611af557611af5612be1565b03610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b6001600160601b031660009081526004602052604090206001908101805460ff19169091179055565b6001600160601b03811660009081526001602052604090205465ffffffffffff908116429091161015610abf576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0382166000908152600460205260409020600101546001600160401b03610100909104811690821610611bff576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03821660009081526005602090815260408083206001600160401b03851684529091529020546001600160a01b0316611ac0576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03831660009081526005602090815260408083206001600160401b03861684529091529020546001600160a01b03828116911614611ccf576040516319b1d90760e31b81526001600160a01b03821660048201526024016107d0565b505050565b60016001600160601b03831660009081526005602090815260408083206001600160401b03861684529091529020600190810154600160a01b900460ff1690811115611d2257611d22612be1565b03611ac057604051631359755560e11b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b90910481164290911610611db1576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0381166000908152600160208190526040822001549003610abf576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0384166000908152600460209081526040808320600583528184206001600160401b038816855290925282206001808201805460ff60a01b1916600160a01b8302179055508054600283018054600160a01b9092046001600160601b031691600090611e6b908490613097565b909155505054600160a01b90046001600160601b03169695505050505050565b6000831580611ea057506001600160601b0384115b15611ebe57604051633350f82560e11b815260040160405180910390fd5b6001600160601b038716600090815260016020818152604080842083015460049092528320808301805492949193919261010090046001600160401b031691611f06836130aa565b91906101000a8154816001600160401b0302191690836001600160401b031602179055509050600087905060405180608001604052808b6001600160a01b03168152602001826001600160601b031681526020018a6001600160a01b0316815260200160006001811115611f7c57611f7c612be1565b90526001600160601b03808d1660009081526005602090815260408083206001600160401b0388168452825291829020845191850151909316600160a01b9081026001600160a01b039283161784559184015160018085018054929093166001600160a01b03198316811784556060870151946001600160a81b0319909316179190849081111561200f5761200f612be1565b02179055509050508783600201600082825461202b91906130d0565b90915550506001600160601b038b1660009081526001602052604081205461205e90600160681b900460ff16600a6131c7565b905060006120758560020154838760000154612600565b90508581101561208d57839650505050505050610edc565b8581111561211f576120a784878386868a600001546126a7565b6001600160601b038e8116600090815260066020908152604080832085518154938701516001600160401b039091166001600160a01b031990941693909317600160401b9386168402178082559590910151600190910155600289018054919094049092169291612119908490613097565b90915550505b5050506001600160601b0399909916600090815260016020526040902080546bffffffffffff0000000000001916600160301b4265ffffffffffff16021790555096979650505050505050565b6121746127b6565b6001600160601b0383811660009081526005602090815260408083206001600160401b03871684528252808320815160808101835281546001600160a01b038082168352600160a01b918290049097169482019490945260018083015496871693820193909352939490926060850192910460ff16908111156121f9576121f9612be1565b600181111561220a5761220a612be1565b90525080516001600160a01b0390811684526040808301519091166020808601919091526001600160601b038716600090815260049091522060010154909150600160481b900460ff161561234d576001600160601b0384166000908152600660205260409020546001600160401b038085169116036122d1576020808201516001600160601b03908116604080860191909152868216600081815260068086529281206001810154606089015291905292529054600160401b9004166080830152612373565b602081810180516001600160601b03908116604086810191909152915187821660009081526001909452919092205461233c92919091169061231e90600160681b900460ff16600a6131c7565b6001600160601b038716600090815260046020526040902054612600565b606083015260006080830152612373565b6020810180516001600160601b0390811660408501526000606085015290511660808301525b5092915050565b611b1e81612453565b60008180602001905181019061239991906131d6565b80519091506000036123be57604051633350f82560e11b815260040160405180910390fd5b620186a065ffffffffffff16816020015162ffffff1611156123f357604051633350f82560e11b815260040160405180910390fd5b6001600160601b03841660009081526004602090815260409091208251815560018101805468ffffffffffffffff00191661010017905560a08501519183015190916124479162ffffff16620186a0612744565b60039091015550505050565b6001600160601b038116600090815260046020526040812060019081015460ff169081111561248457612484612be1565b1480156124b357506001600160601b0381166000908152600160205260409020544265ffffffffffff90911611155b80156124e657506001600160601b03811660009081526001602052604090205442600160301b90910465ffffffffffff16115b15610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b6001600160601b03821660009081526004602090815260408083206001808201805460ff1916821790556002909101549252822054829182916060918391612585919061256790600160681b900460ff16600a6131c7565b6001600160601b038a16600090815260046020526040902054612600565b6001600160601b0388166000908152600460205260409020600301549091508110156125b55750600191506125f7565b6001600160601b03871660009081526004602052604090206001818101805469ff0000000000000000001916600160481b179055600290910154955090935091505b92959194509250565b60008383026000198486098181108201900380612635578361262a5763ae47f7026000526004601cfd5b508290049050610f14565b80841161264a5763ae47f7026000526004601cfd5b83858709600085810386169586900495848311909303908390038390046001010292030417600383026002908118808502820302808502820302808502820302808502820302808502820302808502909103020290509392505050565b60408051606081018252600080825260208201819052918101829052906126d86001600160601b0386168585612600565b905060006126e68888613097565b905060006126fe876001600160601b03168385612600565b9050600061270c8385613097565b604080516060810182526001600160401b038e1681526001600160601b03909416602085015283015250925050509695505050505050565b6000612751848484612600565b90508183850915610f145760010180610f145763ae47f7026000526004601cfd5b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160601b038116811461280e57600080fd5b919050565b60008060006060848603121561282857600080fd5b612831846127f7565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156128875783516001600160401b031683529284019291840191600101612862565b50909695505050505050565b6000602082840312156128a557600080fd5b610f14826127f7565b6000806000604084860312156128c357600080fd5b6128cc846127f7565b925060208401356001600160401b03808211156128e857600080fd5b818601915086601f8301126128fc57600080fd5b81358181111561290b57600080fd5b8760208260051b850101111561292057600080fd5b6020830194508093505050509250925092565b80516001600160a01b039081168352602080830151909116908301526040808201519083015260608082015190830152608090810151910152565b6000815180845260005b8181101561299457602081850181015186830182015201612978565b506000602082860101526020601f19601f83011685010191505092915050565b604080825283519082018190526000906020906060840190828701845b828110156129f7576129e4848351612933565b60a09390930192908401906001016129d1565b50505083810382850152610edc818661296e565b602081526000610f14602083018461296e565b803565ffffffffffff8116811461280e57600080fd5b600060208284031215612a4657600080fd5b610f1482612a1e565b60008060408385031215612a6257600080fd5b612a6b836127f7565b946020939093013593505050565b80356001600160401b038116811461280e57600080fd5b80356001600160a01b038116811461280e57600080fd5b60008060008060808587031215612abd57600080fd5b612ac6856127f7565b9350612ad460208601612a79565b925060408501359150612ae960608601612a90565b905092959194509250565b60008060008060008060a08789031215612b0d57600080fd5b612b16876127f7565b9550612b2460208801612a90565b9450612b3260408801612a90565b93506060870135925060808701356001600160401b0380821115612b5557600080fd5b818901915089601f830112612b6957600080fd5b813581811115612b7857600080fd5b8a6020828501011115612b8a57600080fd5b6020830194508093505050509295509295509295565b60008060408385031215612bb357600080fd5b612bbc836127f7565b9150612bca60208401612a79565b90509250929050565b60a081016106f98284612933565b634e487b7160e01b600052602160045260246000fd5b60028110610abf57610abf612be1565b60208101612c1483612bf7565b91905290565b81516001600160a01b0390811682526020808401516001600160601b0316908301526040808401519091169082015260608201516080820190612c5c81612bf7565b8060608401525092915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715612ca157612ca1612c69565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612ccf57612ccf612c69565b604052919050565b8015158114610abf57600080fd5b803560ff8116811461280e57600080fd5b60008060008060808587031215612d0c57600080fd5b612d15856127f7565b93506020808601356001600160401b0380821115612d3257600080fd5b9087019060a0828a031215612d4657600080fd5b612d4e612c7f565b612d5783612a1e565b8152612d64848401612a1e565b848201526040830135612d7681612cd7565b604082015260608381013590820152608083013582811115612d9757600080fd5b80840193505089601f840112612dac57600080fd5b823582811115612dbe57612dbe612c69565b612dd0601f8201601f19168601612ca7565b92508083528a85828601011115612de657600080fd5b80858501868501376000908301909401939093526080830152509250612e0e60408601612ce5565b9150612ae960608601612ce5565b6020810160048310612c1457612c14612be1565b81518152602082015160c0820190612e4781612bf7565b806020840152506001600160401b0360408401511660408301526060830151151560608301526080830151608083015260a083015160a083015292915050565b858152846020820152836040820152821515606082015260a060808201526000610ed960a083018461296e565b600060208284031215612ec657600080fd5b8151610f1481612cd7565b600181811c90821680612ee557607f821691505b602082108103612f0557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff81811683821601908082111561237357612373612f0b565b601f821115611ccf57600081815260208120601f850160051c81016020861015612f675750805b601f850160051c820191505b81811015612f8657828155600101612f73565b505050505050565b81516001600160401b03811115612fa757612fa7612c69565b612fbb81612fb58454612ed1565b84612f40565b602080601f831160018114612ff05760008415612fd85750858301515b600019600386901b1c1916600185901b178555612f86565b600085815260208120601f198616915b8281101561301f57888601518255948401946001909101908401613000565b508582101561303d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561307557600080fd5b610f1482612a79565b60006001820161309057613090612f0b565b5060010190565b818103818111156106f9576106f9612f0b565b60006001600160401b038083168181036130c6576130c6612f0b565b6001019392505050565b808201808211156106f9576106f9612f0b565b600181815b8085111561311e57816000190482111561310457613104612f0b565b8085161561311157918102915b93841c93908002906130e8565b509250929050565b600082613135575060016106f9565b81613142575060006106f9565b816001811461315857600281146131625761317e565b60019150506106f9565b60ff84111561317357613173612f0b565b50506001821b6106f9565b5060208310610133831016604e8410600b84101617156131a1575081810a6106f9565b6131ab83836130e3565b80600019048211156131bf576131bf612f0b565b029392505050565b6000610f1460ff841683613126565b6000604082840312156131e857600080fd5b604051604081018181106001600160401b038211171561320a5761320a612c69565b60405282518152602083015162ffffff8116811461322757600080fd5b6020820152939250505056fea2646970667358221220d18fabbfa3ab8aa4cb7850c8e09b1407862f7a77a39ca744997725f5a573f91a64736f6c63430008130033",
    "sourceMap": "642:19268:182:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15250:96;;;;;;:::i;:::-;15327:15;15250:96;;;;;;;;;;;;;:::i;:::-;;;;;;;;5501:191:173;;;;;;:::i;:::-;;:::i;:::-;;;1537:14:293;;1530:22;1512:41;;1500:2;1485:18;5501:191:173;1372:187:293;5195:271:173;;;;;;:::i;:::-;;:::i;5231:438:179:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;592:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11114:31:177:-;;;;;;;;-1:-1:-1;;;;;4289:32:293;;;4271:51;;4259:2;4244:18;11114:31:177;4125:203:293;6434:116:173;;;;;;:::i;:::-;;:::i;:::-;;9712:345:179;;;;;;:::i;:::-;;:::i;10499:243::-;;;;;;:::i;:::-;;:::i;5893:133:173:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5988:15:173;5965:4;5988:15;;;:7;:15;;;;;:31;-1:-1:-1;;;5988:31:173;;;;;5893:133;6061:114;;;;;;:::i;:::-;;:::i;:::-;;;;;;4830:4:293;4872:3;4861:9;4857:19;4849:27;;4895:14;4955:2;4946:6;4940:13;4936:22;4925:9;4918:41;5027:2;5019:4;5011:6;5007:17;5001:24;4997:33;4990:4;4979:9;4975:20;4968:63;;5099:4;5091;5083:6;5079:17;5073:24;5069:35;5062:4;5051:9;5047:20;5040:65;5173:4;5165;5157:6;5153:17;5147:24;5143:35;5136:4;5125:9;5121:20;5114:65;5249:4;5241:6;5237:17;5231:24;5224:32;5217:40;5210:4;5199:9;5195:20;5188:70;5314:4;5306:6;5302:17;5296:24;5289:4;5278:9;5274:20;5267:54;5377:4;5369:6;5365:17;5359:24;5352:4;5341:9;5337:20;5330:54;5440:4;5432:6;5428:17;5422:24;5415:4;5404:9;5400:20;5393:54;4694:759;;;;;458:32:173;;;;;;;;;;;;5632:14:293;5620:27;;;5602:46;;5590:2;5575:18;458:32:173;5458:196:293;526:44:173;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:44:173;;;;;;;-1:-1:-1;;;526:44:173;;;;;-1:-1:-1;;;526:44:173;;;;;-1:-1:-1;;;526:44:173;;;;;;;;;;;;;;;;5994:14:293;6035:15;;;6017:34;;6087:15;;;;6082:2;6067:18;;6060:43;6151:4;6139:17;;;6119:18;;;6112:45;;;;6193:17;;;;6188:2;6173:18;;6166:45;6255:14;6248:22;6242:3;6227:19;;6220:51;6302:3;6287:19;;6280:35;6346:3;6331:19;;6324:35;6390:3;6375:19;;6368:35;5971:3;5956:19;526:44:173;5659:750:293;4892:268:173;;;;;;:::i;:::-;;:::i;15501:84:182:-;;;;;;:::i;:::-;15575:6;15501:84;;;;;;;;-1:-1:-1;;;;;6833:31:293;;;6815:50;;6803:2;6788:18;15501:84:182;6671:200:293;3471:591:179;;;;;;:::i;:::-;;:::i;:::-;;;7780:25:293;;;7768:2;7753:18;3471:591:179;7634:177:293;1351:529:179;;;;;;:::i;:::-;;:::i;15836:306:182:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;676:109:179:-;761:17;676:109;;;;;;:::i;14365:371:182:-;;;;;;:::i;:::-;;:::i;:::-;;;;9974:14:293;;9967:22;9949:41;;10030:13;;-1:-1:-1;;;;;10026:38:293;10021:2;10006:18;;;9999:66;;;;10111:15;;10105:22;-1:-1:-1;;;;;10101:55:293;10081:18;;;10074:83;10199:15;10193:22;10188:2;10173:18;;10166:50;9936:3;9921:19;14365:371:182;9720:502:293;516:35:179;;;;;;;;;13523:213:182;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5727:131:173:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5827:15:173;5801:7;5827:15;;;:7;:15;;;;;;;;:24;;;5727:131;3768:445;;;;;;:::i;:::-;;:::i;1460:1209::-;;;;;;:::i;:::-;;:::i;714:88::-;760:4;714:88;;;;;;:::i;13869:222:182:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6967:940:179:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1687:101:182:-;;;-1:-1:-1;;;15001:58:293;;14989:2;14974:18;1687:101:182;14827:238:293;15024:71:182;;;;;;:::i;:::-;-1:-1:-1;15084:7:182;;15024:71;13040:46:177;;;:::i;5501:191:173:-;-1:-1:-1;;;;;5626:15:173;;5564:4;5626:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;5626:26:173;;;;;5606:15;5599:53;;;;;;:86;;-1:-1:-1;;;;;;5656:15:173;;;;;;:7;:15;;;;;;;;:24;;:29;5599:86;5580:105;5501:191;-1:-1:-1;;5501:191:173:o;5195:271::-;-1:-1:-1;;;;;5297:15:173;;5260:4;5297:15;;;:7;:15;;;;;;;:24;;:29;;;;:85;;-1:-1:-1;;;;;;5356:15:173;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;5356:26:173;;;;;5337:15;5330:52;;;;5297:85;:152;;;;-1:-1:-1;;;;;;;5428:15:173;;;;;:7;:15;;;;;:21;;;;;5409:15;5402:47;;;;;5195:271::o;5231:438:179:-;5402:27;;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;;;;;;;;11964:62;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;5504:27:179::1;5524:6;5504:19;:27::i;:::-;5541:30;5564:6;5541:22;:30::i;:::-;5635:27;5646:6;5654:7;;5635:10;:27::i;:::-;5628:34;;;;5231:438:::0;;;;;;:::o;592:48::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6434:116:173:-;11501:10:177;-1:-1:-1;;;;;11515:6:177;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:177;;11548:10;11530:29;;;4271:51:293;4244:18;;11530:29:177;4125:203:293;11497:62:177;6513:18:173::1;:30:::0;;-1:-1:-1;;6513:30:173::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6434:116::o;9712:345:179:-;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;9822:27:179::1;9842:6;9822:19;:27::i;:::-;9859:35;9887:6;9859:27;:35::i;:::-;9904:38;9935:6;9904:30;:38::i;:::-;9952:27;9972:6;9952:19;:27::i;:::-;10036:14;10043:6;10036;:14::i;:::-;9712:345:::0;:::o;10499:243::-;11501:10:177;-1:-1:-1;;;;;11515:6:177;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:177;;11548:10;11530:29;;;4271:51:293;4244:18;;11530:29:177;4125:203:293;11497:62:177;10655:6:179::1;10645:7;:16;;;10641:52;;;10670:23;;-1:-1:-1::0;;;10670:23:179::1;;;;;;;;;;;10641:52;10704:21;:31:::0;;-1:-1:-1;;10704:31:179::1;;::::0;;;::::1;::::0;;;::::1;::::0;;10499:243::o;6061:114:173:-;6124:10;;:::i;:::-;-1:-1:-1;;;;;;6153:15:173;;;;;:7;:15;;;;;;;;;6146:22;;;;;;;;;;;;;;;-1:-1:-1;;;6146:22:173;;;;;;;;;;;-1:-1:-1;;;6146:22:173;;;;;;;;;;;-1:-1:-1;;;6146:22:173;;;;;;;;-1:-1:-1;;;6146:22:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6061:114::o;4892:268::-;-1:-1:-1;;;;;4990:15:173;;4953:4;4990:15;;;:7;:15;;;;;;;:24;;:29;;;;:85;;-1:-1:-1;;;;;;5049:15:173;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;5049:26:173;;;;;5030:15;5023:52;;;;4990:85;:153;;;;-1:-1:-1;;;;;;;5122:15:173;;;;;:7;:15;;;;;:21;;;;;5102:15;5095:48;;;;;;4892:268::o;3471:591:179:-;3639:14;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;3696:27:179::1;3716:6;3696:19;:27::i;:::-;3733:31;3757:6;3733:23;:31::i;:::-;3774:35;3794:6;3802;3774:19;:35::i;:::-;3819:45;3840:6;3848;3856:7;3819:20;:45::i;:::-;3874:35;3894:6;3902;3874:19;:35::i;:::-;3919:29;3941:6;3919:21;:29::i;:::-;4012:43;4023:6;4031;4039;4047:7;4012:10;:43::i;:::-;4005:50:::0;3471:591;-1:-1:-1;;;;;3471:591:179:o;1351:529::-;1555:12;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;1610:27:179::1;1630:6;1610:19;:27::i;:::-;1647:31;1671:6;1647:23;:31::i;:::-;1688:29;1710:6;1688:21;:29::i;:::-;1727:27;1747:6;1727:19;:27::i;:::-;1818:55;1823:6;1831:7;1840:9;1851:7;1860:12;;1818:4;:55::i;:::-;1811:62;;12117:1:177;1351:529:179::0;;;;;;;;:::o;15836:306:182:-;15941:24;;:::i;:::-;15977:27;15997:6;15977:19;:27::i;:::-;16014:30;16037:6;16014:22;:30::i;:::-;16054:35;16074:6;16082;16054:19;:35::i;:::-;16107:28;16120:6;16128;16107:12;:28::i;:::-;16100:35;15836:306;-1:-1:-1;;;15836:306:182:o;14365:371::-;-1:-1:-1;;;;;;;;14451:19:182;-1:-1:-1;;;;;;;;;;;;;;;14518:27:182;14538:6;14518:19;:27::i;:::-;14555:30;14578:6;14555:22;:30::i;:::-;-1:-1:-1;;;;;;;14610:23:182;;;;;;;:15;:23;;;;;;;;;14596:37;;;;;;;;;-1:-1:-1;;;;;14596:37:182;;;;;-1:-1:-1;;;14596:37:182;;;;;;;;;;;;;;;;;;;;;;;14660:22;;;;14365:371::o;13523:213::-;13592:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13592:14:182;13618:27;13638:6;13618:19;:27::i;:::-;13655:35;13675:6;13683;13655:19;:35::i;:::-;-1:-1:-1;;;;;13708:13:182;;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;13708:21:182;;;;;;;;;;13701:28;;;;;;;;;-1:-1:-1;;;;;13701:28:182;;;;;-1:-1:-1;;;13701:28:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13708:21;;13701:28;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;13701:28:182;13523:213;-1:-1:-1;;;13523:213:182:o;3768:445:173:-;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;3877:27:173::1;3897:6;3877:19;:27::i;:::-;3914:29;3936:6;3914:21;:29::i;:::-;4041:22;4056:6;4041:14;:22::i;:::-;-1:-1:-1::0;;;;;4114:15:173::1;4096;4114::::0;;;:7:::1;:15;::::0;;;;;;4140:40;;-1:-1:-1;;4140:40:173::1;-1:-1:-1::0;;;4164:15:173::1;4140:40;;;;::::0;;4190:12:::1;:16:::0;3768:445::o;1460:1209::-;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;1718:13:173;;:17:::1;;::::0;;;;:60:::1;;-1:-1:-1::0;1739:13:173;;:39:::1;1762:15;1739:39:::0;::::1;::::0;::::1;;1718:60;1714:158;;;1822:13:::0;;1801:60:::1;::::0;-1:-1:-1;;;1801:60:173;;15885:14:293;15926:15;;;1801:60:173::1;::::0;::::1;15908:34:293::0;1844:15:173::1;15978::293::0;;;15958:18;;;15951:43;15848:18;;1801:60:173::1;15705:295:293::0;1714:158:173::1;1955:18;::::0;1936:16:::1;::::0;::::1;::::0;1955:18:::1;::::0;;::::1;1936:37:::0;::::1;;1932:136;;;2020:16;::::0;::::1;::::0;2038:18:::1;::::0;1996:61:::1;::::0;-1:-1:-1;;;1996:61:173;;2038:18:::1;15926:15:293::0;;;1996:61:173::1;::::0;::::1;15908:34:293::0;2038:18:173;::::1;15958::293::0;;;15951:43;15848:18;;1996:61:173::1;15705:295:293::0;1932:136:173::1;2113:14;;:::i;:::-;2149:13:::0;;:18:::1;;::::0;:60:::1;;2196:13:::0;;2149:60:::1;;;2177:15;2149:60;2137:72;;::::0;;;2248:16:::1;::::0;::::1;::::0;2236:28:::1;::::0;::::1;:::i;:::-;2219:45;;:14;::::0;::::1;:45:::0;2274:44:::1;::::0;;::::1;:22;::::0;;::::1;:44:::0;;;;2328:42;;::::1;:21;::::0;;::::1;:42:::0;;;;2402:23;;::::1;::::0;2380:45:::1;;:19;::::0;;::::1;:45:::0;;;;2450:16;;::::1;::::0;2435:12:::1;::::0;::::1;:31:::0;2585:18;::::1;::::0;2563:41:::1;::::0;2572:6;;2219:3;;2563:8:::1;:41::i;:::-;-1:-1:-1::0;;;;;2641:15:173;;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;2641:21:173;;;;;;;-1:-1:-1;;;2641:21:173;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2641:21:173;-1:-1:-1;;;2641:21:173::1;::::0;;::::1;;-1:-1:-1::0;;;;2641:21:173;;-1:-1:-1;;;2641:21:173;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2641:21:173::1;-1:-1:-1::0;;;2641:21:173;::::1;;::::0;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;1460:1209:173:o;13869:222:182:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14019:27:182;14039:6;14019:19;:27::i;:::-;-1:-1:-1;;;;;14064:20:182;;;;;;:12;:20;;;;;;;;;14057:27;;;;;;;;;;;;;;;;;14064:20;;14057:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;14057:27:182;;;;;-1:-1:-1;;;14057:27:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13869:222:182:o;6967:940:179:-;7135:15;;;;7251:26;11968:10:177;-1:-1:-1;;;;;11982:6:177;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:177;;12015:10;11997:29;;;4271:51:293;4244:18;;11997:29:177;4125:203:293;11964:62:177;12053:6;-1:-1:-1;;;;;12041:34:177;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:177;;;;;;;;;;;12037:70;7333:27:179::1;7353:6;7333:19;:27::i;:::-;7370:31;7394:6;7370:23;:31::i;:::-;7411:26;7430:6;7411:18;:26::i;:::-;7447:27;7467:6;7447:19;:27::i;:::-;-1:-1:-1::0;;;;;7503:15:179;::::1;7485;7503::::0;;;:7:::1;:15;::::0;;;;7622:21:::1;7511:6:::0;7638:4;7622:7:::1;:21::i;:::-;-1:-1:-1::0;;;;;7698:15:179;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:25:::1;::::0;;::::1;:35:::0;;;7743:20:::1;::::0;;::::1;:31:::0;;;7784:24;;;;;7575:68;;-1:-1:-1;7575:68:179;;-1:-1:-1;7575:68:179;-1:-1:-1;7575:68:179;-1:-1:-1;7784:40:179::1;7575:68:::0;7784:24;:40:::1;:::i;:::-;-1:-1:-1::0;7862:12:179::1;;::::0;;-1:-1:-1;6967:940:179;;;;;;;;:::o;13040:46:177:-;11501:10;-1:-1:-1;;;;;11515:6:177;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:177;;11548:10;11530:29;;;4271:51:293;4244:18;;11530:29:177;4125:203:293;11497:62:177;13040:46::o;6840:150:173:-;-1:-1:-1;;;;;6920:15:173;;;;;;:7;:15;;;;;:21;;;:26;;6916:67;;6955:28;;-1:-1:-1;;;6955:28:173;;-1:-1:-1;;;;;18678:39:293;;6955:28:173;;;18660:58:293;18633:18;;6955:28:173;18516:208:293;18616:233:182;-1:-1:-1;;;;;18735:20:182;;;;;;:12;:20;;;;;18766:17;18735:27;;;;;;:48;;;;;;;;:::i;:::-;;18731:112;;18806:26;;-1:-1:-1;;;18806:26:182;;-1:-1:-1;;;;;18678:39:293;;18806:26:182;;;18660:58:293;18633:18;;18806:26:182;18516:208:293;9790:691:182;9901:27;;9982:7;;-1:-1:-1;;;;;10018:19:182;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;10006:31;;10052:9;10047:384;10067:3;10063:1;:7;10047:384;;;10115:39;10135:6;10143:7;;10151:1;10143:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10115:19;:39::i;:::-;10168;10188:6;10196:7;;10204:1;10196:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10168:19;:39::i;:::-;-1:-1:-1;;;;;10267:13:182;;;;;;:5;:13;;;;;10302:17;;10281:7;;10289:1;10281:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10267:25:182;-1:-1:-1;;;;;10267:25:182;;;;;;;;;;;;:32;;;:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;10388:32;10401:6;10409:7;;10417:1;10409:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10388:12;:32::i;:::-;10373:9;10383:1;10373:12;;;;;;;;:::i;:::-;;;;;;:47;;;;10072:3;;;;;:::i;:::-;;;;10047:384;;;;10441:33;9790:691;;;;;;:::o;7771:243:173:-;-1:-1:-1;;;;;7885:15:173;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;7885:26:173;;;;;7866:15;7859:52;;;;:84;;;;-1:-1:-1;;;;;;7915:15:173;;7942:1;7915:15;;;:7;:15;;;;;;;;:24;;:28;;7859:84;7855:153;;;7966:31;;-1:-1:-1;;;7966:31:173;;-1:-1:-1;;;;;18678:39:293;;7966:31:173;;;18660:58:293;18633:18;;7966:31:173;18516:208:293;12721:417:179;-1:-1:-1;;;;;12882:15:179;;12862:17;12882:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;12882:26:179;;;;;;12942:15;12935:37;;-1:-1:-1;12935:37:179;;;:117;;-1:-1:-1;13031:21:179;;13018:34;;13031:21;;13018:10;:34;:::i;:::-;12992:60;;12999:15;12992:60;;;12935:117;12918:214;;;13084:37;;-1:-1:-1;;;13084:37:179;;-1:-1:-1;;;;;18678:39:293;;13084:37:179;;;18660:58:293;18633:18;;13084:37:179;18516:208:293;12918:214:179;12790:348;12721:417;:::o;18337:234:182:-;-1:-1:-1;;;;;18457:20:182;;;;;;:12;:20;;;;;18488:17;18457:27;;;;;;:48;;;;;;;;:::i;:::-;;18453:112;;18528:26;;-1:-1:-1;;;18528:26:182;;-1:-1:-1;;;;;18678:39:293;;18528:26:182;;;18660:58:293;18633:18;;18528:26:182;18516:208:293;13058:235:182;-1:-1:-1;;;;;13162:20:182;;;;;:12;:20;;;;;13192:17;13162:27;;;:47;;-1:-1:-1;;13162:47:182;;;;;;13058:235::o;7137:175:173:-;-1:-1:-1;;;;;7247:15:173;;;;;;:7;:15;;;;;:21;;;;;7228:15;7221:47;;;;7217:88;;;7277:28;;-1:-1:-1;;;7277:28:173;;-1:-1:-1;;;;;18678:39:293;;7277:28:173;;;18660:58:293;18633:18;;7277:28:173;18516:208:293;18894:385:182;-1:-1:-1;;;;;19059:20:182;;;;;;:12;:20;;;;;:30;;;-1:-1:-1;;;;;19059:30:182;;;;;;19049:40;;;;19045:89;;19098:36;;-1:-1:-1;;;19098:36:182;;-1:-1:-1;;;;;19378:39:293;;19098:36:182;;;19360:58:293;-1:-1:-1;;;;;19454:31:293;;19434:18;;;19427:59;19333:18;;19098:36:182;19190:302:293;19045:89:182;-1:-1:-1;;;;;19185:13:182;;19225:1;19185:13;;;:5;:13;;;;;;;;-1:-1:-1;;;;;19185:21:182;;;;;;;;;:28;-1:-1:-1;;;;;19185:28:182;19181:91;;19236:36;;-1:-1:-1;;;19236:36:182;;-1:-1:-1;;;;;19378:39:293;;19236:36:182;;;19360:58:293;-1:-1:-1;;;;;19454:31:293;;19434:18;;;19427:59;19333:18;;19236:36:182;19190:302:293;19324:263:182;-1:-1:-1;;;;;19522:13:182;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;19522:21:182;;;;;;;;;:28;-1:-1:-1;;;;;19511:39:182;;;19522:28;;19511:39;19507:73;;19559:21;;-1:-1:-1;;;19559:21:182;;-1:-1:-1;;;;;4289:32:293;;19559:21:182;;;4271:51:293;4244:18;;19559:21:182;4125:203:293;19507:73:182;19324:263;;;:::o;19632:276::-;19821:17;-1:-1:-1;;;;;19789:13:182;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;19789:21:182;;;;;;;;;:28;;;;;-1:-1:-1;;;19789:28:182;;;;;:49;;;;;;;:::i;:::-;;19785:117;;19861:30;;-1:-1:-1;;;19861:30:182;;-1:-1:-1;;;;;19378:39:293;;19861:30:182;;;19360:58:293;-1:-1:-1;;;;;19454:31:293;;19434:18;;;19427:59;19333:18;;19861:30:182;19190:302:293;8161:368:173;-1:-1:-1;;;;;8308:15:173;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;8308:26:173;;;;;8288:15;8281:53;;;;8277:119;;8357:28;;-1:-1:-1;;;8357:28:173;;-1:-1:-1;;;;;18678:39:293;;8357:28:173;;;18660:58:293;18633:18;;8357:28:173;18516:208:293;8277:119:173;-1:-1:-1;;;;;8456:15:173;;;;;;:7;:15;;;;;;;:24;;:29;;8452:70;;8494:28;;-1:-1:-1;;;8494:28:173;;-1:-1:-1;;;;;18678:39:293;;8494:28:173;;;18660:58:293;18633:18;;8494:28:173;18516:208:293;8617:522:182;-1:-1:-1;;;;;8840:20:182;;8750:14;8840:20;;;:12;:20;;;;;;;;8888:5;:13;;;;;-1:-1:-1;;;;;8888:21:182;;;;;;;;;8966:17;8953:10;;;:30;;-1:-1:-1;;;;8953:30:182;-1:-1:-1;;;8966:17:182;8953:30;;;;-1:-1:-1;9056:10:182;;9033:19;;;:33;;-1:-1:-1;;;9056:10:182;;;-1:-1:-1;;;;;9056:10:182;;;;9033:33;;9056:10;;9033:33;:::i;:::-;;;;-1:-1:-1;;9122:10:182;-1:-1:-1;;;9122:10:182;;-1:-1:-1;;;;;9122:10:182;;;-1:-1:-1;;;;;;8617:522:182:o;5802:2305::-;5973:6;6063:12;;;:42;;-1:-1:-1;;;;;;6079:26:182;;6063:42;6059:78;;;6114:23;;-1:-1:-1;;;6114:23:182;;;;;;;;;;;6059:78;-1:-1:-1;;;;;6211:15:182;;6189:19;6211:15;;;:7;:15;;;;;;;;:24;;;6272:12;:20;;;;;6374:14;;;:16;;6211:24;;6272:20;;6189:19;;6374:16;;;-1:-1:-1;;;;;6374:16:182;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;6374:16:182;;;;;-1:-1:-1;;;;;6374:16:182;;;;;;6359:31;;6453:15;6478:7;6453:33;;6545:148;;;;;;;;6571:7;-1:-1:-1;;;;;6545:148:182;;;;;6600:8;-1:-1:-1;;;;;6545:148:182;;;;;6632:9;-1:-1:-1;;;;;6545:148:182;;;;;6663:19;6545:148;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6522:13:182;;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;6522:20:182;;;;;;;;;;:171;;;;;;;;;-1:-1:-1;;;6522:171:182;;;-1:-1:-1;;;;;6522:171:182;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6522:171:182;;;;;;;;;;;-1:-1:-1;;;;;;6522:171:182;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;6769:7;6746:4;:19;;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7119:15:182;;7093:17;7119:15;;;:7;:15;;;;;:33;7113:39;;-1:-1:-1;;;7119:33:182;;;;7113:2;:39;:::i;:::-;7093:59;;7162:25;7190:59;7206:4;:19;;;7227:9;7238:4;:10;;;7190:15;:59::i;:::-;7162:87;;7375:11;7355:17;:31;7351:74;;;7409:5;7402:12;;;;;;;;;;7351:74;7524:11;7504:17;:31;7500:377;;;7615:123;7654:5;7661:11;7674:17;7693:8;7703:9;7714:4;:10;;;7615:21;:123::i;:::-;-1:-1:-1;;;;;7589:23:182;;;;;;;:15;:23;;;;;;;;:149;;;;;;;;-1:-1:-1;;;;;7589:149:182;;;-1:-1:-1;;;;;;7589:149:182;;;;;;;-1:-1:-1;;;7589:149:182;;;;;;;;;;;;;;-1:-1:-1;7589:149:182;;;;7813:19;;;:53;;7836:30;;;;;;;;7813:19;:53;;7836:30;;7813:53;:::i;:::-;;;;-1:-1:-1;;7500:377:182;-1:-1:-1;;;;;;;;8025:15:182;;;;;;;;:7;:15;;;;;:52;;-1:-1:-1;;8025:52:182;-1:-1:-1;;;8061:15:182;8025:52;;;;;;-1:-1:-1;8095:5:182;;5802:2305;-1:-1:-1;;;;;;;5802:2305:182:o;16500:1392::-;16597:24;;:::i;:::-;-1:-1:-1;;;;;16679:13:182;;;16658:18;16679:13;;;:5;:13;;;;;;;;-1:-1:-1;;;;;16679:21:182;;;;;;;;;16658:42;;;;;;;;;-1:-1:-1;;;;;16658:42:182;;;;;-1:-1:-1;;;16658:42:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;;16679:21;;16658:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;16779:14:182;;-1:-1:-1;;;;;16761:32:182;;;;;16823:16;;;;;16803:36;;;:17;;;;:36;;;;-1:-1:-1;;;;;16854:20:182;;-1:-1:-1;16854:20:182;;;:12;:20;;;;:38;;;16779:14;;-1:-1:-1;;;;16854:38:182;;;;16850:1010;;;-1:-1:-1;;;;;16969:23:182;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;16969:39:182;;;:29;;:39;16965:685;;17097:14;;;;;-1:-1:-1;;;;;17081:30:182;;;:13;;;;:30;;;;17147:23;;;;;;;:15;:23;;;;;;:30;;;;17129:15;;;:48;17213:23;;;;;:30;;-1:-1:-1;;;17213:30:182;;;17195:15;;;:48;16850:1010;;16965:685;17370:14;;;;;;-1:-1:-1;;;;;17354:30:182;;;:13;;;;:30;;;;17457:14;;17499:15;;;;;;;:7;:15;;;;;;;:33;17420:178;;;;;;;17493:39;;-1:-1:-1;;;17499:33:182;;;;17493:2;:39;:::i;:::-;-1:-1:-1;;;;;17554:20:182;;;;;;:12;:20;;;;;:26;17420:15;:178::i;:::-;17402:15;;;:196;17634:1;17616:15;;;:19;16850:1010;;;17756:14;;;;;-1:-1:-1;;;;;17740:30:182;;;:13;;;:30;17802:1;17784:15;;;:19;17835:14;;17817:32;:15;;;:32;16850:1010;17870:15;16500:1392;;;;:::o;3820:450::-;4046:26;4065:6;4046:18;:26::i;2368:921::-;2505:31;2550:7;2539:40;;;;;;;;;;;;:::i;:::-;2636:12;;2505:74;;-1:-1:-1;2636:12:182;:17;2632:53;;2662:23;;-1:-1:-1;;;2662:23:182;;;;;;;;;;;2632:53;415:7:173;2761:44:182;;:6;:21;;;:44;;;2757:80;;;2814:23;;-1:-1:-1;;;2814:23:182;;;;;;;;;;;2757:80;-1:-1:-1;;;;;2907:20:182;;2880:24;2907:20;;;:12;:20;;;;;;;;2950:12;;2937:25;;2989:1;2972:14;;:18;;-1:-1:-1;;2972:18:182;;;;;3223:13;;;;3238:21;;;;2907:20;;3205:77;;;;415:7:173;3205:17:182;:77::i;:::-;3176:14;;;;:106;-1:-1:-1;;;;2368:921:182:o;17976:316::-;-1:-1:-1;;;;;18069:20:182;;18100:17;18069:20;;;:12;:20;;;;;:27;;;;;;;;:48;;;;;;;:::i;:::-;;:108;;;;-1:-1:-1;;;;;;18137:15:182;;;;;;:7;:15;;;;;:21;18162:15;18137:21;;;;:40;;18069:108;:172;;;;-1:-1:-1;;;;;;18197:15:182;;;;;;:7;:15;;;;;:26;18226:15;-1:-1:-1;;;18197:26:182;;;;;:44;18069:172;18052:233;;;18259:26;;-1:-1:-1;;;18259:26:182;;-1:-1:-1;;;;;18678:39:293;;18259:26:182;;;18660:58:293;18633:18;;18259:26:182;18516:208:293;11345:1255:182;-1:-1:-1;;;;;11600:20:182;;11459:16;11600:20;;;:12;:20;;;;;;;;11630:17;11600:27;;;:47;;-1:-1:-1;;11600:47:182;;;;;11753:35;;;;;11808:15;;;;:33;11459:16;;;;11512:27;;11459:16;;11724:167;;11753:35;11802:39;;-1:-1:-1;;;11808:33:182;;;;11802:2;:39;:::i;:::-;-1:-1:-1;;;;;11855:20:182;;;;;;:12;:20;;;;;:26;11724:15;:167::i;:::-;-1:-1:-1;;;;;12026:20:182;;;;;;:12;:20;;;;;:30;;;11699:192;;-1:-1:-1;12009:47:182;;12005:299;;;-1:-1:-1;12272:4:182;;-1:-1:-1;12243:50:182;;12005:299;-1:-1:-1;;;;;12396:20:182;;;;;;:12;:20;;;;;12437:4;12396:38;;;:45;;-1:-1:-1;;12396:45:182;-1:-1:-1;;;12396:45:182;;;12496:35;;;;;;-1:-1:-1;12553:14:182;;-1:-1:-1;12437:4:182;-1:-1:-1;11345:1255:182;;;;;;;;:::o;12569:3418:48:-;12645:14;13181:9;;;-1:-1:-1;;13188:1:48;13185;13217:20;13341:10;;;13333:19;;13325:28;;;13438:274;;13484:1;13474:153;;13526:10;13520:4;13513:24;13600:4;13594;13587:18;13474:153;-1:-1:-1;13658:10:48;;;;-1:-1:-1;13689:5:48;;13438:274;13833:2;13830:1;13827:9;13817:149;;13873:10;13867:4;13860:24;13943:4;13937;13930:18;13817:149;14223:1;14220;14217;14210:15;14371:1;14367:9;;;14360:17;;14462:9;;;;;15753;;;15745:18;;;15773:9;;;;15769:17;;;15788:1;15765:25;15741:50;15797:10;;15793:18;15738:74;14841:1;14837:9;;14848:1;14833:17;;;15119:11;;;15112:19;;15103:29;15192:11;;;15185:19;;15176:29;15266:11;;;15259:19;;15250:29;15340:11;;;15333:19;;15324:29;15414:11;;;15407:19;;15398:29;15900:11;;;15893:19;;;15884:29;15496:439;;-1:-1:-1;12569:3418:48;;;;;:::o;4313:810:182:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4646:47:182;-1:-1:-1;;;;;4646:47:182;;4674:10;4686:6;4646:15;:47::i;:::-;4627:66;-1:-1:-1;4703:14:182;4720:29;4740:9;4720:17;:29;:::i;:::-;4703:46;;4923:13;4946:45;4962:10;-1:-1:-1;;;;;4946:45:182;4974:6;4982:8;4946:15;:45::i;:::-;4923:69;-1:-1:-1;5002:14:182;5019:17;5030:6;5019:8;:17;:::i;:::-;5055:60;;;;;;;;-1:-1:-1;;;;;5055:60:182;;;;-1:-1:-1;;;;;5055:60:182;;;;;;;;;;-1:-1:-1;5055:60:182;-1:-1:-1;;;4313:810:182;;;;;;;;:::o;16269:462:48:-;16347:14;16382:19;16393:1;16396;16399;16382:10;:19::i;:::-;16373:28;;16493:1;16490;16487;16480:15;16477:238;;;16536:1;16524:14;;16555:146;;16608:10;16602:4;16595:24;16678:4;16672;16665:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:293:-;81:20;;-1:-1:-1;;;;;130:38:293;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:320::-;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;382:28;400:9;382:28;:::i;:::-;372:38;457:2;442:18;;429:32;;-1:-1:-1;508:2:293;493:18;;;480:32;;198:320;-1:-1:-1;;;198:320:293:o;523:655::-;692:2;744:21;;;814:13;;717:18;;;836:22;;;663:4;;692:2;915:15;;;;889:2;874:18;;;663:4;958:194;972:6;969:1;966:13;958:194;;;1037:13;;-1:-1:-1;;;;;1033:38:293;1021:51;;1127:15;;;;1092:12;;;;994:1;987:9;958:194;;;-1:-1:-1;1169:3:293;;523:655;-1:-1:-1;;;;;;523:655:293:o;1183:184::-;1241:6;1294:2;1282:9;1273:7;1269:23;1265:32;1262:52;;;1310:1;1307;1300:12;1262:52;1333:28;1351:9;1333:28;:::i;1564:686::-;1657:6;1665;1673;1726:2;1714:9;1705:7;1701:23;1697:32;1694:52;;;1742:1;1739;1732:12;1694:52;1765:28;1783:9;1765:28;:::i;:::-;1755:38;;1844:2;1833:9;1829:18;1816:32;-1:-1:-1;;;;;1908:2:293;1900:6;1897:14;1894:34;;;1924:1;1921;1914:12;1894:34;1962:6;1951:9;1947:22;1937:32;;2007:7;2000:4;1996:2;1992:13;1988:27;1978:55;;2029:1;2026;2019:12;1978:55;2069:2;2056:16;2095:2;2087:6;2084:14;2081:34;;;2111:1;2108;2101:12;2081:34;2164:7;2159:2;2149:6;2146:1;2142:14;2138:2;2134:23;2130:32;2127:45;2124:65;;;2185:1;2182;2175:12;2124:65;2216:2;2212;2208:11;2198:21;;2238:6;2228:16;;;;;1564:686;;;;;:::o;2255:373::-;2371:12;;-1:-1:-1;;;;;2367:21:293;;;2355:34;;2442:4;2431:16;;;2425:23;2421:32;;;2405:14;;;2398:56;2503:4;2492:16;;;2486:23;2470:14;;;2463:47;2559:4;2548:16;;;2542:23;2526:14;;;2519:47;2615:4;2604:16;;;2598:23;2582:14;;2575:47;2255:373::o;2633:422::-;2674:3;2712:5;2706:12;2739:6;2734:3;2727:19;2764:1;2774:162;2788:6;2785:1;2782:13;2774:162;;;2850:4;2906:13;;;2902:22;;2896:29;2878:11;;;2874:20;;2867:59;2803:12;2774:162;;;2778:3;2981:1;2974:4;2965:6;2960:3;2956:16;2952:27;2945:38;3044:4;3037:2;3033:7;3028:2;3020:6;3016:15;3012:29;3007:3;3003:39;2999:50;2992:57;;;2633:422;;;;:::o;3060:838::-;3350:2;3362:21;;;3432:13;;3335:18;;;3454:22;;;3302:4;;3529;;3507:2;3492:18;;;3556:15;;;3302:4;3599:191;3613:6;3610:1;3607:13;3599:191;;;3662:46;3704:3;3695:6;3689:13;3662:46;:::i;:::-;3737:4;3728:14;;;;;3765:15;;;;3635:1;3628:9;3599:191;;;3603:3;;;3835:9;3830:3;3826:19;3821:2;3810:9;3806:18;3799:47;3863:29;3888:3;3880:6;3863:29;:::i;3903:217::-;4050:2;4039:9;4032:21;4013:4;4070:44;4110:2;4099:9;4095:18;4087:6;4070:44;:::i;4333:167::-;4400:20;;4460:14;4449:26;;4439:37;;4429:65;;4490:1;4487;4480:12;4505:184;4563:6;4616:2;4604:9;4595:7;4591:23;4587:32;4584:52;;;4632:1;4629;4622:12;4584:52;4655:28;4673:9;4655:28;:::i;6414:252::-;6481:6;6489;6542:2;6530:9;6521:7;6517:23;6513:32;6510:52;;;6558:1;6555;6548:12;6510:52;6581:28;6599:9;6581:28;:::i;:::-;6571:38;6656:2;6641:18;;;;6628:32;;-1:-1:-1;;;6414:252:293:o;6876:171::-;6943:20;;-1:-1:-1;;;;;6992:30:293;;6982:41;;6972:69;;7037:1;7034;7027:12;7052:173;7120:20;;-1:-1:-1;;;;;7169:31:293;;7159:42;;7149:70;;7215:1;7212;7205:12;7230:399;7314:6;7322;7330;7338;7391:3;7379:9;7370:7;7366:23;7362:33;7359:53;;;7408:1;7405;7398:12;7359:53;7431:28;7449:9;7431:28;:::i;:::-;7421:38;;7478:37;7511:2;7500:9;7496:18;7478:37;:::i;:::-;7468:47;;7562:2;7551:9;7547:18;7534:32;7524:42;;7585:38;7619:2;7608:9;7604:18;7585:38;:::i;:::-;7575:48;;7230:399;;;;;;;:::o;7816:881::-;7921:6;7929;7937;7945;7953;7961;8014:3;8002:9;7993:7;7989:23;7985:33;7982:53;;;8031:1;8028;8021:12;7982:53;8054:28;8072:9;8054:28;:::i;:::-;8044:38;;8101;8135:2;8124:9;8120:18;8101:38;:::i;:::-;8091:48;;8158:38;8192:2;8181:9;8177:18;8158:38;:::i;:::-;8148:48;;8243:2;8232:9;8228:18;8215:32;8205:42;;8298:3;8287:9;8283:19;8270:33;-1:-1:-1;;;;;8363:2:293;8355:6;8352:14;8349:34;;;8379:1;8376;8369:12;8349:34;8417:6;8406:9;8402:22;8392:32;;8462:7;8455:4;8451:2;8447:13;8443:27;8433:55;;8484:1;8481;8474:12;8433:55;8524:2;8511:16;8550:2;8542:6;8539:14;8536:34;;;8566:1;8563;8556:12;8536:34;8611:7;8606:2;8597:6;8593:2;8589:15;8585:24;8582:37;8579:57;;;8632:1;8629;8622:12;8579:57;8663:2;8659;8655:11;8645:21;;8685:6;8675:16;;;;;7816:881;;;;;;;;:::o;8702:256::-;8768:6;8776;8829:2;8817:9;8808:7;8804:23;8800:32;8797:52;;;8845:1;8842;8835:12;8797:52;8868:28;8886:9;8868:28;:::i;:::-;8858:38;;8915:37;8948:2;8937:9;8933:18;8915:37;:::i;:::-;8905:47;;8702:256;;;;;:::o;8963:252::-;9151:3;9136:19;;9164:45;9140:9;9191:6;9164:45;:::i;9220:127::-;9281:10;9276:3;9272:20;9269:1;9262:31;9312:4;9309:1;9302:15;9336:4;9333:1;9326:15;9352:116;9436:1;9429:5;9426:12;9416:46;;9442:18;;:::i;9473:242::-;9622:2;9607:18;;9634:41;9668:6;9634:41;:::i;:::-;9684:25;;;9473:242;:::o;10227:604::-;10478:13;;-1:-1:-1;;;;;10474:22:293;;;10456:41;;10557:4;10545:17;;;10539:24;-1:-1:-1;;;;;10535:57:293;10513:20;;;10506:87;10653:4;10641:17;;;10635:24;10631:33;;;10609:20;;;10602:63;10712:4;10700:17;;10694:24;10405:3;10390:19;;;10727:47;10694:24;10727:47;:::i;:::-;10812:12;10805:4;10794:9;10790:20;10783:42;;10227:604;;;;:::o;10836:127::-;10897:10;10892:3;10888:20;10885:1;10878:31;10928:4;10925:1;10918:15;10952:4;10949:1;10942:15;10968:253;11040:2;11034:9;11082:4;11070:17;;-1:-1:-1;;;;;11102:34:293;;11138:22;;;11099:62;11096:88;;;11164:18;;:::i;:::-;11200:2;11193:22;10968:253;:::o;11226:275::-;11297:2;11291:9;11362:2;11343:13;;-1:-1:-1;;11339:27:293;11327:40;;-1:-1:-1;;;;;11382:34:293;;11418:22;;;11379:62;11376:88;;;11444:18;;:::i;:::-;11480:2;11473:22;11226:275;;-1:-1:-1;11226:275:293:o;11506:118::-;11592:5;11585:13;11578:21;11571:5;11568:32;11558:60;;11614:1;11611;11604:12;11629:156;11695:20;;11755:4;11744:16;;11734:27;;11724:55;;11775:1;11772;11765:12;11790:1564;11903:6;11911;11919;11927;11980:3;11968:9;11959:7;11955:23;11951:33;11948:53;;;11997:1;11994;11987:12;11948:53;12020:28;12038:9;12020:28;:::i;:::-;12010:38;;12067:2;12120;12109:9;12105:18;12092:32;-1:-1:-1;;;;;12184:2:293;12176:6;12173:14;12170:34;;;12200:1;12197;12190:12;12170:34;12223:22;;;;12279:4;12261:16;;;12257:27;12254:47;;;12297:1;12294;12287:12;12254:47;12323:22;;:::i;:::-;12368:21;12386:2;12368:21;:::i;:::-;12361:5;12354:36;12422:30;12448:2;12444;12440:11;12422:30;:::i;:::-;12417:2;12410:5;12406:14;12399:54;12498:2;12494;12490:11;12477:25;12511:30;12533:7;12511:30;:::i;:::-;12568:2;12557:14;;12550:31;12634:2;12626:11;;;12613:25;12597:14;;;12590:49;12685:3;12677:12;;12664:26;12702:16;;;12699:36;;;12731:1;12728;12721:12;12699:36;12762:8;12758:2;12754:17;12744:27;;;12809:7;12802:4;12798:2;12794:13;12790:27;12780:55;;12831:1;12828;12821:12;12780:55;12867:2;12854:16;12889:2;12885;12882:10;12879:36;;;12895:18;;:::i;:::-;12937:53;12980:2;12961:13;;-1:-1:-1;;12957:27:293;12953:36;;12937:53;:::i;:::-;12924:66;;13013:2;13006:5;12999:17;13053:7;13048:2;13043;13039;13035:11;13031:20;13028:33;13025:53;;;13074:1;13071;13064:12;13025:53;13129:2;13124;13120;13116:11;13111:2;13104:5;13100:14;13087:45;13173:1;13152:14;;;13148:23;;;13141:34;;;;13202:3;13191:15;;13184:30;-1:-1:-1;13195:5:293;-1:-1:-1;13257:36:293;13289:2;13274:18;;13257:36;:::i;:::-;13247:46;;13312:36;13344:2;13333:9;13329:18;13312:36;:::i;13359:241::-;13501:2;13486:18;;13534:1;13523:13;;13513:47;;13540:18;;:::i;13605:698::-;13830:13;;13812:32;;13891:4;13879:17;;13873:24;13799:3;13784:19;;;13906:47;13873:24;13906:47;:::i;:::-;13991:12;13984:4;13973:9;13969:20;13962:42;;-1:-1:-1;;;;;14064:4:293;14056:6;14052:17;14046:24;14042:49;14035:4;14024:9;14020:20;14013:79;14162:4;14154:6;14150:17;14144:24;14137:32;14130:40;14123:4;14112:9;14108:20;14101:70;14227:4;14219:6;14215:17;14209:24;14202:4;14191:9;14187:20;14180:54;14290:4;14282:6;14278:17;14272:24;14265:4;14254:9;14250:20;14243:54;13605:698;;;;:::o;14308:514::-;14561:6;14550:9;14543:25;14604:6;14599:2;14588:9;14584:18;14577:34;14647:6;14642:2;14631:9;14627:18;14620:34;14704:6;14697:14;14690:22;14685:2;14674:9;14670:18;14663:50;14750:3;14744;14733:9;14729:19;14722:32;14524:4;14771:45;14811:3;14800:9;14796:19;14788:6;14771:45;:::i;15070:245::-;15137:6;15190:2;15178:9;15169:7;15165:23;15161:32;15158:52;;;15206:1;15203;15196:12;15158:52;15238:9;15232:16;15257:28;15279:5;15257:28;:::i;15320:380::-;15399:1;15395:12;;;;15442;;;15463:61;;15517:4;15509:6;15505:17;15495:27;;15463:61;15570:2;15562:6;15559:14;15539:18;15536:38;15533:161;;15616:10;15611:3;15607:20;15604:1;15597:31;15651:4;15648:1;15641:15;15679:4;15676:1;15669:15;15533:161;;15320:380;;;:::o;16005:127::-;16066:10;16061:3;16057:20;16054:1;16047:31;16097:4;16094:1;16087:15;16121:4;16118:1;16111:15;16137:176;16204:14;16238:10;;;16250;;;16234:27;;16273:11;;;16270:37;;;16287:18;;:::i;16443:544::-;16544:2;16539:3;16536:11;16533:448;;;16580:1;16605:5;16601:2;16594:17;16650:4;16646:2;16636:19;16720:2;16708:10;16704:19;16701:1;16697:27;16691:4;16687:38;16756:4;16744:10;16741:20;16738:47;;;-1:-1:-1;16779:4:293;16738:47;16834:2;16829:3;16825:12;16822:1;16818:20;16812:4;16808:31;16798:41;;16889:82;16907:2;16900:5;16897:13;16889:82;;;16952:17;;;16933:1;16922:13;16889:82;;;16893:3;;;16443:544;;;:::o;17163:1348::-;17287:3;17281:10;-1:-1:-1;;;;;17306:6:293;17303:30;17300:56;;;17336:18;;:::i;:::-;17365:96;17454:6;17414:38;17446:4;17440:11;17414:38;:::i;:::-;17408:4;17365:96;:::i;:::-;17516:4;;17580:2;17569:14;;17597:1;17592:662;;;;18298:1;18315:6;18312:89;;;-1:-1:-1;18367:19:293;;;18361:26;18312:89;-1:-1:-1;;17120:1:293;17116:11;;;17112:24;17108:29;17098:40;17144:1;17140:11;;;17095:57;18414:81;;17562:943;;17592:662;16390:1;16383:14;;;16427:4;16414:18;;-1:-1:-1;;17628:20:293;;;17745:236;17759:7;17756:1;17753:14;17745:236;;;17848:19;;;17842:26;17827:42;;17940:27;;;;17908:1;17896:14;;;;17775:19;;17745:236;;;17749:3;18009:6;18000:7;17997:19;17994:201;;;18070:19;;;18064:26;-1:-1:-1;;18153:1:293;18149:14;;;18165:3;18145:24;18141:37;18137:42;18122:58;18107:74;;17994:201;-1:-1:-1;;;;;18241:1:293;18225:14;;;18221:22;18208:36;;-1:-1:-1;17163:1348:293:o;18729:127::-;18790:10;18785:3;18781:20;18778:1;18771:31;18821:4;18818:1;18811:15;18845:4;18842:1;18835:15;18861:184;18919:6;18972:2;18960:9;18951:7;18947:23;18943:32;18940:52;;;18988:1;18985;18978:12;18940:52;19011:28;19029:9;19011:28;:::i;19050:135::-;19089:3;19110:17;;;19107:43;;19130:18;;:::i;:::-;-1:-1:-1;19177:1:293;19166:13;;19050:135::o;19804:128::-;19871:9;;;19892:11;;;19889:37;;;19906:18;;:::i;19937:209::-;19975:3;-1:-1:-1;;;;;20056:2:293;20049:5;20045:14;20083:2;20074:7;20071:15;20068:41;;20089:18;;:::i;:::-;20138:1;20125:15;;19937:209;-1:-1:-1;;;19937:209:293:o;20151:125::-;20216:9;;;20237:10;;;20234:36;;;20250:18;;:::i;20281:422::-;20370:1;20413:5;20370:1;20427:270;20448:7;20438:8;20435:21;20427:270;;;20507:4;20503:1;20499:6;20495:17;20489:4;20486:27;20483:53;;;20516:18;;:::i;:::-;20566:7;20556:8;20552:22;20549:55;;;20586:16;;;;20549:55;20665:22;;;;20625:15;;;;20427:270;;;20431:3;20281:422;;;;;:::o;20708:806::-;20757:5;20787:8;20777:80;;-1:-1:-1;20828:1:293;20842:5;;20777:80;20876:4;20866:76;;-1:-1:-1;20913:1:293;20927:5;;20866:76;20958:4;20976:1;20971:59;;;;21044:1;21039:130;;;;20951:218;;20971:59;21001:1;20992:10;;21015:5;;;21039:130;21076:3;21066:8;21063:17;21060:43;;;21083:18;;:::i;:::-;-1:-1:-1;;21139:1:293;21125:16;;21154:5;;20951:218;;21253:2;21243:8;21240:16;21234:3;21228:4;21225:13;21221:36;21215:2;21205:8;21202:16;21197:2;21191:4;21188:12;21184:35;21181:77;21178:159;;;-1:-1:-1;21290:19:293;;;21322:5;;21178:159;21369:34;21394:8;21388:4;21369:34;:::i;:::-;21439:6;21435:1;21431:6;21427:19;21418:7;21415:32;21412:58;;;21450:18;;:::i;:::-;21488:20;;20708:806;-1:-1:-1;;;20708:806:293:o;21519:140::-;21577:5;21606:47;21647:4;21637:8;21633:19;21627:4;21606:47;:::i;21664:607::-;21770:6;21823:2;21811:9;21802:7;21798:23;21794:32;21791:52;;;21839:1;21836;21829:12;21791:52;21872:2;21866:9;21914:2;21906:6;21902:15;21983:6;21971:10;21968:22;-1:-1:-1;;;;;21935:10:293;21932:34;21929:62;21926:88;;;21994:18;;:::i;:::-;22030:2;22023:22;22069:16;;22054:32;;22129:2;22114:18;;22108:25;22173:8;22162:20;;22152:31;;22142:59;;22197:1;22194;22187:12;22142:59;22229:2;22217:15;;22210:30;22221:6;21664:607;-1:-1:-1;;;21664:607:293:o",
    "linkReferences": {},
    "immutableReferences": {
      "90271": [
        {
          "start": 658,
          "length": 32
        },
        {
          "start": 1940,
          "length": 32
        },
        {
          "start": 2011,
          "length": 32
        },
        {
          "start": 2375,
          "length": 32
        },
        {
          "start": 2482,
          "length": 32
        },
        {
          "start": 2548,
          "length": 32
        },
        {
          "start": 2765,
          "length": 32
        },
        {
          "start": 3211,
          "length": 32
        },
        {
          "start": 3277,
          "length": 32
        },
        {
          "start": 3527,
          "length": 32
        },
        {
          "start": 3593,
          "length": 32
        },
        {
          "start": 4233,
          "length": 32
        },
        {
          "start": 4299,
          "length": 32
        },
        {
          "start": 4559,
          "length": 32
        },
        {
          "start": 4625,
          "length": 32
        },
        {
          "start": 5524,
          "length": 32
        },
        {
          "start": 5590,
          "length": 32
        },
        {
          "start": 5914,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "PARENT()": "122b83f9",
    "TYPE()": "bb24fe8a",
    "VEECODE()": "d61735ca",
    "abort(uint96)": "1ed75f1f",
    "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": "bae96bdd",
    "auctionType()": "994595e1",
    "bid(uint96,address,address,uint256,bytes)": "87698a31",
    "cancelAuction(uint96)": "b04046df",
    "capacityInQuote(uint96)": "39792cdc",
    "claimBids(uint96,uint64[])": "0a35511b",
    "dedicatedSettlePeriod()": "a85cebb6",
    "getAuctionData(uint96)": "cadb3383",
    "getBid(uint96,uint64)": "a8bf44e4",
    "getBidClaim(uint96,uint64)": "8f21c318",
    "getBidIdAtIndex(uint96,uint256)": "7d7b6853",
    "getBidIds(uint96,uint256,uint256)": "00b33217",
    "getLot(uint96)": "4e1f4258",
    "getNumBids(uint96)": "d899a337",
    "getPartialFill(uint96)": "a16f7ef7",
    "hasEnded(uint96)": "03855921",
    "isLive(uint96)": "732efc03",
    "isUpcoming(uint96)": "0440ec53",
    "lotAuctionOutput(uint96)": "0cd0bcf2",
    "lotData(uint96)": "5806afc3",
    "minAuctionDuration()": "54134876",
    "refundBid(uint96,uint64,uint256,address)": "7d9234bc",
    "remainingCapacity(uint96)": "ace54da5",
    "setDedicatedSettlePeriod(uint48)": "29da5abd",
    "setMinAuctionDuration(uint48)": "12d6ef2d",
    "settle(uint96,uint256)": "cd280bdb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_DedicatedSettlePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InsufficientCapacity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"bidId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidBidId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidLotId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"start_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidStart\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotNotConcluded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_OnlyLotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"name\":\"Bid_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent_\",\"type\":\"address\"}],\"name\":\"Module_InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module_OnlyInternal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"Module_OnlyParent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotPermitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PARENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"internalType\":\"enum Module.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VEECODE\",\"outputs\":[{\"internalType\":\"Veecode\",\"name\":\"\",\"type\":\"bytes7\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"implParams\",\"type\":\"bytes\"}],\"internalType\":\"struct IAuction.AuctionParams\",\"name\":\"params_\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals_\",\"type\":\"uint8\"}],\"name\":\"auction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionType\",\"outputs\":[{\"internalType\":\"enum IAuction.AuctionType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"bidder_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"auctionData_\",\"type\":\"bytes\"}],\"name\":\"bid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"capacityInQuote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64[]\",\"name\":\"bidIds_\",\"type\":\"uint64[]\"}],\"name\":\"claimBids\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchAuction.BidClaim[]\",\"name\":\"bidClaims\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dedicatedSettlePeriod\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getAuctionData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum IFixedPriceBatch.LotStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"nextBidId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementCleared\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFilled\",\"type\":\"uint256\"}],\"internalType\":\"struct IFixedPriceBatch.AuctionData\",\"name\":\"auctionData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"getBid\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"enum IFixedPriceBatch.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IFixedPriceBatch.Bid\",\"name\":\"bid\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"getBidClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchAuction.BidClaim\",\"name\":\"bidClaim\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getBidIdAtIndex\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getBidIds\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getLot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuction.Lot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"getNumBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getPartialFill\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasPartialFill\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"refund\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"internalType\":\"struct IFixedPriceBatch.PartialFill\",\"name\":\"partialFill\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"hasEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"isUpcoming\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"lotAuctionOutput\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"}],\"name\":\"lotData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuctionDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"refundBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"remainingCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"period_\",\"type\":\"uint48\"}],\"name\":\"setDedicatedSettlePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"num_\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic.\"},\"TYPE()\":{\"details\":\"This enables the parent contract to check that the module Keycode specifiedis of the correct type\"},\"abort(uint96)\":{\"details\":\"Implements a basic abort function that:             - Validates the lot id and state             - Calls the implementation-specific function             The abort function allows anyone to abort the lot after the conclusion and settlement time has passed.             This can be useful if the lot is unable to be settled, or if the seller is unwilling to settle the lot.             This function reverts if:             - The lot id is invalid             - The lot has not concluded             - The lot is in the dedicated settle period             - The lot is settled (after which it cannot be aborted)\",\"params\":{\"lotId_\":\"The lot id\"}},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"details\":\"If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum\",\"params\":{\"baseTokenDecimals_\":\"The base token decimals\",\"lotId_\":\"The lot id\",\"params_\":\"The auction parameters\",\"quoteTokenDecimals_\":\"The quote token decimals\"}},\"bid(uint96,address,address,uint256,bytes)\":{\"details\":\"Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module\",\"params\":{\"amount_\":\"The amount of quote tokens to bid\",\"auctionData_\":\"The auction-specific data\",\"bidder_\":\"The bidder of the purchased tokens\",\"lotId_\":\"The lot id\",\"referrer_\":\"The referrer of the bid\"},\"returns\":{\"bidId\":\"          The bid id\"}},\"cancelAuction(uint96)\":{\"details\":\"Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded\",\"params\":{\"lotId_\":\"The lot id\"}},\"capacityInQuote(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the capacity is in quote tokens\"}},\"claimBids(uint96,uint64[])\":{\"details\":\"Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module\",\"params\":{\"bidIds_\":\"The bid ids\",\"lotId_\":\"The lot id\"},\"returns\":{\"auctionOutput\":\"  The auction-specific output\",\"bidClaims\":\"      The bid claim data\"}},\"getAuctionData(uint96)\":{\"details\":\"This function reverts if:             - The lot ID is invalid\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"auctionData_\":\"   The `AuctionData`\"}},\"getBid(uint96,uint64)\":{\"details\":\"This function reverts if:             - The lot ID is invalid             - The bid ID is invalid\",\"params\":{\"bidId_\":\"The bid ID\",\"lotId_\":\"The lot ID\"},\"returns\":{\"bid\":\"            The `Bid` data\"}},\"getBidClaim(uint96,uint64)\":{\"details\":\"This function reverts if:             - The lot ID is invalid             - The lot is not settled (since there would be no claim)             - The bid ID is invalid\",\"params\":{\"bidId_\":\"The bid ID\",\"lotId_\":\"The lot ID\"},\"returns\":{\"bidClaim\":\"   The bid claim data\"}},\"getBidIdAtIndex(uint96,uint256)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array\",\"params\":{\"index_\":\"The index\",\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"  The bid ID\"}},\"getBidIds(uint96,uint256,uint256)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array\",\"params\":{\"count_\":\"The number of bids to retrieve\",\"lotId_\":\"The lot ID\",\"start_\":\"The index to start retrieving bid IDs from\"},\"returns\":{\"_0\":\" The bid IDs\"}},\"getLot(uint96)\":{\"params\":{\"lotId_\":\"The lot ID\"}},\"getNumBids(uint96)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array             A proxy is using the nextBidId to determine how many bids have been submitted, but this doesn't consider refunds\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"The number of bids\"}},\"getPartialFill(uint96)\":{\"details\":\"For ease of use, this function determines if a partial fill exists.             This function reverts if:             - The lot ID is invalid             - The lot is not settled\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"hasPartialFill\":\" True if a partial fill exists\",\"partialFill\":\"    The `PartialFill` data\"}},\"hasEnded(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"isLive(uint96)\":{\"details\":\"A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"isUpcoming(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the lot has not started yet AND has not been cancelled             - Return false if the lot is active, has ended, or was cancelled\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is upcoming\"}},\"refundBid(uint96,uint64,uint256,address)\":{\"details\":\"Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is concluded, decrypted or settled             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module\",\"params\":{\"bidId_\":\"The bid id\",\"caller_\":\"The caller\",\"index_\":\"The index of the bid ID in the auction's bid list\",\"lotId_\":\"The lot id\"},\"returns\":{\"refund\":\"     The amount of quote tokens to refund\"}},\"remainingCapacity(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return the remaining capacity of the lot\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"uint96 The remaining capacity of the lot\"}},\"setMinAuctionDuration(uint48)\":{\"details\":\"This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`.\"},\"settle(uint96,uint256)\":{\"details\":\"Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module\",\"params\":{\"lotId_\":\"The lot id\",\"num_\":\"The number of winning bids to settle (capped at the remaining number if more is provided)\"},\"returns\":{\"auctionOutput\":\"  Custom data returned by the auction module\",\"capacity\":\"       The original capacity of the lot\",\"finished\":\"       Whether the settlement is finished\",\"totalIn\":\"        Total amount of quote tokens from bids that were filled\",\"totalOut\":\"       Total amount of base tokens paid out to winning bids\"}}},\"stateVariables\":{\"_auctionData\":{\"details\":\"Access via `getAuctionData()`\"},\"_bids\":{\"details\":\"Access via `getBid()`\"},\"_lotPartialFill\":{\"details\":\"Each FPBA can have at most one partial fill             Access via `getPartialFill()`\"}},\"title\":\"FixedPriceBatch\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_InvalidParent(address)\":[{\"notice\":\"Error when the parent contract is invalid\"}],\"Module_OnlyInternal()\":[{\"notice\":\"Error when a module function is called by a non-internal contract\"}],\"Module_OnlyParent(address)\":[{\"notice\":\"Error when a module function is called by a non-parent contract\"}]},\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"PARENT()\":{\"notice\":\"The parent contract for this module.\"},\"TYPE()\":{\"notice\":\"2 byte identifier for the module type\"},\"VEECODE()\":{\"notice\":\"7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z.\"},\"abort(uint96)\":{\"notice\":\"Abort a batch auction that cannot be settled, refunding the seller and allowing bidders to claim refunds\"},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"notice\":\"Create an auction lot\"},\"auctionType()\":{\"notice\":\"Get the auction type\"},\"bid(uint96,address,address,uint256,bytes)\":{\"notice\":\"Bid on an auction lot\"},\"cancelAuction(uint96)\":{\"notice\":\"Cancel an auction lot\"},\"capacityInQuote(uint96)\":{\"notice\":\"Get whether or not the capacity is in quote tokens\"},\"claimBids(uint96,uint64[])\":{\"notice\":\"Claim multiple bids\"},\"dedicatedSettlePeriod()\":{\"notice\":\"Time period after auction conclusion where bidders cannot refund bids\"},\"getAuctionData(uint96)\":{\"notice\":\"Returns the `AuctionData` data for an auction lot\"},\"getBid(uint96,uint64)\":{\"notice\":\"Returns the `Bid` and `EncryptedBid` data for a given lot and bid ID\"},\"getBidClaim(uint96,uint64)\":{\"notice\":\"Get the claim data for a bidThis provides information on the outcome of a bid, independent of the claim status\"},\"getBidIdAtIndex(uint96,uint256)\":{\"notice\":\"Get the bid ID at the given index\"},\"getBidIds(uint96,uint256,uint256)\":{\"notice\":\"Get the bid IDs from the given index\"},\"getLot(uint96)\":{\"notice\":\"Get the lot data for a given lot ID\"},\"getNumBids(uint96)\":{\"notice\":\"Get the number of bids for a lot\"},\"getPartialFill(uint96)\":{\"notice\":\"Returns the `PartialFill` data for an auction lot\"},\"hasEnded(uint96)\":{\"notice\":\"Returns whether the auction has ended\"},\"isLive(uint96)\":{\"notice\":\"Returns whether the auction is currently accepting bids or purchases\"},\"isUpcoming(uint96)\":{\"notice\":\"Returns whether the auction is upcoming\"},\"lotAuctionOutput(uint96)\":{\"notice\":\"Custom auction output for each lot\"},\"lotData(uint96)\":{\"notice\":\"General information pertaining to auction lots\"},\"minAuctionDuration()\":{\"notice\":\"Minimum auction duration in seconds\"},\"refundBid(uint96,uint64,uint256,address)\":{\"notice\":\"Refund a bid\"},\"remainingCapacity(uint96)\":{\"notice\":\"Get the remaining capacity of a lot\"},\"setMinAuctionDuration(uint48)\":{\"notice\":\"Set the minimum auction duration\"},\"settle(uint96,uint256)\":{\"notice\":\"Settle a batch auction lot with on-chain storage and settlement\"}},\"notice\":\"A module for creating fixed price batch auctions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/auctions/batch/FPB.sol\":\"FixedPriceBatch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":g-uni-v1-core/=lib/g-uni-v1-core/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\":uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4\",\"dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/interfaces/modules/IAuction.sol\":{\"keccak256\":\"0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304\",\"dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg\"]},\"src/interfaces/modules/IBatchAuction.sol\":{\"keccak256\":\"0xbe814e420085ee1f321fef8d89ddd6b4c668e967bff5eccfbfcc2c994393a02b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c1cf24444584582d87de6df951a80f28da9e611a8118a3796051fcc5087747cc\",\"dweb:/ipfs/QmQss5Fo8wuYoAgjNZYRTUqSEwHeV4SXCVJTQazbEo1aCw\"]},\"src/interfaces/modules/auctions/IFixedPriceBatch.sol\":{\"keccak256\":\"0xa342fb31e1bc939d262d9e0d4ec40e10e89c94fae91ae8109cb96604c0247b72\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://96796717cd7f90c5dab18659f0709c79a6a947d7572d1a895f207f18287edbe1\",\"dweb:/ipfs/QmUiX5dALS2gY5YMCgjTcm6wNoQJDDbr9aiBfbtVG39d9n\"]},\"src/modules/Auction.sol\":{\"keccak256\":\"0x2070cb8904a5f7e050bface0eb79dee8f5dde3150dbd9355e32bc86333e83db7\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://06df7763d21e8cd6159375e4e47333b634440bafe5ec25e0b2bb1186691da4fe\",\"dweb:/ipfs/QmbbmXG3aq8icrKSdcBCs2s8jGYGWV1Y1WrsyZ1w6DvuKs\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd\",\"dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu\"]},\"src/modules/Modules.sol\":{\"keccak256\":\"0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee\",\"dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v\"]},\"src/modules/auctions/BatchAuctionModule.sol\":{\"keccak256\":\"0x7fd51c1ba66d2ee5988f96391983d7ac3ce14aa282b56affba69cc55de3f8907\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://cb7c98b9a308f6ba21be2cc56398fc719df9a5e0a731f56f49b66213a9476085\",\"dweb:/ipfs/QmWU8pW8AKL3tvfL4EZTRxpkCtvGGwLNDpuFCYauCVjnXf\"]},\"src/modules/auctions/batch/FPB.sol\":{\"keccak256\":\"0x822a4a65b93091806fec304bc64d0404bb4aa867f4646244f3697f450971843c\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://a9de4260a31523afff44c1ddcc764563c5c6aa331f019d553d3e8be06cd3b58d\",\"dweb:/ipfs/QmRPJSbVVpK1DKSkAuAshDzj8c7y1kypSDCp7g7KujAJ9H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "auctionHouse_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_AmountLessThanMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_DedicatedSettlePeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_InsufficientCapacity"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "bidId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_InvalidBidId"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "duration_",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "minimum_",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Auction_InvalidDuration"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_InvalidLotId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_InvalidParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "start_",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "minimum_",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Auction_InvalidStart"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_LotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_LotNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_LotNotConcluded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_NotBidder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_OnlyLotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "type": "error",
          "name": "Auction_WrongState"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "bidId",
              "type": "uint64"
            }
          ],
          "type": "error",
          "name": "Bid_WrongState"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parent_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_InvalidParent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module_OnlyInternal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_OnlyParent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotPermitted"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PARENT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "TYPE",
          "outputs": [
            {
              "internalType": "enum Module.Type",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VEECODE",
          "outputs": [
            {
              "internalType": "Veecode",
              "name": "",
              "type": "bytes7"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "abort"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "struct IAuction.AuctionParams",
              "name": "params_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint48",
                  "name": "start",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "duration",
                  "type": "uint48"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "implParams",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals_",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "auction"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "auctionType",
          "outputs": [
            {
              "internalType": "enum IAuction.AuctionType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "bidder_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "auctionData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bid",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "bidId",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAuction"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "capacityInQuote",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint64[]",
              "name": "bidIds_",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimBids",
          "outputs": [
            {
              "internalType": "struct IBatchAuction.BidClaim[]",
              "name": "bidClaims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dedicatedSettlePeriod",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuctionData",
          "outputs": [
            {
              "internalType": "struct IFixedPriceBatch.AuctionData",
              "name": "auctionData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IFixedPriceBatch.LotStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "nextBidId",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementCleared",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBidAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minFilled",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "bidId_",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBid",
          "outputs": [
            {
              "internalType": "struct IFixedPriceBatch.Bid",
              "name": "bid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "amount",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "enum IFixedPriceBatch.BidStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "bidId_",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidClaim",
          "outputs": [
            {
              "internalType": "struct IBatchAuction.BidClaim",
              "name": "bidClaim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIdAtIndex",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIds",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLot",
          "outputs": [
            {
              "internalType": "struct IAuction.Lot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint48",
                  "name": "start",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "conclusion",
                  "type": "uint48"
                },
                {
                  "internalType": "uint8",
                  "name": "quoteTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "purchased",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumBids",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPartialFill",
          "outputs": [
            {
              "internalType": "bool",
              "name": "hasPartialFill",
              "type": "bool"
            },
            {
              "internalType": "struct IFixedPriceBatch.PartialFill",
              "name": "partialFill",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "bidId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint96",
                  "name": "refund",
                  "type": "uint96"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasEnded",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isUpcoming",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotAuctionOutput",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "id",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotData",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minAuctionDuration",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "bidId_",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "index_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refundBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "refund",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "period_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDedicatedSettlePeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "duration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinAuctionDuration"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "num_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "finished",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic."
          },
          "TYPE()": {
            "details": "This enables the parent contract to check that the module Keycode specifiedis of the correct type"
          },
          "abort(uint96)": {
            "details": "Implements a basic abort function that:             - Validates the lot id and state             - Calls the implementation-specific function             The abort function allows anyone to abort the lot after the conclusion and settlement time has passed.             This can be useful if the lot is unable to be settled, or if the seller is unwilling to settle the lot.             This function reverts if:             - The lot id is invalid             - The lot has not concluded             - The lot is in the dedicated settle period             - The lot is settled (after which it cannot be aborted)",
            "params": {
              "lotId_": "The lot id"
            }
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "details": "If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum",
            "params": {
              "baseTokenDecimals_": "The base token decimals",
              "lotId_": "The lot id",
              "params_": "The auction parameters",
              "quoteTokenDecimals_": "The quote token decimals"
            }
          },
          "bid(uint96,address,address,uint256,bytes)": {
            "details": "Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module",
            "params": {
              "amount_": "The amount of quote tokens to bid",
              "auctionData_": "The auction-specific data",
              "bidder_": "The bidder of the purchased tokens",
              "lotId_": "The lot id",
              "referrer_": "The referrer of the bid"
            },
            "returns": {
              "bidId": "          The bid id"
            }
          },
          "cancelAuction(uint96)": {
            "details": "Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded",
            "params": {
              "lotId_": "The lot id"
            }
          },
          "capacityInQuote(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens",
            "params": {
              "lotId_": "The lot id"
            },
            "returns": {
              "_0": "bool    Whether or not the capacity is in quote tokens"
            }
          },
          "claimBids(uint96,uint64[])": {
            "details": "Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module",
            "params": {
              "bidIds_": "The bid ids",
              "lotId_": "The lot id"
            },
            "returns": {
              "auctionOutput": "  The auction-specific output",
              "bidClaims": "      The bid claim data"
            }
          },
          "getAuctionData(uint96)": {
            "details": "This function reverts if:             - The lot ID is invalid",
            "params": {
              "lotId_": "The lot ID"
            },
            "returns": {
              "auctionData_": "   The `AuctionData`"
            }
          },
          "getBid(uint96,uint64)": {
            "details": "This function reverts if:             - The lot ID is invalid             - The bid ID is invalid",
            "params": {
              "bidId_": "The bid ID",
              "lotId_": "The lot ID"
            },
            "returns": {
              "bid": "            The `Bid` data"
            }
          },
          "getBidClaim(uint96,uint64)": {
            "details": "This function reverts if:             - The lot ID is invalid             - The lot is not settled (since there would be no claim)             - The bid ID is invalid",
            "params": {
              "bidId_": "The bid ID",
              "lotId_": "The lot ID"
            },
            "returns": {
              "bidClaim": "   The bid claim data"
            }
          },
          "getBidIdAtIndex(uint96,uint256)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array",
            "params": {
              "index_": "The index",
              "lotId_": "The lot ID"
            },
            "returns": {
              "_0": "  The bid ID"
            }
          },
          "getBidIds(uint96,uint256,uint256)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array",
            "params": {
              "count_": "The number of bids to retrieve",
              "lotId_": "The lot ID",
              "start_": "The index to start retrieving bid IDs from"
            },
            "returns": {
              "_0": " The bid IDs"
            }
          },
          "getLot(uint96)": {
            "params": {
              "lotId_": "The lot ID"
            }
          },
          "getNumBids(uint96)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array             A proxy is using the nextBidId to determine how many bids have been submitted, but this doesn't consider refunds",
            "params": {
              "lotId_": "The lot ID"
            },
            "returns": {
              "_0": "The number of bids"
            }
          },
          "getPartialFill(uint96)": {
            "details": "For ease of use, this function determines if a partial fill exists.             This function reverts if:             - The lot ID is invalid             - The lot is not settled",
            "params": {
              "lotId_": "The lot ID"
            },
            "returns": {
              "hasPartialFill": " True if a partial fill exists",
              "partialFill": "    The `PartialFill` data"
            }
          },
          "hasEnded(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases",
            "params": {
              "lotId_": "The lot id"
            },
            "returns": {
              "_0": "bool    Whether or not the lot is active"
            }
          },
          "isLive(uint96)": {
            "details": "A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)",
            "params": {
              "lotId_": "The lot ID"
            },
            "returns": {
              "_0": "bool    Whether or not the lot is active"
            }
          },
          "isUpcoming(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the lot has not started yet AND has not been cancelled             - Return false if the lot is active, has ended, or was cancelled",
            "params": {
              "lotId_": "The lot id"
            },
            "returns": {
              "_0": "bool    Whether or not the lot is upcoming"
            }
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "details": "Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is concluded, decrypted or settled             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module",
            "params": {
              "bidId_": "The bid id",
              "caller_": "The caller",
              "index_": "The index of the bid ID in the auction's bid list",
              "lotId_": "The lot id"
            },
            "returns": {
              "refund": "     The amount of quote tokens to refund"
            }
          },
          "remainingCapacity(uint96)": {
            "details": "The implementing function should handle the following:             - Return the remaining capacity of the lot",
            "params": {
              "lotId_": "The lot id"
            },
            "returns": {
              "_0": "uint96 The remaining capacity of the lot"
            }
          },
          "setMinAuctionDuration(uint48)": {
            "details": "This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`."
          },
          "settle(uint96,uint256)": {
            "details": "Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module",
            "params": {
              "lotId_": "The lot id",
              "num_": "The number of winning bids to settle (capped at the remaining number if more is provided)"
            },
            "returns": {
              "auctionOutput": "  Custom data returned by the auction module",
              "capacity": "       The original capacity of the lot",
              "finished": "       Whether the settlement is finished",
              "totalIn": "        Total amount of quote tokens from bids that were filled",
              "totalOut": "       Total amount of base tokens paid out to winning bids"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": {
            "notice": "Initialization function for the module"
          },
          "PARENT()": {
            "notice": "The parent contract for this module."
          },
          "TYPE()": {
            "notice": "2 byte identifier for the module type"
          },
          "VEECODE()": {
            "notice": "7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z."
          },
          "abort(uint96)": {
            "notice": "Abort a batch auction that cannot be settled, refunding the seller and allowing bidders to claim refunds"
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "notice": "Create an auction lot"
          },
          "auctionType()": {
            "notice": "Get the auction type"
          },
          "bid(uint96,address,address,uint256,bytes)": {
            "notice": "Bid on an auction lot"
          },
          "cancelAuction(uint96)": {
            "notice": "Cancel an auction lot"
          },
          "capacityInQuote(uint96)": {
            "notice": "Get whether or not the capacity is in quote tokens"
          },
          "claimBids(uint96,uint64[])": {
            "notice": "Claim multiple bids"
          },
          "dedicatedSettlePeriod()": {
            "notice": "Time period after auction conclusion where bidders cannot refund bids"
          },
          "getAuctionData(uint96)": {
            "notice": "Returns the `AuctionData` data for an auction lot"
          },
          "getBid(uint96,uint64)": {
            "notice": "Returns the `Bid` and `EncryptedBid` data for a given lot and bid ID"
          },
          "getBidClaim(uint96,uint64)": {
            "notice": "Get the claim data for a bidThis provides information on the outcome of a bid, independent of the claim status"
          },
          "getBidIdAtIndex(uint96,uint256)": {
            "notice": "Get the bid ID at the given index"
          },
          "getBidIds(uint96,uint256,uint256)": {
            "notice": "Get the bid IDs from the given index"
          },
          "getLot(uint96)": {
            "notice": "Get the lot data for a given lot ID"
          },
          "getNumBids(uint96)": {
            "notice": "Get the number of bids for a lot"
          },
          "getPartialFill(uint96)": {
            "notice": "Returns the `PartialFill` data for an auction lot"
          },
          "hasEnded(uint96)": {
            "notice": "Returns whether the auction has ended"
          },
          "isLive(uint96)": {
            "notice": "Returns whether the auction is currently accepting bids or purchases"
          },
          "isUpcoming(uint96)": {
            "notice": "Returns whether the auction is upcoming"
          },
          "lotAuctionOutput(uint96)": {
            "notice": "Custom auction output for each lot"
          },
          "lotData(uint96)": {
            "notice": "General information pertaining to auction lots"
          },
          "minAuctionDuration()": {
            "notice": "Minimum auction duration in seconds"
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "notice": "Refund a bid"
          },
          "remainingCapacity(uint96)": {
            "notice": "Get the remaining capacity of a lot"
          },
          "setMinAuctionDuration(uint48)": {
            "notice": "Set the minimum auction duration"
          },
          "settle(uint96,uint256)": {
            "notice": "Settle a batch auction lot with on-chain storage and settlement"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-math/node_modules/@prb/test/",
        "@uniswap/v3-core/=lib/uniswap-v3-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "g-uni-v1-core/=lib/g-uni-v1-core/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/solmate/src/",
        "uniswap-v2-core/=lib/uniswap-v2-core/contracts/",
        "uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/",
        "uniswap-v3-core/=lib/uniswap-v3-core/contracts/",
        "uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/auctions/batch/FPB.sol": "FixedPriceBatch"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776",
        "urls": [
          "bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4",
          "dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/modules/IAuction.sol": {
        "keccak256": "0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01",
        "urls": [
          "bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304",
          "dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/IBatchAuction.sol": {
        "keccak256": "0xbe814e420085ee1f321fef8d89ddd6b4c668e967bff5eccfbfcc2c994393a02b",
        "urls": [
          "bzz-raw://c1cf24444584582d87de6df951a80f28da9e611a8118a3796051fcc5087747cc",
          "dweb:/ipfs/QmQss5Fo8wuYoAgjNZYRTUqSEwHeV4SXCVJTQazbEo1aCw"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/auctions/IFixedPriceBatch.sol": {
        "keccak256": "0xa342fb31e1bc939d262d9e0d4ec40e10e89c94fae91ae8109cb96604c0247b72",
        "urls": [
          "bzz-raw://96796717cd7f90c5dab18659f0709c79a6a947d7572d1a895f207f18287edbe1",
          "dweb:/ipfs/QmUiX5dALS2gY5YMCgjTcm6wNoQJDDbr9aiBfbtVG39d9n"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Auction.sol": {
        "keccak256": "0x2070cb8904a5f7e050bface0eb79dee8f5dde3150dbd9355e32bc86333e83db7",
        "urls": [
          "bzz-raw://06df7763d21e8cd6159375e4e47333b634440bafe5ec25e0b2bb1186691da4fe",
          "dweb:/ipfs/QmbbmXG3aq8icrKSdcBCs2s8jGYGWV1Y1WrsyZ1w6DvuKs"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e",
        "urls": [
          "bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd",
          "dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Modules.sol": {
        "keccak256": "0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689",
        "urls": [
          "bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee",
          "dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/auctions/BatchAuctionModule.sol": {
        "keccak256": "0x7fd51c1ba66d2ee5988f96391983d7ac3ce14aa282b56affba69cc55de3f8907",
        "urls": [
          "bzz-raw://cb7c98b9a308f6ba21be2cc56398fc719df9a5e0a731f56f49b66213a9476085",
          "dweb:/ipfs/QmWU8pW8AKL3tvfL4EZTRxpkCtvGGwLNDpuFCYauCVjnXf"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/auctions/batch/FPB.sol": {
        "keccak256": "0x822a4a65b93091806fec304bc64d0404bb4aa867f4646244f3697f450971843c",
        "urls": [
          "bzz-raw://a9de4260a31523afff44c1ddcc764563c5c6aa331f019d553d3e8be06cd3b58d",
          "dweb:/ipfs/QmRPJSbVVpK1DKSkAuAshDzj8c7y1kypSDCp7g7KujAJ9H"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "id": 182
}
