{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "auctionHouse_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "INIT",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "PARENT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TYPE",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum Module.Type" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "VEECODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes7", "internalType": "Veecode" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "auction",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        {
          "name": "params_",
          "type": "tuple",
          "internalType": "struct IAuction.AuctionParams",
          "components": [
            { "name": "start", "type": "uint48", "internalType": "uint48" },
            { "name": "duration", "type": "uint48", "internalType": "uint48" },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "implParams", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "quoteTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auctionData",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "nextBidId", "type": "uint64", "internalType": "uint64" },
        {
          "name": "nextDecryptIndex",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "status",
          "type": "uint8",
          "internalType": "enum EncryptedMarginalPrice.LotStatus"
        },
        { "name": "marginalBidId", "type": "uint64", "internalType": "uint64" },
        { "name": "proceedsClaimed", "type": "bool", "internalType": "bool" },
        {
          "name": "marginalPrice",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "minPrice", "type": "uint256", "internalType": "uint256" },
        { "name": "minFilled", "type": "uint256", "internalType": "uint256" },
        { "name": "minBidSize", "type": "uint256", "internalType": "uint256" },
        {
          "name": "publicKey",
          "type": "tuple",
          "internalType": "struct Point",
          "components": [
            { "name": "x", "type": "uint256", "internalType": "uint256" },
            { "name": "y", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "privateKey", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "auctionType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IAuction.AuctionType"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "bid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidder_", "type": "address", "internalType": "address" },
        { "name": "referrer_", "type": "address", "internalType": "address" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "auctionData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "bids",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        { "name": "bidder", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint96", "internalType": "uint96" },
        { "name": "minAmountOut", "type": "uint96", "internalType": "uint96" },
        { "name": "referrer", "type": "address", "internalType": "address" },
        {
          "name": "status",
          "type": "uint8",
          "internalType": "enum EncryptedMarginalPrice.BidStatus"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancelAuction",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "capacityInQuote",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimBids",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidIds_", "type": "uint64[]", "internalType": "uint64[]" }
      ],
      "outputs": [
        {
          "name": "bidClaims",
          "type": "tuple[]",
          "internalType": "struct IBatchAuction.BidClaim[]",
          "components": [
            { "name": "bidder", "type": "address", "internalType": "address" },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            { "name": "paid", "type": "uint256", "internalType": "uint256" },
            { "name": "payout", "type": "uint256", "internalType": "uint256" },
            { "name": "refund", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "auctionOutput", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimProceeds",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "purchased", "type": "uint256", "internalType": "uint256" },
        { "name": "sold", "type": "uint256", "internalType": "uint256" },
        { "name": "capacity", "type": "uint256", "internalType": "uint256" },
        { "name": "auctionOutput", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decryptAndSortBids",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "num_", "type": "uint64", "internalType": "uint64" },
        {
          "name": "sortHints_",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decryptBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        { "name": "amountOut", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decryptedBids",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "numBids", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "dedicatedSettlePeriod",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint48", "internalType": "uint48" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "encryptedBids",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        {
          "name": "encryptedAmountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "bidPubKey",
          "type": "tuple",
          "internalType": "struct Point",
          "components": [
            { "name": "x", "type": "uint256", "internalType": "uint256" },
            { "name": "y", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAuctionData",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "auctionData_",
          "type": "tuple",
          "internalType": "struct EncryptedMarginalPrice.AuctionData",
          "components": [
            { "name": "nextBidId", "type": "uint64", "internalType": "uint64" },
            {
              "name": "nextDecryptIndex",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum EncryptedMarginalPrice.LotStatus"
            },
            {
              "name": "marginalBidId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "proceedsClaimed",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "marginalPrice",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minPrice",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minFilled",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minBidSize",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "publicKey",
              "type": "tuple",
              "internalType": "struct Point",
              "components": [
                { "name": "x", "type": "uint256", "internalType": "uint256" },
                { "name": "y", "type": "uint256", "internalType": "uint256" }
              ]
            },
            {
              "name": "privateKey",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "bidIds", "type": "uint64[]", "internalType": "uint64[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        {
          "name": "bid",
          "type": "tuple",
          "internalType": "struct EncryptedMarginalPrice.Bid",
          "components": [
            { "name": "bidder", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint96", "internalType": "uint96" },
            {
              "name": "minAmountOut",
              "type": "uint96",
              "internalType": "uint96"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum EncryptedMarginalPrice.BidStatus"
            }
          ]
        },
        {
          "name": "encryptedBid",
          "type": "tuple",
          "internalType": "struct EncryptedMarginalPrice.EncryptedBid",
          "components": [
            {
              "name": "encryptedAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "bidPubKey",
              "type": "tuple",
              "internalType": "struct Point",
              "components": [
                { "name": "x", "type": "uint256", "internalType": "uint256" },
                { "name": "y", "type": "uint256", "internalType": "uint256" }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIdAtIndex",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "index_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIds",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "startIndex_", "type": "uint256", "internalType": "uint256" },
        { "name": "num_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint64[]", "internalType": "uint64[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLot",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAuction.Lot",
          "components": [
            { "name": "start", "type": "uint48", "internalType": "uint48" },
            {
              "name": "conclusion",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "quoteTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "sold", "type": "uint256", "internalType": "uint256" },
            {
              "name": "purchased",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNextInQueue",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "key_", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNumBids",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNumBidsInQueue",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPartialFill",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct EncryptedMarginalPrice.PartialFill",
          "components": [
            { "name": "bidId", "type": "uint64", "internalType": "uint64" },
            { "name": "refund", "type": "uint96", "internalType": "uint96" },
            { "name": "payout", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasEnded",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isLive",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotAuctionOutput",
      "inputs": [{ "name": "", "type": "uint96", "internalType": "uint96" }],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotData",
      "inputs": [{ "name": "id", "type": "uint96", "internalType": "uint96" }],
      "outputs": [
        { "name": "start", "type": "uint48", "internalType": "uint48" },
        { "name": "conclusion", "type": "uint48", "internalType": "uint48" },
        {
          "name": "quoteTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        { "name": "capacityInQuote", "type": "bool", "internalType": "bool" },
        { "name": "capacity", "type": "uint256", "internalType": "uint256" },
        { "name": "sold", "type": "uint256", "internalType": "uint256" },
        { "name": "purchased", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minAuctionDuration",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint48", "internalType": "uint48" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" },
        { "name": "index_", "type": "uint256", "internalType": "uint256" },
        { "name": "caller_", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "refund", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "remainingCapacity",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDedicatedSettlePeriod",
      "inputs": [
        { "name": "period_", "type": "uint48", "internalType": "uint48" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinAuctionDuration",
      "inputs": [
        { "name": "duration_", "type": "uint48", "internalType": "uint48" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "totalIn", "type": "uint256", "internalType": "uint256" },
        { "name": "totalOut", "type": "uint256", "internalType": "uint256" },
        { "name": "auctionOutput", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "submitPrivateKey",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "privateKey_", "type": "uint256", "internalType": "uint256" },
        { "name": "num_", "type": "uint64", "internalType": "uint64" },
        {
          "name": "sortHints_",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BidDecrypted",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "indexed": true,
          "internalType": "uint96"
        },
        {
          "name": "bidId",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        },
        {
          "name": "amountIn",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "amountOut",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "Auction_AmountLessThanMinimum", "inputs": [] },
    { "type": "error", "name": "Auction_InsufficientCapacity", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_InvalidBidId",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidDuration",
      "inputs": [
        { "name": "duration_", "type": "uint48", "internalType": "uint48" },
        { "name": "minimum_", "type": "uint48", "internalType": "uint48" }
      ]
    },
    { "type": "error", "name": "Auction_InvalidKey", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_InvalidLotId",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    { "type": "error", "name": "Auction_InvalidParams", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_InvalidStart",
      "inputs": [
        { "name": "start_", "type": "uint48", "internalType": "uint48" },
        { "name": "minimum_", "type": "uint48", "internalType": "uint48" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_MarketActive",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_MarketNotActive",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    { "type": "error", "name": "Auction_NotAuthorized", "inputs": [] },
    { "type": "error", "name": "Auction_NotBidder", "inputs": [] },
    { "type": "error", "name": "Auction_NotImplemented", "inputs": [] },
    { "type": "error", "name": "Auction_OnlyMarketOwner", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_WrongState",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Bid_WrongState",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ]
    },
    {
      "type": "error",
      "name": "Module_InvalidParent",
      "inputs": [
        { "name": "parent_", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "Module_OnlyInternal", "inputs": [] },
    {
      "type": "error",
      "name": "Module_OnlyParent",
      "inputs": [
        { "name": "caller_", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "NotPermitted",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162005637380380620056378339810160408190526200003491620000a5565b80806001600160a01b0381166200006d57604051631462ddc360e21b81526001600160a01b038216600482015260240160405180910390fd5b6001600160a01b031660805250506000805465ffffffffffff19908116620151801790915560038054909116615460179055620000d7565b600060208284031215620000b857600080fd5b81516001600160a01b0381168114620000d057600080fd5b9392505050565b6080516154cd6200016a6000396000818161036201528181610a6a01528181610ab101528181610c3b01528181610cac01528181610cee01528181610fcb0152818161130f015281816113510152818161145d0152818161149f01528181611878015281816118ba015281816119be01528181611a0001528181611e6201528181611eb40152611ef601526154cd6000f3fe608060405234801561001057600080fd5b50600436106102315760003560e01c80637d9234bc11610130578063b04046df116100b8578063d899a3371161007c578063d899a337146107af578063de1d3112146107c2578063e2cfa6ea146107e2578063ea6439141461088e578063fb9d3cb61461089657600080fd5b8063b04046df14610743578063bae96bdd14610756578063bb24fe8a14610769578063cadb338314610778578063d61735ca1461079857600080fd5b8063a16f7ef7116100ff578063a16f7ef714610689578063a1a61ec5146106d0578063a85cebb6146106e3578063a8bf44e4146106f5578063ace54da51461071657600080fd5b80637d9234bc1461064157806387698a31146106545780638bde610914610667578063994595e11461067a57600080fd5b806325e34a8e116101be57806354c87c011161018257806354c87c01146104de5780635806afc314610535578063732efc03146105f057806379fd0c1f146106035780637d7b68531461061657600080fd5b806325e34a8e146103d457806329da5abd146103e757806339792cdc146103fa5780634e1f42581461042d57806354134876146104b557600080fd5b80630cf5538d116102055780630cf5538d146102c35780630fb276fc146102e4578063122b83f91461035d57806312d6ef2d1461039c57806324546b2d146103b157600080fd5b8062b3321714610236578063038559211461025f5780630a35511b146102825780630cd0bcf2146102a3575b600080fd5b6102496102443660046145d6565b6108b8565b6040516102569190614609565b60405180910390f35b61027261026d366004614656565b610a01565b6040519015158152602001610256565b6102956102903660046146b5565b610a5c565b604051610256929190614757565b6102b66102b1366004614656565b610b78565b60405161025691906147d8565b6102d66102d1366004614656565b610c12565b604051908152602001610256565b61034c6102f2366004614802565b60066020908152600092835260408084209091529082529020805460018201546002909201546001600160a01b03808316936001600160601b03600160a01b909404841693811692600160601b9091049091169060ff1685565b60405161025695949392919061485b565b6103847f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610256565b6103af6103aa3660046148b9565b610c30565b005b6103c46103bf366004614656565b610c9b565b60405161025694939291906148d4565b6103af6103e2366004614903565b610f0e565b6103af6103f53660046148b9565b610fc0565b610272610408366004614656565b6001600160601b0316600090815260016020526040902054600160701b900460ff1690565b61044061043b366004614656565b611057565b604051610256919060006101008201905065ffffffffffff8084511683528060208501511660208401525060ff604084015116604083015260ff606084015116606083015260808301511515608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6000546104c79065ffffffffffff1681565b60405165ffffffffffff9091168152602001610256565b6105276104ec366004614802565b600760209081526000928352604080842082529183529181902080548251808401909352600182015483526002909101549282019290925282565b604051610256929190614963565b6105a3610543366004614656565b6001602081905260009182526040909120805491810154600282015460039092015465ffffffffffff80851694600160301b81049091169360ff600160601b8304811694600160681b8404821694600160701b9094049091169290919088565b6040805165ffffffffffff998a16815298909716602089015260ff958616968801969096529390921660608601521515608085015260a084015260c083015260e082015261010001610256565b6102726105fe366004614656565b6110f4565b6103af610611366004614981565b61117c565b6106296106243660046149ef565b6112a4565b6040516001600160401b039091168152602001610256565b6102d661064f366004614a30565b611302565b610629610662366004614a7d565b611450565b6102d66106753660046149ef565b61157a565b60016040516102569190614b29565b61069c610697366004614656565b6115a6565b6040805182516001600160401b031681526020808401516001600160601b0316908201529181015190820152606001610256565b6102d66106de366004614802565b611625565b6003546104c79065ffffffffffff1681565b610708610703366004614802565b611751565b604051610256929190614b43565b6102d6610724366004614656565b6001600160601b03166000908152600160208190526040909120015490565b6103af610751366004614656565b61186d565b6103af610764366004614c6e565b6119b3565b60006040516102569190614d94565b61078b610786366004614656565b611c92565b6040516102569190614df9565b604051653031454d504160d01b8152602001610256565b6102d66107bd366004614656565b611e2d565b6102d66107d0366004614656565b60086020526000908152604090205481565b6108776107f0366004614656565b6004602081815260009283526040928390208054600182015460028301546003840154958401548751808901909852600585015488526006850154958801959095526007909301546001600160401b0380841697600160401b850482169760ff600160801b8704811698600160881b880490941697600160c81b909704169593909291908b565b6040516102569b9a99989796959493929190614edb565b6103af611e57565b6108a96108a4366004614656565b611ea4565b60405161025693929190614f5e565b60606108c38461200a565b6001600160601b0384166000908152600460205260409020600801805480851061090057604051633350f82560e11b815260040160405180910390fd5b600061090c8683614f93565b9050600081861161091d578561091f565b815b90506000816001600160401b0381111561093b5761093b614bbf565b604051908082528060200260200182016040528015610964578160200160208202803683370190505b50905060005b828110156109f2578561097d828b614fa6565b8154811061098d5761098d614fb9565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03168282815181106109c8576109c8614fb9565b6001600160401b0390921660209283029190910190910152806109ea81614fcf565b91505061096a565b509450505050505b9392505050565b6001600160601b03811660009081526001602052604081205465ffffffffffff600160301b909104811642909116101580610a5657506001600160601b03821660009081526001602081905260409091200154155b92915050565b606080336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aaf576040516366e069e160e01b81523360048201526024015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b319190614fe8565b15610b4f5760405163115250c560e21b815260040160405180910390fd5b610b588561200a565b610b6185612058565b610b6c8585856120b7565b91509150935093915050565b60026020526000908152604090208054610b9190615005565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbd90615005565b8015610c0a5780601f10610bdf57610100808354040283529160200191610c0a565b820191906000526020600020905b815481529060010190602001808311610bed57829003601f168201915b505050505081565b6001600160601b038116600090815260086020526040812054610a56565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c7b576040516366e069e160e01b8152336004820152602401610aa6565b6000805465ffffffffffff191665ffffffffffff92909216919091179055565b600080806060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cec576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190614fe8565b15610d8c5760405163115250c560e21b815260040160405180910390fd5b610d958561200a565b610d9e856121e5565b610da785612058565b610dd5856001600160601b03166000908152600460205260409020805460ff60c81b1916600160c81b179055565b6001600160601b0385166000818152600160208181526040808420815161010081018352815465ffffffffffff8082168352600160301b8204168286015260ff600160601b8204811683860152600160681b820481166060840152600160701b90910416151560808201529381015460a0850181905260028083015460c0870181905260039093015460e0870181905297875290935293208054929493928190610e7e90615005565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaa90615005565b8015610ef75780601f10610ecc57610100808354040283529160200191610ef7565b820191906000526020600020905b815481529060010190602001808311610eda57829003601f168201915b505050505090509450945094509450509193509193565b610f178461200a565b610f2084612231565b610f2984612282565b60006001600160601b038516600090815260046020526040902054600160801b900460ff166002811115610f5f57610f5f614835565b141580610f8557506001600160601b038416600090815260046020526040902060070154155b15610fae57604051636985f4c960e11b81526001600160601b0385166004820152602401610aa6565b610fba84848484612343565b50505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461100b576040516366e069e160e01b8152336004820152602401610aa6565b62093a808165ffffffffffff16111561103757604051633350f82560e11b815260040160405180910390fd5b6003805465ffffffffffff191665ffffffffffff92909216919091179055565b61105f614450565b506001600160601b0316600090815260016020818152604092839020835161010081018552815465ffffffffffff8082168352600160301b8204169382019390935260ff600160601b8404811695820195909552600160681b830485166060820152600160701b909204909316151560808201529082015460a0820152600282015460c082015260039091015460e082015290565b6001600160601b0381166000908152600160208190526040822001541580159061114957506001600160601b03821660009081526001602052604090205465ffffffffffff600160301b909104811642909116105b8015610a565750506001600160601b031660009081526001602052604090205465ffffffffffff90811642909116101590565b6111858561200a565b61118e85612282565b61119785612231565b6001600160601b038516600090815260046020526040902060070154156111dc57604051636985f4c960e11b81526001600160601b0386166004820152602401610aa6565b60006111fe604051806040016040528060018152602001600281525086612574565b6001600160601b03871660009081526004602090815260409182902082518084019093526005810154808452600690910154918301919091528251929350909114158061125357508060200151826020015114155b1561127157604051632fd26a8f60e21b815260040160405180910390fd5b6001600160601b038716600090815260046020526040902060070186905561129b87868686612343565b50505050505050565b6001600160601b03821660009081526004602052604081206008018054839081106112d1576112d1614fb9565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316905092915050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461134f576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d19190614fe8565b156113ef5760405163115250c560e21b815260040160405180910390fd5b6113f88561200a565b61140185612231565b61140b8585612658565b611416858584612728565b6114208585612790565b6114298561280d565b61143285612895565b61143b856128da565b61144785858585612939565b95945050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461149d576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f9190614fe8565b1561153d5760405163115250c560e21b815260040160405180910390fd5b6115468761200a565b61154f87612231565b61155887612b12565b611561876128da565b61156f878787878787612baf565b979650505050505050565b6001600160601b03821660009081526008602090815260408083208484526001019091528120546109fa565b60408051606081018252600080825260208201819052918101919091526115cc8261200a565b6115d582612058565b506001600160601b03908116600090815260056020908152604091829020825160608101845281546001600160401b0381168252600160401b900490941691840191909152600101549082015290565b6001600160601b03821660009081526004602052604081206007015480820361166c57604051636985f4c960e11b81526001600160601b0385166004820152602401610aa6565b6001600160601b03841660008181526006602090815260408083206001600160401b0388168085529083528184209484526007835281842090845282528083208054825180840184526001830154815260029092015482850152855483516001600160a01b031960a08d811b8216978301979097526001600160601b0319606084901b16602c830152600160a01b90920490951b169284019290925261172f928690604c016040516020818303038152906040528051906020012060001c612dec565b608081901c016fffffffffffffffffffffffffffffffff169695505050505050565b611759614494565b6117616144c3565b61176a8461200a565b6117748484612658565b6001600160601b0380851660008181526006602090815260408083206001600160401b03891680855290835281842094845260078352818420908452825291829020825160a08101845284546001600160a01b038082168352600160a01b909104871693820193909352600185015495861693810193909352600160601b9094041660608201526002808301549293928491608084019160ff169081111561181e5761181e614835565b600281111561182f5761182f614835565b9052506040805180820182528354815281518083019092526001840154825260029093015460208281019190915283015293509150505b9250929050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118b8576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193a9190614fe8565b156119585760405163115250c560e21b815260040160405180910390fd5b6119618161200a565b61196a81612b12565b61197381612e31565b6001600160601b03166000908152600160208190526040822080546bffffffffffff0000000000001916600160301b4265ffffffffffff16021781550155565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119fe576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a809190614fe8565b15611a9e5760405163115250c560e21b815260040160405180910390fd5b825165ffffffffffff1615801590611ac15750825165ffffffffffff4281169116105b15611af5578251604051639421aa8960e01b815265ffffffffffff9182166004820152429091166024820152604401610aa6565b600054602084015165ffffffffffff91821691161015611b425760208301516000546040516302c1012760e21b815265ffffffffffff928316600482015291166024820152604401610aa6565b611b4a614450565b835165ffffffffffff1615611b60578351611b62565b425b65ffffffffffff168082526020850151611b7b9161503f565b65ffffffffffff16602082015260ff8084166040808401919091529083166060808401919091529085015115156080808401919091529085015160a0830152840151611bca9086908390612e75565b6001600160601b039490941660009081526001602081815260409283902087518154928901519489015160608a015160808b015165ffffffffffff9384166001600160601b031990961695909517600160301b93909716929092029590951761ffff60601b1916600160601b60ff9687160260ff60681b191617600160681b95909116949094029390931760ff60701b1916600160701b9115159190910217825560a08601519082015560c0850151600282015560e090940151600390940193909355505050565b611c9a6144f2565b611ca38261200a565b6001600160601b03821660009081526004602090815260409182902082516101808101845281546001600160401b038082168352600160401b8204169382019390935292909190830190600160801b900460ff166002811115611d0857611d08614835565b6002811115611d1957611d19614835565b81528154600160881b81046001600160401b0316602080840191909152600160c81b90910460ff1615156040808401919091526001840154606084015260028401546080840152600384015460a0840152600484015460c0840152805180820182526005850154815260068501548184015260e08401526007840154610100840152600884018054825181850281018501909352808352610120909401939192909190830182828015611e1d57602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b031681526020019060080190602082600701049283019260010382029150808411611dda5790505b5050505050815250509050919050565b6000611e388261200a565b506001600160601b031660009081526004602052604090206008015490565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611ea2576040516366e069e160e01b8152336004820152602401610aa6565b565b6000806060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611ef4576040516366e069e160e01b8152336004820152602401610aa6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f769190614fe8565b15611f945760405163115250c560e21b815260040160405180910390fd5b611f9d8461200a565b611fa684612231565b611faf84612282565b611fb8846128da565b611fc184613030565b6001600160601b03871660009081526001602090815260408083206003810187905560029081018690559091529020929550909350915061200282826150b3565b509193909250565b6001600160601b03811660009081526001602052604081205465ffffffffffff16900361205557604051638c54233f60e01b81526001600160601b0382166004820152602401610aa6565b50565b60026001600160601b038216600090815260046020526040902054600160801b900460ff16600281111561208e5761208e614835565b1461205557604051636985f4c960e11b81526001600160601b0382166004820152602401610aa6565b60608082806001600160401b038111156120d3576120d3614bbf565b60405190808252806020026020018201604052801561210c57816020015b6120f9614579565b8152602001906001900390816120f15790505b50925060005b818110156121db5761214a8787878481811061213057612130614fb9565b90506020020160208101906121459190615172565b612658565b61217a8787878481811061216057612160614fb9565b90506020020160208101906121759190615172565b612790565b6121aa8787878481811061219057612190614fb9565b90506020020160208101906121a59190615172565b613494565b508482815181106121bd576121bd614fb9565b602002602001018190525080806121d390614fcf565b915050612112565b5050935093915050565b6001600160601b038116600090815260046020526040902054600160c81b900460ff161561205557604051636985f4c960e11b81526001600160601b0382166004820152602401610aa6565b6001600160601b03811660009081526001602052604090205465ffffffffffff90811642909116101561205557604051633ccc2fdb60e01b81526001600160601b0382166004820152602401610aa6565b60006001600160601b038216600090815260046020526040902054600160801b900460ff1660028111156122b8576122b8614835565b1480156122e757506001600160601b0381166000908152600160205260409020544265ffffffffffff90911611155b801561231a57506001600160601b03811660009081526001602052604090205442600160301b90910465ffffffffffff16115b1561205557604051636985f4c960e11b81526001600160601b0382166004820152602401610aa6565b6001600160601b0384166000908152600460205260409020546001600160401b03600160401b9091048116908416821461239057604051633350f82560e11b815260040160405180910390fd5b6001600160601b038516600090815260046020526040902060080180546123c1906001600160401b03841690614f93565b856001600160401b031611156123e15780546123de90839061518d565b94505b6001600160601b03861660009081526001602052604081205461240f90600160681b900460ff16600a615291565b905060005b866001600160401b0316816001600160401b031610156124b9576124a7888461243d84886152a0565b6001600160401b03168154811061245657612456614fb9565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03168888856001600160401b031681811061249a5761249a614fb9565b9050602002013585613698565b806124b1816152c0565b915050612414565b506001600160601b038716600090815260046020526040902080548791906008906124f5908490600160401b90046001600160401b03166152a0565b82546101009290920a6001600160401b0381810219909316918316021790915583546001600160601b038a16600090815260046020526040902054600160401b900490911603905061129b57505050506001600160601b03929092166000908152600460205260409020805460ff60801b1916600160801b1790555050565b604080518082019091526000808252602082015261259183613870565b6125dd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642067656e657261746f7220706f696e742e00000000000000006044820152606401610aa6565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210158061260a575081155b1561264e5760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b210383934bb30ba329035b2bc9760611b6044820152606401610aa6565b6109fa83836138a9565b6001600160601b0382166000908152600460205260409020546001600160401b03908116908216106126b7576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b0382166024820152604401610aa6565b6001600160601b03821660009081526006602090815260408083206001600160401b03851684529091529020546001600160a01b0316612724576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b0382166024820152604401610aa6565b5050565b6001600160601b03831660009081526006602090815260408083206001600160401b03861684529091529020546001600160a01b0382811691161461278b576040516319b1d90760e31b81526001600160a01b0382166004820152602401610aa6565b505050565b6001600160601b03821660009081526006602090815260408083206001600160401b0385168452909152902060029081015460ff16818111156127d5576127d5614835565b0361272457604051631359755560e11b81526001600160601b03831660048201526001600160401b0382166024820152604401610aa6565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b9091048116904216811180159061286c57506003546128599065ffffffffffff168261503f565b65ffffffffffff164265ffffffffffff16105b1561272457604051636985f4c960e11b81526001600160601b0383166004820152602401610aa6565b6001600160601b0381166000908152600460205260409020600701541561205557604051636985f4c960e11b81526001600160601b0382166004820152602401610aa6565b60026001600160601b038216600090815260046020526040902054600160801b900460ff16600281111561291057612910614835565b0361205557604051636985f4c960e11b81526001600160601b0382166004820152602401610aa6565b6001600160601b03841660008181526006602090815260408083206001600160401b038816845282528083206002908101805460ff191690911790559282526004905290812060080180548085106129a457604051633350f82560e11b815260040160405180910390fd5b60008286815481106129b8576129b8614fb9565b6000918252602090912060048204015460039091166008026101000a90046001600160401b03908116915087168114612a0457604051633350f82560e11b815260040160405180910390fd5b82612a10600184614f93565b81548110612a2057612a20614fb9565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316838781548110612a5b57612a5b614fb9565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555082805480612aa457612aa46152e6565b6000828152602080822060046000199094019384040180546001600160401b03600860038716026101000a810219909116909155929093556001600160601b03808c168252600684526040808320938c168352929093522054600160a01b9004169350505050949350505050565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b90910481164290911610612b6957604051633ccc2fdb60e01b81526001600160601b0382166004820152602401610aa6565b6001600160601b038116600090815260016020819052604082200154900361205557604051633ccc2fdb60e01b81526001600160601b0382166004820152602401610aa6565b60008080612bbf848601866152fc565b90925090506001600160601b03861115612bec57604051633350f82560e11b815260040160405180910390fd5b6001600160601b0389166000908152600460208181526040808420928301546002909301546001909252832054612c39929190612c3490600160681b900460ff16600a615291565b6139af565b905080871015612c5c57604051636aa9da6d60e01b815260040160405180910390fd5b612c65826139d6565b612c8257604051632fd26a8f60e21b815260040160405180910390fd5b6001600160601b038a16600090815260046020526040812080546001600160401b031691612caf836152c0565b82546101009290920a6001600160401b038181021990931691831602179091556001600160601b038c8116600090815260066020908152604080832094861683529390529182206001600160a01b038d8116600160a01b8d85160217825560018281018054909416600160601b928f1692909202919091179092556002810180549498509093909160ff19909116908302179055505060408051808201825293845260208085019384526001600160601b039b909b16600081815260078d528281206001600160401b03888116808452918f5284832097518855955180516001808a0191909155908f01516002909801979097559181526004808e5292812060089081018054978801815582529c902091850490910180546003909516909b026101000a9283021990931691909202179097559695505050505050565b600080612df98585613a52565b604080516020808201939093528082019590955280518086038201815260609095019052835193019290922094909418949350505050565b612e3a81612282565b6001600160601b03166000908152600460205260409020805469ff0000000000000000ff60801b19166880000000000000000160811b179055565b600081806020019051810190612e8b919061538e565b8051909150600003612eb057604051633350f82560e11b815260040160405180910390fd5b620186a065ffffffffffff16816020015162ffffff161115612ee557604051633350f82560e11b815260040160405180910390fd5b602862ffffff16816040015162ffffff161080612f155750620186a065ffffffffffff16816040015162ffffff16115b15612f3357604051633350f82560e11b815260040160405180910390fd5b612f4081606001516139d6565b612f5d57604051633350f82560e11b815260040160405180910390fd5b6001600160601b03841660009081526004602090815260409091208251600282015560a0850151918301519091612f9c9162ffffff16620186a0613b25565b600382015560a08401516040830151612fbe919062ffffff16620186a0613b25565b60048201556060820151805160058301556020908101516006830155815467ffffffffffffffff1916600190811783556001600160601b03871660009081526008835260408082206001600160601b03600160c01b03835290920190925290206002600160c01b031990555050505050565b600080606060016001600160601b038516600090815260046020526040902054600160801b900460ff16600281111561306b5761306b614835565b1461309457604051636985f4c960e11b81526001600160601b0385166004820152602401610aa6565b600061309f85613b53565b6001600160601b03861660009081526001602081905260408220908101549054929350916130d890600160681b900460ff16600a615291565b6001600160601b038816600090815260046020908152604080832081516101808101835281546001600160401b038082168352600160401b820416948201949094529495509293929190830190600160801b900460ff16600281111561314057613140614835565b600281111561315157613151614835565b81528154600160881b81046001600160401b0316602080840191909152600160c81b90910460ff1615156040808401919091526001840154606084015260028401546080840152600384015460a0840152600484015460c0840152805180820182526005850154815260068501548184015260e0840152600784015461010084015260088401805482518185028101850190935280835261012090940193919290919083018282801561325557602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b0316815260200190600801906020826007010492830192600103820291508084116132125790505b505050919092525050506001600160601b0389166000908152600460205260409020805460ff60801b1916600160811b178155600301546060860151919250118015906132a7575060c0810151845110155b156134675783516001600160601b0389166000908152600460209081526040909120600181019290925585015181546001600160401b03909116600160881b0267ffffffffffffffff60881b199091161790556060840151831015613442576001600160601b038089166000908152600660209081526040808320888301516001600160401b03168452909152812080548751919361335192600160a01b909204169086906139af565b905060008587606001516133659190614f93565b90506000604051806060016040528089602001516001600160401b031681526020016133b28660000160149054906101000a90046001600160601b03166001600160601b031685876139af565b6001600160601b031681526020016133ca8486614f93565b90526001600160601b03808e166000908152600560209081526040918290208451815492860151909416600160401b81026001600160a01b03199093166001600160401b0390951694909417919091178155818401516001909101558a018051929350909161343a908390614f93565b905250505050505b836040015196508284606001511161345e578360600151613460565b825b9550613489565b6001600160601b03881660009081526004602052604090206000196001909101555b505050509193909250565b61349c614579565b6001600160601b03831660008181526006602090815260408083206001600160401b038716845282528083206002808201805460ff1916909117905580546001600160a01b039081168752600180830154600160601b90049091168785015294845293909152812054606092919061351f90600160681b900460ff16600a615291565b60018301549091506000906001600160601b031615613563578254600184015461355e916001600160601b03600160a01b909104811691859116613f73565b613566565b60005b6001600160601b038816600090815260046020908152604080832060010154600590925290912054919250906001600160401b038089169116036135f75783546001600160601b03600160a01b9091048116604080890191909152898216600081815260056020818152938220600181015460608d01529290915290915254600160401b900416608087015261368d565b8082118061363b5750808214801561363b57506001600160601b0388166000908152600460205260409020546001600160401b03600160881b909104811690881611155b1561366e578354600160a01b90046001600160601b0316604087018190526136649084836139af565b606087015261368d565b8354600160a01b90046001600160601b03166040870181905260808701525b505050509250929050565b6001600160601b03841660009081526006602090815260408083206001600160401b03871684529091528120906136cf8686611625565b905060006001600160601b0382116136e45750805b60028301805460ff191660011790556001600160601b0381161580159061372a57506001600160601b038088166000908152600460208190526040909120015490821610155b1561380c5782546001600160601b03888116600090815260016020526040812054909261377f92600160a01b909104169061377090600160681b900460ff16600a615291565b846001600160601b0316613f73565b90506001600160601b03811080156137b257506001600160601b0388166000908152600460205260409020600201548110155b1561380a5783546001600160601b0389811660009081526008602052604090206137ec92909189918b91600160a01b90910416868a613fa2565b6001840180546001600160601b0319166001600160601b0384161790555b505b8254604080516001600160601b03600160a01b9093048316815283831660208201526001600160401b038916928a16917fbfea11d19705e7c3584fa7d3fb7ef96ca3c3ed4a1995383745345aaf5d4df58b910160405180910390a350505050505050565b80516000906138939061388c906138878180614174565b614174565b600361418f565b60208301516138a29080614174565b1492915050565b604080518082019091526000808252602082015282516020808501516040516000938493600793611770936138f293928a91019283526020830191909152604082015260600190565b60408051601f198184030181529082905261390c91615404565b6000604051808303818686fa925050503d8060008114613948576040519150601f19603f3d011682016040523d82523d6000602084013e61394d565b606091505b509150915081158061395e57508051155b1561399b5760405162461bcd60e51b815260206004820152600d60248201526c32b1a6bab6103330b4b632b21760991b6044820152606401610aa6565b808060200190518101906114479190615420565b60008260001904841183021582026139cf5763ad251c276000526004601cfd5b5091020490565b60006139e182613870565b80156139ff5750815160011480156139fd575081602001516002145b155b8015613a1957508151158015613a1757506020820151155b155b8015613a3357508151600080516020615478833981519152115b8015610a56575050602001516000805160206154788339815191521190565b6000613a5d83613870565b613a9f5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b210383ab13634b19035b2bc9760691b6044820152606401610aa6565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101580613acc575081155b15613b105760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b210383934bb30ba329035b2bc9760611b6044820152606401610aa6565b6000613b1c84846138a9565b51949350505050565b6000613b328484846141aa565b905081838509156109fa57600101806109fa5763ae47f7026000526004601cfd5b613b8760405180608001604052806000815260200160006001600160401b0316815260200160008152602001600081525090565b6001600160601b03821660009081526001602081905260408220908101549054909190613bbf90600160681b900460ff16600a615291565b6001600160601b038516600090815260046020908152604080832081516101808101835281546001600160401b038082168352600160401b820416948201949094529495509293929190830190600160801b900460ff166002811115613c2757613c27614835565b6002811115613c3857613c38614835565b81528154600160881b81046001600160401b0316602080840191909152600160c81b90910460ff1615156040808401919091526001840154606084015260028401546080840152600384015460a0840152600484015460c0840152805180820182526005850154815260068501548184015260e08401526007840154610100840152600884018054825181850281018501909352808352610120909401939192909190830182828015613d3c57602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b031681526020019060080190602082600701049283019260010382029150808411613cf95790505b505050919092525050506001600160601b03861660009081526008602052604081209192508080613d6b845490565b905060005b81811015613f66576000806000613d87888b614251565b9250925092508860c00151811015613e185760c08901511580613dbc57508a613db98d604001518c8c60c001516141aa565b10155b15613dd757613dd08c604001518b8d613b25565b8c52613ddf565b60c08901518c525b8b518703613df7576001600160401b03861660208d01525b613e0a8c604001518b8e600001516141aa565b60608d015250613f66915050565b613e278c604001518b836141aa565b60608d018190528b11613e7a57613e438c604001518b8d613b25565b808d528703613e60576001600160401b03861660208d0152613df7565b600060208d0152613e0a8c604001518b8e600001516141aa565b809650829550818c604001818151613e929190614fa6565b90525060408c0151613ea5908b836141aa565b60608d018190528b11613ec8578b52506001600160401b031660208a0152613f66565b613ed3600186614f93565b8403613f505760c08901511580613efc57508a613ef98d604001518c8c60c001516139af565b10155b15613f1757613f108c604001518b8d613f73565b8c52613f1f565b60c08901518c525b8b518103613f37576001600160401b03831660208d01525b613f4a8c604001518b8e600001516141aa565b60608d01525b5050508080613f5e90614fcf565b915050613d70565b5050505050505050919050565b6000826000190484118302158202613f935763ad251c276000526004601cfd5b50910281810615159190040190565b6000826001600160601b031611613ff25760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081b5a5b905b5bdd5b9d13dd5d60621b6044820152606401610aa6565b6000613fff8585856142a5565b6000818152600189016020526040902054909150156140555760405162461bcd60e51b815260206004820152601260248201527162696420616c72656164792065786973747360701b6044820152606401610aa6565b60008681526001880160205260409020546140a95760405162461bcd60e51b8152602060048201526014602482015273707265764b6579206e6f7420696e20717565756560601b6044820152606401610aa6565b6140b48682846142ff565b6141005760405162461bcd60e51b815260206004820152601760248201527f696e76616c696420696e7365727420706f736974696f6e0000000000000000006044820152606401610aa6565b60008681526001880160205260409020545b61411d8183856142ff565b1561413b576000818152600189016020526040902054909650614112565b60008781526001890160205260408082208490558382528120829055885490899061416583614fcf565b91905055505050505050505050565b60006000805160206154788339815191528284099392505050565b60006000805160206154788339815191528284089392505050565b600083830260001984860981811082019003806141df57836141d45763ae47f7026000526004601cfd5b5082900490506109fa565b8084116141f45763ae47f7026000526004601cfd5b83858709600085810386169586900495848311909303908390038390046001010292030417600383026002908118808502820302808502820302808502820302808502820302808502820302808502909103020290509392505050565b6000806000806142608661438e565b9195506001600160601b039081169450909150811660000361428657506000905061429e565b61429a8386836001600160601b0316613f73565b9150505b9250925092565b604080516001600160c01b031960c086901b1660208201526001600160a01b031960a085811b8216602884015284901b166034820152600091016040516020818303038152906040526142f79061543c565b949350505050565b600060c084811c90606086811c9187919087901c9087901c87866143316001600160601b03808816908b908816613f73565b90506000614352846001600160601b03168b856001600160601b0316613f73565b905080820361437f57846001600160401b0316886001600160401b031610985050505050505050506109fa565b1096506109fa95505050505050565b6001600160601b03600160c01b036000908152600182016020526040812054819081906001600160c01b0381016143f85760405162461bcd60e51b815260206004820152600e60248201526d717565756520697320656d70747960901b6044820152606401610aa6565b600081815260018601602052604080822080546001600160601b03600160c01b03845291832091909155828252819055855490869061443683615460565b909155505060c081901c95606082901c9550909350915050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040805160a081018252600080825260208201819052918101829052606081018290529060808201905b905290565b6040518060400160405280600081526020016144be604051806040016040528060008152602001600081525090565b60408051610180810182526000808252602082018190529091820190815260200160006001600160401b0316815260200160001515815260200160008152602001600081526020016000815260200160008152602001614565604051806040016040528060008152602001600081525090565b815260200160008152602001606081525090565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160601b03811681146145d157600080fd5b919050565b6000806000606084860312156145eb57600080fd5b6145f4846145ba565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b8181101561464a5783516001600160401b031683529284019291840191600101614625565b50909695505050505050565b60006020828403121561466857600080fd5b6109fa826145ba565b60008083601f84011261468357600080fd5b5081356001600160401b0381111561469a57600080fd5b6020830191508360208260051b850101111561186657600080fd5b6000806000604084860312156146ca57600080fd5b6146d3846145ba565b925060208401356001600160401b038111156146ee57600080fd5b6146fa86828701614671565b9497909650939450505050565b60005b8381101561472257818101518382015260200161470a565b50506000910152565b60008151808452614743816020860160208601614707565b601f01601f19169290920160200192915050565b6040808252835182820181905260009190606090818501906020808901865b838110156147c457815180516001600160a01b039081168752848201511684870152878101518887015286810151878701526080908101519086015260a09094019390820190600101614776565b5050868303908701525061156f818761472b565b6020815260006109fa602083018461472b565b80356001600160401b03811681146145d157600080fd5b6000806040838503121561481557600080fd5b61481e836145ba565b915061482c602084016147eb565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6003811061205557612055614835565b6001600160a01b0386811682526001600160601b038681166020840152851660408301528316606082015260a081016148938361484b565b8260808301529695505050505050565b803565ffffffffffff811681146145d157600080fd5b6000602082840312156148cb57600080fd5b6109fa826148a3565b8481528360208201528260408201526080606082015260006148f9608083018461472b565b9695505050505050565b6000806000806060858703121561491957600080fd5b614922856145ba565b9350614930602086016147eb565b925060408501356001600160401b0381111561494b57600080fd5b61495787828801614671565b95989497509550505050565b828152606081016109fa602083018480518252602090810151910152565b60008060008060006080868803121561499957600080fd5b6149a2866145ba565b9450602086013593506149b7604087016147eb565b925060608601356001600160401b038111156149d257600080fd5b6149de88828901614671565b969995985093965092949392505050565b60008060408385031215614a0257600080fd5b614a0b836145ba565b946020939093013593505050565b80356001600160a01b03811681146145d157600080fd5b60008060008060808587031215614a4657600080fd5b614a4f856145ba565b9350614a5d602086016147eb565b925060408501359150614a7260608601614a19565b905092959194509250565b60008060008060008060a08789031215614a9657600080fd5b614a9f876145ba565b9550614aad60208801614a19565b9450614abb60408801614a19565b93506060870135925060808701356001600160401b0380821115614ade57600080fd5b818901915089601f830112614af257600080fd5b813581811115614b0157600080fd5b8a6020828501011115614b1357600080fd5b6020830194508093505050509295509295509295565b6020810160028310614b3d57614b3d614835565b91905290565b60006101008201905060018060a01b0380855116835260208501516001600160601b0380821660208601528060408801511660408601525050806060860151166060840152506080840151614b978161484b565b6080830152825160a0830152602092830151805160c08401529092015160e090910152919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715614bf757614bf7614bbf565b60405290565b604080519081016001600160401b0381118282101715614bf757614bf7614bbf565b604051601f8201601f191681016001600160401b0381118282101715614c4757614c47614bbf565b604052919050565b801515811461205557600080fd5b803560ff811681146145d157600080fd5b60008060008060808587031215614c8457600080fd5b614c8d856145ba565b93506020808601356001600160401b0380821115614caa57600080fd5b9087019060a0828a031215614cbe57600080fd5b614cc6614bd5565b614ccf836148a3565b8152614cdc8484016148a3565b848201526040830135614cee81614c4f565b604082015260608381013590820152608083013582811115614d0f57600080fd5b80840193505089601f840112614d2457600080fd5b823582811115614d3657614d36614bbf565b614d48601f8201601f19168601614c1f565b92508083528a85828601011115614d5e57600080fd5b80858501868501376000908301909401939093526080830152509250614d8660408601614c5d565b9150614a7260608601614c5d565b6020810160048310614b3d57614b3d614835565b614db18161484b565b9052565b600081518084526020808501945080840160005b83811015614dee5781516001600160401b031687529582019590820190600101614dc9565b509495945050505050565b60208152614e136020820183516001600160401b03169052565b60006020830151614e2f60408401826001600160401b03169052565b506040830151614e426060840182614da8565b5060608301516001600160401b038116608084015250608083015180151560a08401525060a083015160c083015260c083015160e083015260e0830151610100818185015280850151915050610120818185015280850151915050610140614eb68185018380518252602090810151910152565b840151610180840152506101608301516101a0808401526142f76101c0840182614db5565b6001600160401b038c811682528b81166020830152610180820190614eff8c61484b565b8b6040840152808b1660608401525088151560808301528760a08301528660c08301528560e083015284610100830152614f4761012083018580518252602090810151910152565b826101608301529c9b505050505050505050505050565b838152826020820152606060408201526000611447606083018461472b565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a5657610a56614f7d565b80820180821115610a5657610a56614f7d565b634e487b7160e01b600052603260045260246000fd5b600060018201614fe157614fe1614f7d565b5060010190565b600060208284031215614ffa57600080fd5b81516109fa81614c4f565b600181811c9082168061501957607f821691505b60208210810361503957634e487b7160e01b600052602260045260246000fd5b50919050565b65ffffffffffff81811683821601908082111561505e5761505e614f7d565b5092915050565b601f82111561278b57600081815260208120601f850160051c8101602086101561508c5750805b601f850160051c820191505b818110156150ab57828155600101615098565b505050505050565b81516001600160401b038111156150cc576150cc614bbf565b6150e0816150da8454615005565b84615065565b602080601f83116001811461511557600084156150fd5750858301515b600019600386901b1c1916600185901b1785556150ab565b600085815260208120601f198616915b8281101561514457888601518255948401946001909101908401615125565b50858210156151625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561518457600080fd5b6109fa826147eb565b6001600160401b0382811682821603908082111561505e5761505e614f7d565b600181815b808511156151e85781600019048211156151ce576151ce614f7d565b808516156151db57918102915b93841c93908002906151b2565b509250929050565b6000826151ff57506001610a56565b8161520c57506000610a56565b8160018114615222576002811461522c57615248565b6001915050610a56565b60ff84111561523d5761523d614f7d565b50506001821b610a56565b5060208310610133831016604e8410600b841016171561526b575081810a610a56565b61527583836151ad565b806000190482111561528957615289614f7d565b029392505050565b60006109fa60ff8416836151f0565b6001600160401b0381811683821601908082111561505e5761505e614f7d565b60006001600160401b038083168181036152dc576152dc614f7d565b6001019392505050565b634e487b7160e01b600052603160045260246000fd5b600080828403606081121561531057600080fd5b833592506040601f198201121561532657600080fd5b5061532f614bfd565b6020840135815260408401356020820152809150509250929050565b805162ffffff811681146145d157600080fd5b60006040828403121561537057600080fd5b615378614bfd565b9050815181526020820151602082015292915050565b600060a082840312156153a057600080fd5b604051608081018181106001600160401b03821117156153c2576153c2614bbf565b604052825181526153d56020840161534b565b60208201526153e66040840161534b565b60408201526153f8846060850161535e565b60608201529392505050565b60008251615416818460208701614707565b9190910192915050565b60006040828403121561543257600080fd5b6109fa838361535e565b805160208083015191908110156150395760001960209190910360031b1b16919050565b60008161546f5761546f614f7d565b50600019019056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a264697066735822122097ebc52a0c3e5d1bddc824eac155020ccfac4f53f98b5c38d57e3a2e4d44f0df64736f6c63430008130033",
    "sourceMap": "837:49520:88:-:0;;;6576:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6625:13;;-1:-1:-1;;;;;11238:21:85;;11234:63;;11268:29;;-1:-1:-1;;;11268:29:85;;-1:-1:-1;;;;;473:32:165;;11268:29:85;;;455:51:165;428:18;;11268:29:85;;;;;;;11234:63;-1:-1:-1;;;;;11308:16:85;;;-1:-1:-1;;6713:18:88::1;:27:::0;;-1:-1:-1;;6713:27:88;;::::1;6734:6;6713:27;::::0;;;6815:21:::1;:31:::0;;;;::::1;6839:7;6815:31;::::0;;837:49520;;14:290:165;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:165;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:165:o;309:203::-;837:49520:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "837:49520:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46088:1022;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5244:191:81;;;;;;:::i;:::-;;:::i;:::-;;;1740:14:165;;1733:22;1715:41;;1703:2;1688:18;5244:191:81;1575:187:165;5205:438:87;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;566:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;30619:132:88:-;;;;;;:::i;:::-;;:::i;:::-;;;4744:25:165;;;4732:2;4717:18;30619:132:88;4598:177:165;6111:65:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6111:65:88;;;;-1:-1:-1;;;;;;;;6111:65:88;;;;;;;;;-1:-1:-1;;;6111:65:88;;;;;;;;;;;;;;;;;;;;;;:::i;11114:31:85:-;;;;;;;;-1:-1:-1;;;;;6276:32:165;;;6258:51;;6246:2;6231:18;11114:31:85;6112:203:165;6177:116:81;;;;;;:::i;:::-;;:::i;:::-;;8941:638:87;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;23617:624:88:-;;;;;;:::i;:::-;;:::i;47169:243::-;;;;;;:::i;:::-;;:::i;5636:133:81:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5731:15:81;5708:4;5731:15;;;:7;:15;;;;;:31;-1:-1:-1;;;5731:31:81;;;;;5636:133;5804:114;;;;;;:::i;:::-;;:::i;:::-;;;;;;7839:4:165;7881:3;7870:9;7866:19;7858:27;;7904:14;7964:2;7955:6;7949:13;7945:22;7934:9;7927:41;8036:2;8028:4;8020:6;8016:17;8010:24;8006:33;7999:4;7988:9;7984:20;7977:63;;8108:4;8100;8092:6;8088:17;8082:24;8078:35;8071:4;8060:9;8056:20;8049:65;8182:4;8174;8166:6;8162:17;8156:24;8152:35;8145:4;8134:9;8130:20;8123:65;8258:4;8250:6;8246:17;8240:24;8233:32;8226:40;8219:4;8208:9;8204:20;8197:70;8323:4;8315:6;8311:17;8305:24;8298:4;8287:9;8283:20;8276:54;8386:4;8378:6;8374:17;8368:24;8361:4;8350:9;8346:20;8339:54;8449:4;8441:6;8437:17;8431:24;8424:4;8413:9;8409:20;8402:54;7703:759;;;;;312:32:81;;;;;;;;;;;;8641:14:165;8629:27;;;8611:46;;8599:2;8584:18;312:32:81;8467:196:165;6254:83:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;575:44:81:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;575:44:81;;;;;;;-1:-1:-1;;;575:44:81;;;;;-1:-1:-1;;;575:44:81;;;;;-1:-1:-1;;;575:44:81;;;;;;;;;;;;;;;;9472:14:165;9513:15;;;9495:34;;9565:15;;;;9560:2;9545:18;;9538:43;9629:4;9617:17;;;9597:18;;;9590:45;;;;9671:17;;;;9666:2;9651:18;;9644:45;9733:14;9726:22;9720:3;9705:19;;9698:51;9780:3;9765:19;;9758:35;9824:3;9809:19;;9802:35;9868:3;9853:19;;9846:35;9449:3;9434:19;575:44:81;9137:750:165;4941:268:81;;;;;;:::i;:::-;;:::i;21192:1016:88:-;;;;;;:::i;:::-;;:::i;30468:145::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10965:31:165;;;10947:50;;10935:2;10920:18;30468:145:88;10803:200:165;13728:668:88;;;;;;:::i;:::-;;:::i;1325:529:87:-;;;;;;:::i;:::-;;:::i;30256:144:88:-;;;;;;:::i;:::-;;:::i;650:109:87:-;735:17;650:109;;;;;;:::i;45698:207:88:-;;;;;;:::i;:::-;;:::i;:::-;;;;13396:13:165;;-1:-1:-1;;;;;13392:38:165;13374:57;;13491:4;13479:17;;;13473:24;-1:-1:-1;;;;;13469:57:165;13447:20;;;13440:87;13571:17;;;13565:24;13543:20;;;13536:54;13362:2;13347:18;45698:207:88;13168:428:165;26552:1724:88;;;;;;:::i;:::-;;:::i;5715:35::-;;;;;;;;;45181:301;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5470:131:81:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5570:15:81;5544:7;5570:15;;;:7;:15;;;;;;;;:24;;;5470:131;3817:445;;;;;;:::i;:::-;;:::i;1509:1209::-;;;;;;:::i;:::-;;:::i;763:88::-;809:4;763:88;;;;;;:::i;45488:204:88:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6859:101::-;;;-1:-1:-1;;;19880:58:165;;19868:2;19853:18;6859:101:88;19706:238:165;45911:171:88;;;;;;:::i;:::-;;:::i;6479:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5809:55;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5809:55:88;;;;-1:-1:-1;;;5809:55:88;;;;;;-1:-1:-1;;;5809:55:88;;;;;-1:-1:-1;;;5809:55:88;;;;;;-1:-1:-1;;;5809:55:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13040:46:85:-;;;:::i;6941:665:87:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;46088:1022:88:-;46219:15;46246:27;46266:6;46246:19;:27::i;:::-;-1:-1:-1;;;;;46310:19:88;;46284:23;46310:19;;;:11;:19;;;;;:26;;46360:13;;46442:18;;;46438:54;;46469:23;;-1:-1:-1;;;46469:23:88;;;;;;;;;;;46438:54;46760:17;46780;46786:11;46780:3;:17;:::i;:::-;46760:37;;46807:11;46828:9;46821:4;:16;:35;;46852:4;46821:35;;;46840:9;46821:35;46807:49;;46909:22;46947:3;-1:-1:-1;;;;;46934:17:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;46934:17:88;;46909:42;;46995:9;46990:90;47010:3;47006:1;:7;46990:90;;;47046:6;47053:15;47067:1;47053:11;:15;:::i;:::-;47046:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;47046:23:88;47034:6;47041:1;47034:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;47034:35:88;;;:9;;;;;;;;;;;:35;47015:3;;;;:::i;:::-;;;;46990:90;;;-1:-1:-1;47097:6:88;-1:-1:-1;;;;;46088:1022:88;;;;;;:::o;5244:191:81:-;-1:-1:-1;;;;;5369:15:81;;5307:4;5369:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;5369:26:81;;;;;5349:15;5342:53;;;;;;:86;;-1:-1:-1;;;;;;5399:15:81;;;;;;:7;:15;;;;;;;;:24;;:29;5342:86;5323:105;5244:191;-1:-1:-1;;5244:191:81:o;5205:438:87:-;5376:27;;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;;;;;;;;11964:62;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;5478:27:87::1;5498:6;5478:19;:27::i;:::-;5515:30;5538:6;5515:22;:30::i;:::-;5609:27;5620:6;5628:7;;5609:10;:27::i;:::-;5602:34;;;;5205:438:::0;;;;;;:::o;566:48::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30619:132:88:-;-1:-1:-1;;;;;30710:21:88;;30684:7;30710:21;;;:13;:21;;;;;5753:12:73;30710:34:88;5664:108:73;6177:116:81;11501:10:85;-1:-1:-1;;;;;11515:6:85;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:85;;11548:10;11530:29;;;6258:51:165;6231:18;;11530:29:85;6112:203:165;11497:62:85;6256:18:81::1;:30:::0;;-1:-1:-1;;6256:30:81::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6177:116::o;8941:638:87:-;9067:17;;;9118:26;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;9191:27:87::1;9211:6;9191:19;:27::i;:::-;9228:35;9256:6;9228:27;:35::i;:::-;9273:30;9296:6;9273:22;:30::i;:::-;9360:22;9375:6;-1:-1:-1::0;;;;;45073:19:88;;;;;:11;:19;;;;;:42;;-1:-1:-1;;;;45073:42:88;-1:-1:-1;;;45073:42:88;;;44971:151;9360:22:87::1;-1:-1:-1::0;;;;;9438:15:87;::::1;9421:14;9438:15:::0;;;:7:::1;:15;::::0;;;;;;;9421:32;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;9421:32:87;::::1;;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;;9421:32:87;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9421:32:87;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9421:32:87;;::::1;;;;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;9547:24;;;;;;;;9500:72;;9421:32;;;;9547:24;;9500:72:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8941:638:::0;;;;;:::o;23617:624:88:-;23790:27;23810:6;23790:19;:27::i;:::-;23827:31;23851:6;23827:23;:31::i;:::-;23868:26;23887:6;23868:18;:26::i;:::-;24022:17;-1:-1:-1;;;;;23992:19:88;;;;;;:11;:19;;;;;:26;-1:-1:-1;;;23992:26:88;;;;:47;;;;;;;;:::i;:::-;;;:86;;;-1:-1:-1;;;;;;24043:19:88;;;;;;:11;:19;;;;;:30;;;:35;23992:86;23988:158;;;24109:26;;-1:-1:-1;;;24109:26:88;;-1:-1:-1;;;;;22873:39:165;;24109:26:88;;;22855:58:165;22828:18;;24109:26:88;22711:208:165;23988:158:88;24189:45;24209:6;24217:4;24223:10;;24189:19;:45::i;:::-;23617:624;;;;:::o;47169:243::-;11501:10:85;-1:-1:-1;;;;;11515:6:85;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:85;;11548:10;11530:29;;;6258:51:165;6231:18;;11530:29:85;6112:203:165;11497:62:85;47325:6:88::1;47315:7;:16;;;47311:52;;;47340:23;;-1:-1:-1::0;;;47340:23:88::1;;;;;;;;;;;47311:52;47374:21;:31:::0;;-1:-1:-1;;47374:31:88::1;;::::0;;;::::1;::::0;;;::::1;::::0;;47169:243::o;5804:114:81:-;5867:10;;:::i;:::-;-1:-1:-1;;;;;;5896:15:81;;;;;:7;:15;;;;;;;;;5889:22;;;;;;;;;;;;;;;-1:-1:-1;;;5889:22:81;;;;;;;;;;;-1:-1:-1;;;5889:22:81;;;;;;;;;;;-1:-1:-1;;;5889:22:81;;;;;;;;-1:-1:-1;;;5889:22:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5804:114::o;4941:268::-;-1:-1:-1;;;;;5039:15:81;;5002:4;5039:15;;;:7;:15;;;;;;;:24;;:29;;;;:85;;-1:-1:-1;;;;;;5098:15:81;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;5098:26:81;;;;;5079:15;5072:52;;;;5039:85;:153;;;;-1:-1:-1;;;;;;;5171:15:81;;;;;:7;:15;;;;;:21;;;;;5151:15;5144:48;;;;;;4941:268::o;21192:1016:88:-;21377:27;21397:6;21377:19;:27::i;:::-;21414:26;21433:6;21414:18;:26::i;:::-;21450:31;21474:6;21450:23;:31::i;:::-;-1:-1:-1;;;;;21567:19:88;;;;;;:11;:19;;;;;:30;;;:35;21563:74;;21611:26;;-1:-1:-1;;;21611:26:88;;-1:-1:-1;;;;;22873:39:165;;21611:26:88;;;22855:58:165;22828:18;;21611:26:88;22711:208:165;21563:74:88;21800:23;21826:42;21843:11;;;;;;;;21849:1;21843:11;;;;21852:1;21843:11;;;21856;21826:16;:42::i;:::-;-1:-1:-1;;;;;21900:19:88;;21878;21900;;;:11;:19;;;;;;;;;21878:51;;;;;;;;21900:29;;;21878:51;;;;;;;;;;;;;;;;21943:12;;21800:68;;-1:-1:-1;21878:51:88;;21943:24;;;:52;;;21987:6;:8;;;21971:10;:12;;;:24;;21943:52;21939:85;;;22004:20;;-1:-1:-1;;;22004:20:88;;;;;;;;;;;21939:85;-1:-1:-1;;;;;22068:19:88;;;;;;:11;:19;;;;;:30;;:44;;;22156:45;22080:6;22184:4;22190:10;;22156:19;:45::i;:::-;21345:863;;21192:1016;;;;;:::o;30468:145::-;-1:-1:-1;;;;;30572:19:88;;30547:6;30572:19;;;:11;:19;;;;;:26;;:34;;30599:6;;30572:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30572:34:88;30565:41;;30468:145;;;;:::o;13728:668::-;13888:14;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;13945:27:88::1;13965:6;13945:19;:27::i;:::-;13982:31;14006:6;13982:23;:31::i;:::-;14023:35;14043:6;14051;14023:19;:35::i;:::-;14068:45;14089:6;14097;14105:7;14068:20;:45::i;:::-;14123:35;14143:6;14151;14123:19;:35::i;:::-;14168:38;14199:6;14168:30;:38::i;:::-;14216:29;14238:6;14216:21;:29::i;:::-;14255:27;14275:6;14255:19;:27::i;:::-;14346:43;14357:6;14365;14373;14381:7;14346:10;:43::i;:::-;14339:50:::0;13728:668;-1:-1:-1;;;;;13728:668:88:o;1325:529:87:-;1529:12;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;1584:27:87::1;1604:6;1584:19;:27::i;:::-;1621:31;1645:6;1621:23;:31::i;:::-;1662:29;1684:6;1662:21;:29::i;:::-;1701:27;1721:6;1701:19;:27::i;:::-;1792:55;1797:6;1805:7;1814:9;1825:7;1834:12;;1792:4;:55::i;:::-;1785:62:::0;1325:529;-1:-1:-1;;;;;;;1325:529:87:o;30256:144:88:-;-1:-1:-1;;;;;30358:21:88;;30332:7;30358:21;;;:13;:21;;;;;;;;5578:17:73;;;:12;;:17;;;;;;30358:35:88;5479:123:73;45698:207:88;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;45790:27:88;45810:6;45790:19;:27::i;:::-;45827:30;45850:6;45827:22;:30::i;:::-;-1:-1:-1;;;;;;45875:23:88;;;;;;;:15;:23;;;;;;;;;45868:30;;;;;;;;;-1:-1:-1;;;;;45868:30:88;;;;-1:-1:-1;;;45868:30:88;;;;;;;;;;;;;;;;;;;;45698:207::o;26552:1724::-;-1:-1:-1;;;;;26705:19:88;;26623:17;26705:19;;;:11;:19;;;;;:30;;;26809:15;;;26805:54;;26833:26;;-1:-1:-1;;;26833:26:88;;-1:-1:-1;;;;;22873:39:165;;26833:26:88;;;22855:58:165;22828:18;;26833:26:88;22711:208:165;26805:54:88;-1:-1:-1;;;;;27111:12:88;;27089:19;27111:12;;;:4;:12;;;;;;;;-1:-1:-1;;;;;27111:20:88;;;;;;;;;;;27186:21;;;:13;:21;;;;;:29;;;;;;;;:48;;27159:252;;;;;;;27248:39;;;27159:252;;;;;;;;;;;;27368:14;;27343:56;;-1:-1:-1;;;;;;23119:3:165;23176:16;;;23172:25;;27343:56:88;;;23160:38:165;;;;-1:-1:-1;;;;;;23236:2:165;23232:15;;;;23214:12;;;23207:75;-1:-1:-1;;;27384:14:88;;;23316:16:165;;;;23298:12;;;23291:47;;;;27159:252:88;;27301:10;;23354:12:165;;27343:56:88;;;;;;;;;;;;27333:67;;;;;;27325:76;;27159:13;:252::i;:::-;28110:3;28099:14;;;28240:18;28232:27;;;;-1:-1:-1;;;;;;26552:1724:88:o;45181:301::-;45272:14;;:::i;:::-;45288:32;;:::i;:::-;45332:27;45352:6;45332:19;:27::i;:::-;45369:35;45389:6;45397;45369:19;:35::i;:::-;-1:-1:-1;;;;;45423:12:88;;;;;;;:4;:12;;;;;;;;-1:-1:-1;;;;;45423:20:88;;;;;;;;;;;45445:21;;;:13;:21;;;;;:29;;;;;;;;;45415:60;;;;;;;;;-1:-1:-1;;;;;45415:60:88;;;;;-1:-1:-1;;;45415:60:88;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;45415:60:88;;;;;;;;;;;;;45423:20;;45445:29;45423:20;;45415:60;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;45415:60:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45415:60:88;-1:-1:-1;;45181:301:88;;;;;;:::o;3817:445:81:-;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;3926:27:81::1;3946:6;3926:19;:27::i;:::-;3963:29;3985:6;3963:21;:29::i;:::-;4090:22;4105:6;4090:14;:22::i;:::-;-1:-1:-1::0;;;;;4163:15:81::1;4145;4163::::0;;;:7:::1;:15;::::0;;;;;;4189:40;;-1:-1:-1;;4189:40:81::1;-1:-1:-1::0;;;4213:15:81::1;4189:40;;;;::::0;;4239:12:::1;:16:::0;3817:445::o;1509:1209::-;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;1767:13:81;;:17:::1;;::::0;;;;:60:::1;;-1:-1:-1::0;1788:13:81;;:39:::1;1811:15;1788:39:::0;::::1;::::0;::::1;;1767:60;1763:158;;;1871:13:::0;;1850:60:::1;::::0;-1:-1:-1;;;1850:60:81;;23557:14:165;23598:15;;;1850:60:81::1;::::0;::::1;23580:34:165::0;1893:15:81::1;23650::165::0;;;23630:18;;;23623:43;23520:18;;1850:60:81::1;23377:295:165::0;1763:158:81::1;2004:18;::::0;1985:16:::1;::::0;::::1;::::0;2004:18:::1;::::0;;::::1;1985:37:::0;::::1;;1981:136;;;2069:16;::::0;::::1;::::0;2087:18:::1;::::0;2045:61:::1;::::0;-1:-1:-1;;;2045:61:81;;2087:18:::1;23598:15:165::0;;;2045:61:81::1;::::0;::::1;23580:34:165::0;2087:18:81;::::1;23630::165::0;;;23623:43;23520:18;;2045:61:81::1;23377:295:165::0;1981:136:81::1;2162:14;;:::i;:::-;2198:13:::0;;:18:::1;;::::0;:60:::1;;2245:13:::0;;2198:60:::1;;;2226:15;2198:60;2186:72;;::::0;;;2297:16:::1;::::0;::::1;::::0;2285:28:::1;::::0;::::1;:::i;:::-;2268:45;;:14;::::0;::::1;:45:::0;2323:44:::1;::::0;;::::1;:22;::::0;;::::1;:44:::0;;;;2377:42;;::::1;:21;::::0;;::::1;:42:::0;;;;2451:23;;::::1;::::0;2429:45:::1;;:19;::::0;;::::1;:45:::0;;;;2499:16;;::::1;::::0;2484:12:::1;::::0;::::1;:31:::0;2634:18;::::1;::::0;2612:41:::1;::::0;2621:6;;2268:3;;2612:8:::1;:41::i;:::-;-1:-1:-1::0;;;;;2690:15:81;;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;;;;2690:21:81;;;;;;;-1:-1:-1;;;2690:21:81;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2690:21:81;-1:-1:-1;;;2690:21:81::1;::::0;;::::1;;-1:-1:-1::0;;;;2690:21:81;;-1:-1:-1;;;2690:21:81;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2690:21:81::1;-1:-1:-1::0;;;2690:21:81;::::1;;::::0;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;1509:1209:81:o;45488:204:88:-;45574:31;;:::i;:::-;45621:27;45641:6;45621:19;:27::i;:::-;-1:-1:-1;;;;;45666:19:88;;;;;;:11;:19;;;;;;;;;45659:26;;;;;;;;;-1:-1:-1;;;;;45659:26:88;;;;;-1:-1:-1;;;45659:26:88;;;;;;;;;;;45666:19;;45659:26;;;;-1:-1:-1;;;45659:26:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;45659:26:88;;-1:-1:-1;;;;;45659:26:88;;;;;;;;;-1:-1:-1;;;45659:26:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45659:26:88;-1:-1:-1;;;;;45659:26:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45488:204;;;:::o;45911:171::-;45978:7;45997:27;46017:6;45997:19;:27::i;:::-;-1:-1:-1;;;;;;46042:19:88;;;;;:11;:19;;;;;:26;;:33;;45911:171::o;13040:46:85:-;11501:10;-1:-1:-1;;;;;11515:6:85;11501:20;;11497:62;;11530:29;;-1:-1:-1;;;11530:29:85;;11548:10;11530:29;;;6258:51:165;6231:18;;11530:29:85;6112:203:165;11497:62:85;13040:46::o;6941:665:87:-;7060:15;;7095:26;11968:10:85;-1:-1:-1;;;;;11982:6:85;11968:20;;11964:62;;11997:29;;-1:-1:-1;;;11997:29:85;;12015:10;11997:29;;;6258:51:165;6231:18;;11997:29:85;6112:203:165;11964:62:85;12053:6;-1:-1:-1;;;;;12041:34:85;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12037:70;;;12086:21;;-1:-1:-1;;;12086:21:85;;;;;;;;;;;12037:70;7168:27:87::1;7188:6;7168:19;:27::i;:::-;7205:31;7229:6;7205:23;:31::i;:::-;7246:26;7265:6;7246:18;:26::i;:::-;7282:27;7302:6;7282:19;:27::i;:::-;7403:15;7411:6;7403:7;:15::i;:::-;-1:-1:-1::0;;;;;7473:15:87;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:25:::1;::::0;::::1;:35:::0;;;7518:20:::1;::::0;;::::1;:31:::0;;;7559:24;;;;;7366:52;;-1:-1:-1;7366:52:87;;-1:-1:-1;7366:52:87;-1:-1:-1;7559:40:87::1;7366:52:::0;7559:24;:40:::1;:::i;:::-;;6941:665:::0;;;;;:::o;6583:150:81:-;-1:-1:-1;;;;;6663:15:81;;;;;;:7;:15;;;;;:21;;;:26;;6659:67;;6698:28;;-1:-1:-1;;;6698:28:81;;-1:-1:-1;;;;;22873:39:165;;6698:28:81;;;22855:58:165;22828:18;;6698:28:81;22711:208:165;6659:67:81;6583:150;:::o;48371:232:88:-;48520:17;-1:-1:-1;;;;;48490:19:88;;;;;;:11;:19;;;;;:26;-1:-1:-1;;;48490:26:88;;;;:47;;;;;;;;:::i;:::-;;48486:111;;48560:26;;-1:-1:-1;;;48560:26:88;;-1:-1:-1;;;;;22873:39:165;;48560:26:88;;;22855:58:165;22828:18;;48560:26:88;22711:208:165;19430:542:88;19541:27;;19623:7;;-1:-1:-1;;;;;19659:19:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19647:31;;19693:9;19688:233;19708:3;19704:1;:7;19688:233;;;19756:39;19776:6;19784:7;;19792:1;19784:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19756:19;:39::i;:::-;19809;19829:6;19837:7;;19845:1;19837:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19809:19;:39::i;:::-;19881:29;19891:6;19899:7;;19907:1;19899:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19881:9;:29::i;:::-;19863:47;19864:9;19874:1;19864:12;;;;;;;;:::i;:::-;;;;;;19863:47;;;;19713:3;;;;;:::i;:::-;;;;19688:233;;;;19931:34;19430:542;;;;;;:::o;49060:240::-;-1:-1:-1;;;;;49199:19:88;;;;;;:11;:19;;;;;:35;-1:-1:-1;;;49199:35:88;;;;49195:99;;;49257:26;;-1:-1:-1;;;49257:26:88;;-1:-1:-1;;;;;22873:39:165;;49257:26:88;;;22855:58:165;22828:18;;49257:26:88;22711:208:165;6880:178:81;-1:-1:-1;;;;;6990:15:81;;;;;;:7;:15;;;;;:21;;;;;6971:15;6964:47;;;;6960:91;;;7020:31;;-1:-1:-1;;;7020:31:81;;-1:-1:-1;;;;;22873:39:165;;7020:31:81;;;22855:58:165;22828:18;;7020:31:81;22711:208:165;47496:315:88;47619:17;-1:-1:-1;;;;;47589:19:88;;;;;;:11;:19;;;;;:26;-1:-1:-1;;;47589:26:88;;;;:47;;;;;;;;:::i;:::-;;:107;;;;-1:-1:-1;;;;;;47656:15:88;;;;;;:7;:15;;;;;:21;47681:15;47656:21;;;;:40;;47589:107;:171;;;;-1:-1:-1;;;;;;47716:15:88;;;;;;:7;:15;;;;;:26;47745:15;-1:-1:-1;;;47716:26:88;;;;;:44;47589:171;47572:232;;;47778:26;;-1:-1:-1;;;47778:26:88;;-1:-1:-1;;;;;22873:39:165;;47778:26:88;;;22855:58:165;22828:18;;47778:26:88;22711:208:165;24247:1749:88;-1:-1:-1;;;;;24462:19:88;;24436:23;24462:19;;;:11;:19;;;;;:36;-1:-1:-1;;;;;;;;24462:36:88;;;;;;24576:25;;;;24572:61;;24610:23;;-1:-1:-1;;;24610:23:88;;;;;;;;;;;24572:61;-1:-1:-1;;;;;24834:19:88;;24808:23;24834:19;;;:11;:19;;;;;:26;;24881:13;;:32;;-1:-1:-1;;;;;24881:32:88;;;;:::i;:::-;24874:4;-1:-1:-1;;;;;24874:39:88;;24870:117;;;24943:13;;24936:40;;24960:16;;24936:40;:::i;:::-;24929:47;;24870:117;-1:-1:-1;;;;;25156:15:88;;25130:17;25156:15;;;:7;:15;;;;;:33;25150:39;;-1:-1:-1;;;25156:33:88;;;;25150:2;:39;:::i;:::-;25130:59;;25477:8;25472:205;25491:4;-1:-1:-1;;;;;25487:8:88;:1;-1:-1:-1;;;;;25487:8:88;;25472:205;;;25594:72;25603:6;25611;25618:20;25637:1;25618:16;:20;:::i;:::-;-1:-1:-1;;;;;25611:28:88;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25611:28:88;25641:10;;25652:1;-1:-1:-1;;;;;25641:13:88;;;;;;;;:::i;:::-;;;;;;;25656:9;25594:8;:72::i;:::-;25497:3;;;;:::i;:::-;;;;25472:205;;;-1:-1:-1;;;;;;25727:19:88;;;;;;:11;:19;;;;;:44;;25767:4;;25727:19;:36;;:44;;25767:4;;-1:-1:-1;;;25727:44:88;;-1:-1:-1;;;;;25727:44:88;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;25727:44:88;;;;;;;;;;;;;;;25902:13;;-1:-1:-1;;;;;25862:19:88;;-1:-1:-1;25862:19:88;;;:11;:19;;;;;:36;-1:-1:-1;;;25862:36:88;;;;;:53;;-1:-1:-1;25858:132:88;;-1:-1:-1;;;;;;;;;25931:19:88;;;;;;;;:11;:19;;;;;:48;;-1:-1:-1;;;;25931:48:88;-1:-1:-1;;;25931:48:88;;;-1:-1:-1;;24247:1749:88:o;6497:466:71:-;-1:-1:-1;;;;;;;;;;;;;;;;;6683:21:71;6693:10;6683:9;:21::i;:::-;6678:62;;6706:34;;-1:-1:-1;;;6706:34:71;;28417:2:165;6706:34:71;;;28399:21:165;28456:2;28436:18;;;28429:30;28495:26;28475:18;;;28468:54;28539:18;;6706:34:71;28215:348:165;6678:62:71;1747:102;6829:11;:26;;:46;;;-1:-1:-1;6859:16:71;;6829:46;6825:82;;;6877:30;;-1:-1:-1;;;6877:30:71;;28770:2:165;6877:30:71;;;28752:21:165;28809:2;28789:18;;;28782:30;-1:-1:-1;;;28828:18:165;;;28821:50;28888:18;;6877:30:71;28568:344:165;6825:82:71;6925:31;6932:10;6944:11;6925:6;:31::i;49345:383:88:-;-1:-1:-1;;;;;49510:19:88;;;;;;:11;:19;;;;;:29;-1:-1:-1;;;;;49510:29:88;;;49500:39;;;;49496:88;;49548:36;;-1:-1:-1;;;49548:36:88;;-1:-1:-1;;;;;29105:39:165;;49548:36:88;;;29087:58:165;-1:-1:-1;;;;;29181:31:165;;29161:18;;;29154:59;29060:18;;49548:36:88;28917:302:165;49496:88:88;-1:-1:-1;;;;;49635:12:88;;49674:1;49635:12;;;:4;:12;;;;;;;;-1:-1:-1;;;;;49635:20:88;;;;;;;;;:27;-1:-1:-1;;;;;49635:27:88;49631:90;;49685:36;;-1:-1:-1;;;49685:36:88;;-1:-1:-1;;;;;29105:39:165;;49685:36:88;;;29087:58:165;-1:-1:-1;;;;;29181:31:165;;29161:18;;;29154:59;29060:18;;49685:36:88;28917:302:165;49631:90:88;49345:383;;:::o;49773:262::-;-1:-1:-1;;;;;49971:12:88;;;;;;:4;:12;;;;;;;;-1:-1:-1;;;;;49971:20:88;;;;;;;;;:27;-1:-1:-1;;;;;49960:38:88;;;49971:27;;49960:38;49956:72;;50007:21;;-1:-1:-1;;;50007:21:88;;-1:-1:-1;;;;;6276:32:165;;50007:21:88;;;6258:51:165;6231:18;;50007:21:88;6112:203:165;49956:72:88;49773:262;;;:::o;50080:275::-;-1:-1:-1;;;;;50237:12:88;;;;;;:4;:12;;;;;;;;-1:-1:-1;;;;;50237:20:88;;;;;;;;;50268:17;50237:27;;;;;;:48;;;;;;;;:::i;:::-;;50233:116;;50308:30;;-1:-1:-1;;;50308:30:88;;-1:-1:-1;;;;;29105:39:165;;50308:30:88;;;29087:58:165;-1:-1:-1;;;;;29181:31:165;;29161:18;;;29154:59;29060:18;;50308:30:88;28917:302:165;48609:406:88;-1:-1:-1;;;;;48770:15:88;;48750:17;48770:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;48770:26:88;;;;;;48830:15;48823:37;;-1:-1:-1;48823:37:88;;;:117;;-1:-1:-1;48919:21:88;;48906:34;;48919:21;;48906:10;:34;:::i;:::-;48880:60;;48887:15;48880:60;;;48823:117;48806:203;;;48972:26;;-1:-1:-1;;;48972:26:88;;-1:-1:-1;;;;;22873:39:165;;48972:26:88;;;22855:58:165;22828:18;;48972:26:88;22711:208:165;47817:231:88;-1:-1:-1;;;;;47947:19:88;;;;;;:11;:19;;;;;:30;;;:35;47943:99;;48005:26;;-1:-1:-1;;;48005:26:88;;-1:-1:-1;;;;;22873:39:165;;48005:26:88;;;22855:58:165;22828:18;;48005:26:88;22711:208:165;48093:233:88;48243:17;-1:-1:-1;;;;;48213:19:88;;;;;;:11;:19;;;;;:26;-1:-1:-1;;;48213:26:88;;;;:47;;;;;;;;:::i;:::-;;48209:111;;48283:26;;-1:-1:-1;;;48283:26:88;;-1:-1:-1;;;;;22873:39:165;;48283:26:88;;;22855:58:165;22828:18;;48283:26:88;22711:208:165;15138:904:88;-1:-1:-1;;;;;15341:12:88;;15278:14;15341:12;;;:4;:12;;;;;;;;-1:-1:-1;;;;;15341:20:88;;;;;;;;;15371:17;15341:27;;;:47;;-1:-1:-1;;15341:47:88;;;;;;15476:19;;;:11;:19;;;;;:26;;15526:13;;15606;;;15602:49;;15628:23;;-1:-1:-1;;;15628:23:88;;;;;;;;;;;15602:49;15739:12;15754:6;15761;15754:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15754:14:88;;;;-1:-1:-1;15782:15:88;;;;15778:51;;15806:23;;-1:-1:-1;;;15806:23:88;;;;;;;;;;;15778:51;15900:6;15907:7;15913:1;15907:3;:7;:::i;:::-;15900:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15900:15:88;15883:6;15890;15883:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;;;-1:-1:-1;;;;;15883:32:88;;;;;-1:-1:-1;;;;;15883:32:88;;;;;;15925:6;:12;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;15925:12:88;;;;;;;;;-1:-1:-1;;;;;15925:12:88;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16007:12:88;;;;;:4;:12;;;;;;:20;;;;;;;;;;:27;-1:-1:-1;;;16007:27:88;;;;-1:-1:-1;;;;15138:904:88;;;;;;:::o;7516:374:81:-;-1:-1:-1;;;;;7663:15:81;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;7663:26:81;;;;;7643:15;7636:53;;;;7632:122;;7712:31;;-1:-1:-1;;;7712:31:81;;-1:-1:-1;;;;;22873:39:165;;7712:31:81;;;22855:58:165;22828:18;;7712:31:81;22711:208:165;7632:122:81;-1:-1:-1;;;;;7814:15:81;;;;;;:7;:15;;;;;;;:24;;:29;;7810:73;;7852:31;;-1:-1:-1;;;7852:31:81;;-1:-1:-1;;;;;22873:39:165;;7852:31:81;;;22855:58:165;22828:18;;7852:31:81;22711:208:165;11240:1589:88;11424:12;;;11546:42;;;;11557:12;11546:42;:::i;:::-;11479:109;;-1:-1:-1;11479:109:88;-1:-1:-1;;;;;;11700:26:88;;11696:62;;;11735:23;;-1:-1:-1;;;11735:23:88;;;;;;;;;;;11696:62;-1:-1:-1;;;;;11899:19:88;;11846:17;11899:19;;;:11;:19;;;;;;;;:30;;;;11952:28;;;;;12001:7;:15;;;;;:33;11866:178;;11899:30;11952:28;11995:39;;-1:-1:-1;;;12001:33:88;;;;11995:2;:39;:::i;:::-;11866:11;:178::i;:::-;11846:198;;12068:9;12058:7;:19;12054:63;;;12086:31;;-1:-1:-1;;;12086:31:88;;;;;;;;;;;12054:63;12218:24;12232:9;12218:13;:24::i;:::-;12213:58;;12251:20;;-1:-1:-1;;;12251:20:88;;;;;;;;;;;12213:58;-1:-1:-1;;;;;12316:19:88;;;;;;:11;:19;;;;;:31;;-1:-1:-1;;;;;12316:31:88;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;12316:31:88;;;;;;;;;;;;;;;-1:-1:-1;;;;;12379:12:88;;;-1:-1:-1;12379:12:88;;;:4;:12;;;;;;;;:19;;;;;;;;;;;-1:-1:-1;;;;;12408:24:88;;;-1:-1:-1;;;12442:32:88;;;;;;;-1:-1:-1;12484:16:88;;;:28;;;;;-1:-1:-1;;;12484:28:88;;;;;;;;;;;;;;12522:14;;;:36;;12379:19;;-1:-1:-1;12379:19:88;;12522:14;;-1:-1:-1;;12522:36:88;;;;-1:-1:-1;12522:36:88;;;;-1:-1:-1;;12657:43:88;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12626:21:88;;;;-1:-1:-1;12626:21:88;;;:13;:21;;;;;-1:-1:-1;;;;;12626:28:88;;;;;;;;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;12761:19;;;:11;:19;;;;;;:26;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12626:28;11240:1589;-1:-1:-1;;;;;;11240:1589:88:o;3995:652:71:-;4162:16;4321:20;4344:51;4364:17;4383:11;4344:19;:51::i;:::-;2581:36;;;;;;;33357:19:165;;;;33392:12;;;33385:28;;;;2581:36:71;;;;;;;;;33429:12:165;;;;2581:36:71;;2571:47;;;;;;;;4614:26;;;;;;-1:-1:-1;;;;3995:652:71:o;9930:438:88:-;10156:26;10175:6;10156:18;:26::i;:::-;-1:-1:-1;;;;;10263:19:88;;;;;:11;:19;;;;;:46;;-1:-1:-1;;;;10319:42:88;-1:-1:-1;;;10319:42:88;;;9930:438::o;7872:1527::-;8012:35;8061:7;8050:40;;;;;;;;;;;;:::i;:::-;8170:19;;8012:78;;-1:-1:-1;8170:19:88;:24;8166:60;;8203:23;;-1:-1:-1;;;8203:23:88;;;;;;;;;;;8166:60;498:7:81;8302:48:88;;:10;:25;;;:48;;;8298:84;;;8359:23;;-1:-1:-1;;;8359:23:88;;;;;;;;;;;8298:84;5576:2;8514:43;;:10;:24;;;:43;;;:110;;;;498:7:81;8577:47:88;;:10;:24;;;:47;;;8514:110;8497:193;;;8656:23;;-1:-1:-1;;;8656:23:88;;;;;;;;;;;8497:193;8775:35;8789:10;:20;;;8775:13;:35::i;:::-;8770:72;;8819:23;;-1:-1:-1;;;8819:23:88;;;;;;;;;;;8770:72;-1:-1:-1;;;;;8908:19:88;;8881:24;8908:19;;;:11;:19;;;;;;;;8953;;8937:13;;;:35;9089:13;;;;9104:25;;;;8908:19;;9071:81;;;;498:7:81;9071:17:88;:81::i;:::-;9042:14;;;:110;9210:13;;;;9225:24;;;;9192:80;;9210:13;9192:80;;498:7:81;9192:17:88;:80::i;:::-;9162:15;;;:110;9299:20;;;;9282:37;;:14;;;:37;;;;;;;;;;9329:18;;-1:-1:-1;;9329:18:88;9282:37;9329:18;;;;;-1:-1:-1;;;;;9358:21:88;;-1:-1:-1;9358:21:88;;;:13;:21;;;;;;-1:-1:-1;;;;;;;;;2524:25:73;;:12;;;:25;;;;;-1:-1:-1;;;;;;2524:37:73;;7962:1437:88;;7872:1527;;;:::o;40977:3812::-;41060:16;;41097:27;41271:19;-1:-1:-1;;;;;41241:19:88;;;;;;:11;:19;;;;;:26;-1:-1:-1;;;41241:26:88;;;;:49;;;;;;;;:::i;:::-;;41237:113;;41313:26;;-1:-1:-1;;;41313:26:88;;-1:-1:-1;;;;;22873:39:165;;41313:26:88;;;22855:58:165;22828:18;;41313:26:88;22711:208:165;41237:113:88;41360:33;41396:28;41417:6;41396:20;:28::i;:::-;-1:-1:-1;;;;;41634:15:88;;41615:16;41634:15;;;:7;:15;;;;;;;:24;;;;41694:33;;41360:64;;-1:-1:-1;41634:24:88;41688:39;;-1:-1:-1;;;41694:33:88;;;;41688:2;:39;:::i;:::-;-1:-1:-1;;;;;41773:19:88;;41737:33;41773:19;;;:11;:19;;;;;;;;41737:55;;;;;;;;;-1:-1:-1;;;;;41737:55:88;;;;;-1:-1:-1;;;41737:55:88;;;;;;;;;;41668:59;;-1:-1:-1;41737:33:88;;:55;41773:19;41737:55;;;;-1:-1:-1;;;41737:55:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;41737:55:88;;-1:-1:-1;;;;;41737:55:88;;;;;;;;;-1:-1:-1;;;41737:55:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41737:55:88;-1:-1:-1;;;;;41737:55:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41737:55:88;;;;-1:-1:-1;;;;;;;;42001:19:88;;;;;;:11;:19;;;;;:46;;-1:-1:-1;;;;42001:46:88;-1:-1:-1;;;42001:46:88;;;42257:29;;;42230:23;;;;41737:55;;-1:-1:-1;;42230:56:88;;;:123;;-1:-1:-1;42330:23:88;;;;42306:20;;:47;;42230:123;42213:2515;;;42497:20;;-1:-1:-1;;;;;42461:19:88;;42497:20;42461:19;;;:11;:19;;;;;;;;:33;;;:56;;;;42567:20;;;42531:56;;-1:-1:-1;;;;;42531:56:88;;;-1:-1:-1;;;42531:56:88;-1:-1:-1;;;;42531:56:88;;;;;;42793:23;;;;:34;-1:-1:-1;42789:1401:88;;;-1:-1:-1;;;;;42914:12:88;;;42892:19;42914:12;;;:4;:12;;;;;;;;42927:20;;;;-1:-1:-1;;;;;42914:34:88;;;;;;;;43085:14;;43113:20;;42914:34;;43065:69;;-1:-1:-1;;;43085:14:88;;;;;43102:9;;43065:11;:69::i;:::-;43026:108;;43152:14;43195:8;43169:6;:23;;;:34;;;;:::i;:::-;43152:51;;43767:21;43791:219;;;;;;;;43832:6;:20;;;-1:-1:-1;;;;;43791:219:88;;;;;43889:54;43909:7;:14;;;;;;;;;;-1:-1:-1;;;;;43909:14:88;-1:-1:-1;;;;;43901:23:88;43926:6;43934:8;43889:11;:54::i;:::-;-1:-1:-1;;;;;43791:219:88;;;;;43974:17;43985:6;43974:8;:17;:::i;:::-;43791:219;;-1:-1:-1;;;;;44028:23:88;;;;;;;:15;:23;;;;;;;;;:28;;;;;;;;;;;-1:-1:-1;;;44028:28:88;;-1:-1:-1;;;;;;44028:28:88;;;-1:-1:-1;;;;;44028:28:88;;;;;;;;;;;;;;;;;;;;;;44142:20;;:33;;43767:243;;-1:-1:-1;44028:28:88;;44142:33;;44028:28;;44142:33;:::i;:::-;;;-1:-1:-1;;;;;42789:1401:88;44250:6;:20;;;44239:31;;44322:8;44296:6;:23;;;:34;:71;;44344:6;:23;;;44296:71;;;44333:8;44296:71;44284:83;;42213:2515;;;-1:-1:-1;;;;;44582:19:88;;;;;;:11;:19;;;;;-1:-1:-1;;44582:33:88;;;;:53;42213:2515;44738:44;;;;40977:3812;;;;;:::o;16645:2177::-;16734:24;;:::i;:::-;-1:-1:-1;;;;;16846:12:88;;16824:19;16846:12;;;:4;:12;;;;;;;;-1:-1:-1;;;;;16846:20:88;;;;;;;;;16935:17;16918:14;;;:34;;-1:-1:-1;;16918:34:88;;;;;;17021:14;;-1:-1:-1;;;;;17021:14:88;;;17003:32;;-1:-1:-1;17065:16:88;;;;-1:-1:-1;;;17065:16:88;;;;;17045:17;;;:36;17153:15;;;;;;;;;:33;16760:27;;16846:20;16824:19;17147:39;;-1:-1:-1;;;17153:33:88;;;;17147:2;:39;:::i;:::-;17212:20;;;;17127:59;;-1:-1:-1;17196:13:88;;-1:-1:-1;;;;;17212:20:88;:25;:173;;17337:14;;17364:20;;;;17323:62;;-1:-1:-1;;;;;;;;17337:14:88;;;;;;17353:9;;17364:20;17323:13;:62::i;:::-;17212:173;;;17252:1;17212:173;-1:-1:-1;;;;;17420:19:88;;17396:21;17420:19;;;:11;:19;;;;;;;;:33;;;18011:15;:23;;;;;;:29;17196:189;;-1:-1:-1;17420:33:88;-1:-1:-1;;;;;18011:39:88;;;:29;;:39;18007:765;;18082:14;;-1:-1:-1;;;;;;;;18082:14:88;;;;;18066:13;;;;:30;;;;18128:23;;;18082:14;18128:23;;;:15;:23;;;;;;;:30;;;;18110:15;;;:48;18190:23;;;;;;;:30;-1:-1:-1;;;18190:30:88;;;18172:15;;;:48;18007:765;;;18262:13;18254:5;:21;:112;;;;18305:13;18296:5;:22;:69;;;;-1:-1:-1;;;;;;18332:19:88;;;;;;:11;:19;;;;;:33;-1:-1:-1;;;;;;;;18332:33:88;;;;;18322:43;;;;;18296:69;18237:535;;;18483:14;;-1:-1:-1;;;18483:14:88;;-1:-1:-1;;;;;18483:14:88;18467:13;;;:30;;;18529:52;;18556:9;18567:13;18529:11;:52::i;:::-;18511:15;;;:70;18237:535;;;18701:14;;-1:-1:-1;;;18701:14:88;;-1:-1:-1;;;;;18701:14:88;18685:13;;;:30;;;18729:15;;;:32;18237:535;18782:33;;;;16645:2177;;;;;:::o;28355:1833::-;-1:-1:-1;;;;;28552:12:88;;28530:19;28552:12;;;:4;:12;;;;;;;;-1:-1:-1;;;;;28552:20:88;;;;;;;;;;28602:26;28557:6;28565;28602:10;:26::i;:::-;28582:46;-1:-1:-1;28639:16:88;-1:-1:-1;;;;;28765:29:88;;28761:89;;-1:-1:-1;28829:9:88;28761:89;28899:14;;;:36;;-1:-1:-1;;28899:36:88;28916:19;28899:36;;;-1:-1:-1;;;;;29051:13:88;;;;;;:60;;-1:-1:-1;;;;;;29081:19:88;;;;;;;:11;:19;;;;;;;;:30;;29068:43;;;;;29051:60;29047:1042;;;29465:14;;-1:-1:-1;;;;;29488:15:88;;;29410:13;29488:15;;;:7;:15;;;;;:33;29410:13;;29426:129;;-1:-1:-1;;;29465:14:88;;;;;29482:39;;-1:-1:-1;;;29488:33:88;;;;29482:2;:39;:::i;:::-;29531:9;-1:-1:-1;;;;;29523:18:88;29426:13;:129::i;:::-;29410:145;-1:-1:-1;;;;;;29573:24:88;;:74;;;;-1:-1:-1;;;;;;29618:19:88;;;;;;:11;:19;;;;;:28;;;29601:46;;;29573:74;29569:510;;;29835:14;;-1:-1:-1;;;;;29766:21:88;;;29835:14;29766:21;;;:13;:21;;;;;:124;;:21;;29816:9;;29827:6;;-1:-1:-1;;;29835:14:88;;;;29851:9;29862:10;29766:28;:124::i;:::-;29908:20;;;:32;;-1:-1:-1;;;;;;29908:32:88;-1:-1:-1;;;;;29908:32:88;;;;;29569:510;29113:976;29047:1042;30155:14;;30126:55;;;-1:-1:-1;;;;;;;;30155:14:88;;;;;31546:34:165;;31616:15;;;31611:2;31596:18;;31589:43;-1:-1:-1;;;;;30126:55:88;;;;;;;;31474:18:165;30126:55:88;;;;;;;28489:1699;;;28355:1833;;;;:::o;7447:271:71:-;7682:3;;7505:4;;7662:49;;7672:35;;7687:19;7682:3;;7687:9;:19::i;:::-;7672:9;:35::i;:::-;7709:1;7662:9;:49::i;:::-;7649:3;;;;7639:19;;7649:3;7639:9;:19::i;:::-;:72;;7447:271;-1:-1:-1;;7447:271:71:o;6969:332::-;-1:-1:-1;;;;;;;;;;;;;;;;;7163:3:71;;7168;;;;;7152:28;;7067:12;;;;7124:4;;7146;;7152:28;;7163:3;7173:6;;7152:28;31845:25:165;;;31901:2;31886:18;;31879:34;;;;31944:2;31929:18;;31922:34;31833:2;31818:18;;31643:319;7152:28:71;;;;-1:-1:-1;;7152:28:71;;;;;;;;;;7116:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7066:115;;;;7197:7;7196:8;:30;;;-1:-1:-1;7208:13:71;;:18;7196:30;7192:59;;;7228:23;;-1:-1:-1;;;7228:23:71;;32461:2:165;7228:23:71;;;32443:21:165;32500:2;32480:18;;;32473:30;-1:-1:-1;;;32519:18:165;;;32512:43;32572:18;;7228:23:71;32259:337:165;7192:59:71;7278:6;7267:27;;;;;;;;;;;;:::i;16832:466:19:-;16904:9;17127:1;17123;17119:6;17115:14;17112:1;17109:21;17106:1;17102:29;17095:37;17092:1;17088:45;17078:169;;17166:10;17160:4;17153:24;17228:4;17222;17215:18;17078:169;-1:-1:-1;17269:9:19;;17265:17;;16832:466::o;8064:214:71:-;8120:4;8143:12;8153:1;8143:9;:12::i;:::-;:39;;;;-1:-1:-1;8161:3:71;;8168:1;8161:8;:20;;;;;8173:1;:3;;;8180:1;8173:8;8161:20;8159:23;8143:39;:66;;;;-1:-1:-1;8188:3:71;;:8;:20;;;;-1:-1:-1;8200:3:71;;;;:8;8188:20;8186:23;8143:66;:103;;;;-1:-1:-1;8226:3:71;;-1:-1:-1;;;;;;;;;;;;8143:103:71;:128;;;;-1:-1:-1;;8251:3:71;;;-1:-1:-1;;;;;;;;;;;;8251:19:71;8064:214::o;2791:518::-;2918:7;2989:28;2999:17;2989:9;:28::i;:::-;2984:64;;3019:29;;-1:-1:-1;;;3019:29:71;;33054:2:165;3019:29:71;;;33036:21:165;33093:2;33073:18;;;33066:30;-1:-1:-1;;;33112:18:165;;;33105:49;33171:18;;3019:29:71;32852:343:165;2984:64:71;1747:102;3137:11;:26;;:46;;;-1:-1:-1;3167:16:71;;3137:46;3133:82;;;3185:30;;-1:-1:-1;;;3185:30:71;;28770:2:165;3185:30:71;;;28752:21:165;28809:2;28789:18;;;28782:30;-1:-1:-1;;;28828:18:165;;;28821:50;28888:18;;3185:30:71;28568:344:165;3133:82:71;3226:14;3243:38;3250:17;3269:11;3243:6;:38::i;:::-;3299:3;;2791:518;-1:-1:-1;;;;2791:518:71:o;16269:462:19:-;16347:14;16382:19;16393:1;16396;16399;16382:10;:19::i;:::-;16373:28;;16493:1;16490;16487;16480:15;16477:238;;;16536:1;16524:14;;16555:146;;16608:10;16602:4;16595:24;16678:4;16672;16665:18;32474:7653:88;32553:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32553:33:88;-1:-1:-1;;;;;32734:15:88;;32715:16;32734:15;;;:7;:15;;;;;;;:24;;;;32794:33;;32734:24;;32715:16;32788:39;;-1:-1:-1;;;32794:33:88;;;;32788:2;:39;:::i;:::-;-1:-1:-1;;;;;32873:19:88;;32837:33;32873:19;;;:11;:19;;;;;;;;32837:55;;;;;;;;;-1:-1:-1;;;;;32837:55:88;;;;;-1:-1:-1;;;32837:55:88;;;;;;;;;;32768:59;;-1:-1:-1;32837:33:88;;:55;32873:19;32837:55;;;;-1:-1:-1;;;32837:55:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;32837:55:88;;-1:-1:-1;;;;;32837:55:88;;;;;;;;;-1:-1:-1;;;32837:55:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32837:55:88;-1:-1:-1;;;;;32837:55:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;32837:55:88;;;;-1:-1:-1;;;;;;;;33058:21:88;;33036:19;33058:21;;;:13;:21;;;;;32837:55;;-1:-1:-1;33036:19:88;;33172:18;33058:21;5753:12:73;;5664:108;33172:18:88;33154:36;;33209:9;33204:6883;33228:7;33224:1;:11;33204:6883;;;33615:12;33629:16;33647:13;33664:29;33676:5;33683:9;33664:11;:29::i;:::-;33614:79;;;;;;34026:14;:23;;;34018:5;:31;34014:1772;;;34544:23;;;;:28;;:177;;;34713:8;34604:73;34620:6;:20;;;34642:9;34653:14;:23;;;34604:15;:73::i;:::-;:117;;34544:177;34515:544;;;34821:60;34839:6;:20;;;34861:9;34872:8;34821:17;:60::i;:::-;34770:111;;34515:544;;;34959:23;;;;34936:46;;34515:544;35283:20;;35270:33;;35266:120;;-1:-1:-1;;;;;35331:32:88;;:20;;;:32;35266:120;35534:70;35550:6;:20;;;35572:9;35583:6;:20;;;35534:15;:70::i;:::-;35484:23;;;:120;-1:-1:-1;35762:5:88;;-1:-1:-1;;35762:5:88;34014:1772;36145:55;36161:6;:20;;;36183:9;36194:5;36145:15;:55::i;:::-;36119:23;;;:81;;;36222:35;-1:-1:-1;36218:1211:88;;36328:60;36346:6;:20;;;36368:9;36379:8;36328:17;:60::i;:::-;36281:107;;;36600:33;;36596:333;;-1:-1:-1;;;;;36661:32:88;;:20;;;:32;36596:333;;;36778:1;36748:20;;;:32;37274:70;37290:6;:20;;;37312:9;37323:6;:20;;;37274:15;:70::i;36218:1211::-;37539:5;37527:17;;37574:5;37562:17;;37667:8;37643:6;:20;;:32;;;;;;;:::i;:::-;;;-1:-1:-1;37896:20:88;;;;37880:55;;37918:9;37929:5;37880:15;:55::i;:::-;37854:23;;;:81;;;38190:35;-1:-1:-1;38186:187:88;;38249:28;;-1:-1:-1;;;;;;38299:28:88;:20;;;:28;38349:5;;38186:187;38539:11;38549:1;38539:7;:11;:::i;:::-;38534:1;:16;38530:1543;;39049:23;;;;:28;;:173;;;39214:8;39109:69;39121:6;:20;;;39143:9;39154:14;:23;;;39109:11;:69::i;:::-;:113;;39049:173;39020:482;;;39322:56;39336:6;:20;;;39358:9;39369:8;39322:13;:56::i;:::-;39271:107;;39020:482;;;39456:23;;;;39433:46;;39020:482;39721:20;;39712:29;;39708:112;;-1:-1:-1;;;;;39769:28:88;;:20;;;:28;39708:112;39892:70;39908:6;:20;;;39930:9;39941:6;:20;;;39892:15;:70::i;:::-;39842:23;;;:120;38530:1543;33242:6845;;;33237:3;;;;;:::i;:::-;;;;33204:6883;;;;33022:7075;;;;40107:13;;;32474:7653;;;:::o;17398:508:19:-;17472:9;17695:1;17691;17687:6;17683:14;17680:1;17677:21;17674:1;17670:29;17663:37;17660:1;17656:45;17646:169;;17734:10;17728:4;17721:24;17796:4;17790;17783:18;17646:169;-1:-1:-1;17876:9:19;;17851:17;;;17844:25;17837:33;17872:17;;;17833:57;;17398:508::o;2971:1557:73:-;3267:1;3251:13;-1:-1:-1;;;;;3251:17:73;;3243:50;;;;-1:-1:-1;;;3243:50:73;;33654:2:165;3243:50:73;;;33636:21:165;33693:2;33673:18;;;33666:30;-1:-1:-1;;;33712:18:165;;;33705:50;33772:18;;3243:50:73;33452:344:165;3243:50:73;3330:11;3344:52;3363:6;3371:9;3382:13;3344:18;:52::i;:::-;2692:4;2882:19;;;:12;;;:19;;;;;;3330:66;;-1:-1:-1;2882:33:73;3466:51;;;;-1:-1:-1;;;3466:51:73;;34003:2:165;3466:51:73;;;33985:21:165;34042:2;34022:18;;;34015:30;-1:-1:-1;;;34061:18:165;;;34054:48;34119:18;;3466:51:73;33801:342:165;3466:51:73;2692:4;2882:19;;;:12;;;:19;;;;;;3581:54;;;;-1:-1:-1;;;3581:54:73;;34350:2:165;3581:54:73;;;34332:21:165;34389:2;34369:18;;;34362:30;-1:-1:-1;;;34408:18:165;;;34401:50;34468:18;;3581:54:73;34148:344:165;3581:54:73;3745:43;:5;3772:3;3777:10;3745:26;:43::i;:::-;3737:79;;;;-1:-1:-1;;;3737:79:73;;34699:2:165;3737:79:73;;;34681:21:165;34738:2;34718:18;;;34711:30;34777:25;34757:18;;;34750:53;34820:18;;3737:79:73;34497:347:165;3737:79:73;4122:12;4137:19;;;:12;;;:19;;;;;;4166:127;4173:42;:4;4199:3;4204:10;4173:25;:42::i;:::-;4166:127;;;4264:18;;;;:12;;;:18;;;;;;4239:4;;-1:-1:-1;4166:127:73;;;4384:19;;;;:12;;;:19;;;;;;:25;;;4419:17;;;;;:24;;;4507:14;;;4384:4;;4507:14;;;:::i;:::-;;;;;;3160:1368;;2971:1557;;;;;;:::o;8284:155:71:-;8347:9;-1:-1:-1;;;;;;;;;;;8406:1:71;8403;8396:27;8391:32;8284:155;-1:-1:-1;;;8284:155:71:o;8445:::-;8508:9;-1:-1:-1;;;;;;;;;;;8567:1:71;8564;8557:27;8552:32;8445:155;-1:-1:-1;;;8445:155:71:o;12569:3418:19:-;12645:14;13181:9;;;-1:-1:-1;;13188:1:19;13185;13217:20;13341:10;;;13333:19;;13325:28;;;13438:274;;13484:1;13474:153;;13526:10;13520:4;13513:24;13600:4;13594;13587:18;13474:153;-1:-1:-1;13658:10:19;;;;-1:-1:-1;13689:5:19;;13438:274;13833:2;13830:1;13827:9;13817:149;;13873:10;13867:4;13860:24;13943:4;13937;13930:18;13817:149;14223:1;14220;14217;14210:15;14371:1;14367:9;;;14360:17;;14462:9;;;;;15753;;;15745:18;;;15773:9;;;;15769:17;;;15788:1;15765:25;15741:50;15797:10;;15793:18;15738:74;14841:1;14837:9;;14848:1;14833:17;;;15119:11;;;15112:19;;15103:29;15192:11;;;15185:19;;15176:29;15266:11;;;15259:19;;15250:29;15340:11;;;15333:19;;15324:29;15414:11;;;15407:19;;15398:29;15900:11;;;15893:19;;;15884:29;15496:439;;-1:-1:-1;12569:3418:19;;;;;:::o;31422:800:88:-;31525:12;31539:16;31557:13;31630:19;31693:15;:6;:13;:15::i;:::-;31659:49;;-1:-1:-1;;;;;;31659:49:88;;;;-1:-1:-1;31659:49:88;;-1:-1:-1;31904:17:88;;31920:1;31904:17;31900:155;;-1:-1:-1;32042:1:88;;-1:-1:-1;32017:27:88;;31900:155;32115:58;32129:8;32139:10;32159:12;-1:-1:-1;;;;;32151:21:88;32115:13;:58::i;:::-;32107:66;;32184:31;31422:800;;;;;;:::o;177:210:73:-;332:47;;;-1:-1:-1;;;;;;35066:3:165;35044:16;;;35040:51;332:47:73;;;35028:64:165;-1:-1:-1;;;;;;35115:3:165;35180:16;;;35176:25;;35163:11;;;35156:46;35236:16;;;35232:25;35218:12;;;35211:47;298:7:73;;35274:12:165;332:47:73;;;;;;;;;;;;324:56;;;:::i;:::-;317:63;177:210;-1:-1:-1;;;;177:210:73:o;692:614::-;823:4;518:3;510:11;;;;574:2;566:10;;;;510:11;;;;;;;566:10;;;510:11;823:4;1011:68;-1:-1:-1;;;;;1025:18:73;;;;1045:9;;1056:22;;1011:13;:68::i;:::-;994:85;;1089:14;1106:68;1128:9;-1:-1:-1;;;;;1120:18:73;1140:9;1159:13;-1:-1:-1;;;;;1151:22:73;1106:13;:68::i;:::-;1089:85;;1198:6;1188;:16;1184:116;;1233:3;-1:-1:-1;;;;;1227:9:73;:3;-1:-1:-1;;;;;1227:9:73;;1220:16;;;;;;;;;;;;1184:116;-1:-1:-1;1274:15:73;-1:-1:-1;1267:22:73;;-1:-1:-1;;;;;;1267:22:73;4640:513;-1:-1:-1;;;;;;;;;4694:6:73;4772:25;;;:12;;;:25;;;;;;4694:6;;;;-1:-1:-1;;;;;4815:19:73;;4807:46;;;;-1:-1:-1;;;4807:46:73;;35801:2:165;4807:46:73;;;35783:21:165;35840:2;35820:18;;;35813:30;-1:-1:-1;;;35859:18:165;;;35852:44;35913:18;;4807:46:73;35599:338:165;4807:46:73;4937:20;;;;:12;;;:20;;;;;;;;-1:-1:-1;;;;;;;;;4909:25:73;;;;;:48;;;;4974:20;;;4967:27;;;5058:14;;;4937:4;;5058:14;;;:::i;:::-;;;;-1:-1:-1;;518:3:73;510:11;;;;574:2;566:10;;;;-1:-1:-1;510:11:73;;-1:-1:-1;4640:513:73;-1:-1:-1;;4640:513:73:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:165:-;81:20;;-1:-1:-1;;;;;130:38:165;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:320::-;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;382:28;400:9;382:28;:::i;:::-;372:38;457:2;442:18;;429:32;;-1:-1:-1;508:2:165;493:18;;;480:32;;198:320;-1:-1:-1;;;198:320:165:o;630:655::-;799:2;851:21;;;921:13;;824:18;;;943:22;;;770:4;;799:2;1022:15;;;;996:2;981:18;;;770:4;1065:194;1079:6;1076:1;1073:13;1065:194;;;1144:13;;-1:-1:-1;;;;;1140:38:165;1128:51;;1234:15;;;;1199:12;;;;1101:1;1094:9;1065:194;;;-1:-1:-1;1276:3:165;;630:655;-1:-1:-1;;;;;;630:655:165:o;1290:184::-;1348:6;1401:2;1389:9;1380:7;1376:23;1372:32;1369:52;;;1417:1;1414;1407:12;1369:52;1440:28;1458:9;1440:28;:::i;1767:366::-;1829:8;1839:6;1893:3;1886:4;1878:6;1874:17;1870:27;1860:55;;1911:1;1908;1901:12;1860:55;-1:-1:-1;1934:20:165;;-1:-1:-1;;;;;1966:30:165;;1963:50;;;2009:1;2006;1999:12;1963:50;2046:4;2038:6;2034:17;2022:29;;2106:3;2099:4;2089:6;2086:1;2082:14;2074:6;2070:27;2066:38;2063:47;2060:67;;;2123:1;2120;2113:12;2138:507;2231:6;2239;2247;2300:2;2288:9;2279:7;2275:23;2271:32;2268:52;;;2316:1;2313;2306:12;2268:52;2339:28;2357:9;2339:28;:::i;:::-;2329:38;;2418:2;2407:9;2403:18;2390:32;-1:-1:-1;;;;;2437:6:165;2434:30;2431:50;;;2477:1;2474;2467:12;2431:50;2516:69;2577:7;2568:6;2557:9;2553:22;2516:69;:::i;:::-;2138:507;;2604:8;;-1:-1:-1;2490:95:165;;-1:-1:-1;;;;2138:507:165:o;2650:250::-;2735:1;2745:113;2759:6;2756:1;2753:13;2745:113;;;2835:11;;;2829:18;2816:11;;;2809:39;2781:2;2774:10;2745:113;;;-1:-1:-1;;2892:1:165;2874:16;;2867:27;2650:250::o;2905:270::-;2946:3;2984:5;2978:12;3011:6;3006:3;2999:19;3027:76;3096:6;3089:4;3084:3;3080:14;3073:4;3066:5;3062:16;3027:76;:::i;:::-;3157:2;3136:15;-1:-1:-1;;3132:29:165;3123:39;;;;3164:4;3119:50;;2905:270;-1:-1:-1;;2905:270:165:o;3180:1191::-;3451:2;3503:21;;;3573:13;;3476:18;;;3595:22;;;3422:4;;3451:2;3636;;3654:18;;;;3691:4;3718:15;;;3422:4;3761:502;3775:6;3772:1;3769:13;3761:502;;;3834:13;;3918:9;;-1:-1:-1;;;;;3914:18:165;;;3902:31;;3977:11;;;3971:18;3967:27;3953:12;;;3946:49;4035:11;;;4029:18;4015:12;;;4008:40;4088:11;;;4082:18;4068:12;;;4061:40;4124:4;4168:11;;;4162:18;4148:12;;;4141:40;3878:3;4201:14;;;;4238:15;;;;3887:1;3790:9;3761:502;;;-1:-1:-1;;4299:19:165;;;4279:18;;;4272:47;-1:-1:-1;4336:29:165;4303:3;4353:6;4336:29;:::i;4376:217::-;4523:2;4512:9;4505:21;4486:4;4543:44;4583:2;4572:9;4568:18;4560:6;4543:44;:::i;4780:171::-;4847:20;;-1:-1:-1;;;;;4896:30:165;;4886:41;;4876:69;;4941:1;4938;4931:12;4956:256;5022:6;5030;5083:2;5071:9;5062:7;5058:23;5054:32;5051:52;;;5099:1;5096;5089:12;5051:52;5122:28;5140:9;5122:28;:::i;:::-;5112:38;;5169:37;5202:2;5191:9;5187:18;5169:37;:::i;:::-;5159:47;;4956:256;;;;;:::o;5217:127::-;5278:10;5273:3;5269:20;5266:1;5259:31;5309:4;5306:1;5299:15;5333:4;5330:1;5323:15;5349:114;5431:1;5424:5;5421:12;5411:46;;5437:18;;:::i;5468:639::-;-1:-1:-1;;;;;5792:15:165;;;5774:34;;-1:-1:-1;;;;;5889:15:165;;;5884:2;5869:18;;5862:43;5941:15;;5936:2;5921:18;;5914:43;5993:15;;5988:2;5973:18;;5966:43;5723:3;5708:19;;6018:39;6050:6;6018:39;:::i;:::-;6094:6;6088:3;6077:9;6073:19;6066:35;5468:639;;;;;;;;:::o;6320:167::-;6387:20;;6447:14;6436:26;;6426:37;;6416:65;;6477:1;6474;6467:12;6492:184;6550:6;6603:2;6591:9;6582:7;6578:23;6574:32;6571:52;;;6619:1;6616;6609:12;6571:52;6642:28;6660:9;6642:28;:::i;6681:432::-;6912:6;6901:9;6894:25;6955:6;6950:2;6939:9;6935:18;6928:34;6998:6;6993:2;6982:9;6978:18;6971:34;7041:3;7036:2;7025:9;7021:18;7014:31;6875:4;7062:45;7102:3;7091:9;7087:19;7079:6;7062:45;:::i;:::-;7054:53;6681:432;-1:-1:-1;;;;;;6681:432:165:o;7118:580::-;7220:6;7228;7236;7244;7297:2;7285:9;7276:7;7272:23;7268:32;7265:52;;;7313:1;7310;7303:12;7265:52;7336:28;7354:9;7336:28;:::i;:::-;7326:38;;7383:37;7416:2;7405:9;7401:18;7383:37;:::i;:::-;7373:47;;7471:2;7460:9;7456:18;7443:32;-1:-1:-1;;;;;7490:6:165;7487:30;7484:50;;;7530:1;7527;7520:12;7484:50;7569:69;7630:7;7621:6;7610:9;7606:22;7569:69;:::i;:::-;7118:580;;;;-1:-1:-1;7657:8:165;-1:-1:-1;;;;7118:580:165:o;8819:313::-;9041:25;;;9029:2;9014:18;;9075:51;9122:2;9107:18;;9099:6;8739:12;;8727:25;;8801:4;8790:16;;;8784:23;8768:14;;8761:47;8668:146;9892:649;10003:6;10011;10019;10027;10035;10088:3;10076:9;10067:7;10063:23;10059:33;10056:53;;;10105:1;10102;10095:12;10056:53;10128:28;10146:9;10128:28;:::i;:::-;10118:38;;10203:2;10192:9;10188:18;10175:32;10165:42;;10226:37;10259:2;10248:9;10244:18;10226:37;:::i;:::-;10216:47;;10314:2;10303:9;10299:18;10286:32;-1:-1:-1;;;;;10333:6:165;10330:30;10327:50;;;10373:1;10370;10363:12;10327:50;10412:69;10473:7;10464:6;10453:9;10449:22;10412:69;:::i;:::-;9892:649;;;;-1:-1:-1;9892:649:165;;-1:-1:-1;10500:8:165;;10386:95;9892:649;-1:-1:-1;;;9892:649:165:o;10546:252::-;10613:6;10621;10674:2;10662:9;10653:7;10649:23;10645:32;10642:52;;;10690:1;10687;10680:12;10642:52;10713:28;10731:9;10713:28;:::i;:::-;10703:38;10788:2;10773:18;;;;10760:32;;-1:-1:-1;;;10546:252:165:o;11008:173::-;11076:20;;-1:-1:-1;;;;;11125:31:165;;11115:42;;11105:70;;11171:1;11168;11161:12;11186:399;11270:6;11278;11286;11294;11347:3;11335:9;11326:7;11322:23;11318:33;11315:53;;;11364:1;11361;11354:12;11315:53;11387:28;11405:9;11387:28;:::i;:::-;11377:38;;11434:37;11467:2;11456:9;11452:18;11434:37;:::i;:::-;11424:47;;11518:2;11507:9;11503:18;11490:32;11480:42;;11541:38;11575:2;11564:9;11560:18;11541:38;:::i;:::-;11531:48;;11186:399;;;;;;;:::o;11590:881::-;11695:6;11703;11711;11719;11727;11735;11788:3;11776:9;11767:7;11763:23;11759:33;11756:53;;;11805:1;11802;11795:12;11756:53;11828:28;11846:9;11828:28;:::i;:::-;11818:38;;11875;11909:2;11898:9;11894:18;11875:38;:::i;:::-;11865:48;;11932:38;11966:2;11955:9;11951:18;11932:38;:::i;:::-;11922:48;;12017:2;12006:9;12002:18;11989:32;11979:42;;12072:3;12061:9;12057:19;12044:33;-1:-1:-1;;;;;12137:2:165;12129:6;12126:14;12123:34;;;12153:1;12150;12143:12;12123:34;12191:6;12180:9;12176:22;12166:32;;12236:7;12229:4;12225:2;12221:13;12217:27;12207:55;;12258:1;12255;12248:12;12207:55;12298:2;12285:16;12324:2;12316:6;12313:14;12310:34;;;12340:1;12337;12330:12;12310:34;12385:7;12380:2;12371:6;12367:2;12363:15;12359:24;12356:37;12353:57;;;12406:1;12403;12396:12;12353:57;12437:2;12433;12429:11;12419:21;;12459:6;12449:16;;;;;11590:881;;;;;;;;:::o;12915:248::-;13064:2;13049:18;;13097:1;13086:13;;13076:47;;13103:18;;:::i;:::-;13132:25;;;12915:248;:::o;13601:1007::-;13827:4;13869:3;13858:9;13854:19;13846:27;;13909:1;13905;13900:3;13896:11;13892:19;13957:2;13948:6;13942:13;13938:22;13927:9;13920:41;14008:4;14000:6;13996:17;13990:24;-1:-1:-1;;;;;14115:2:165;14101:12;14097:21;14090:4;14079:9;14075:20;14068:51;14187:2;14179:4;14171:6;14167:17;14161:24;14157:33;14150:4;14139:9;14135:20;14128:63;;;14259:2;14251:4;14243:6;14239:17;14233:24;14229:33;14222:4;14211:9;14207:20;14200:63;;14312:4;14304:6;14300:17;14294:24;14327:47;14359:14;14327:47;:::i;:::-;14405:4;14390:20;;14383:44;14464:13;;14458:3;14443:19;;14436:42;14527:4;14515:17;;;14509:24;8739:12;;14597:3;14582:19;;8727:25;8790:16;;;8784:23;8768:14;;;;8761:47;13601:1007;;-1:-1:-1;13601:1007:165:o;14613:127::-;14674:10;14669:3;14665:20;14662:1;14655:31;14705:4;14702:1;14695:15;14729:4;14726:1;14719:15;14745:253;14817:2;14811:9;14859:4;14847:17;;-1:-1:-1;;;;;14879:34:165;;14915:22;;;14876:62;14873:88;;;14941:18;;:::i;:::-;14977:2;14970:22;14745:253;:::o;15003:257::-;15075:4;15069:11;;;15107:17;;-1:-1:-1;;;;;15139:34:165;;15175:22;;;15136:62;15133:88;;;15201:18;;:::i;15265:275::-;15336:2;15330:9;15401:2;15382:13;;-1:-1:-1;;15378:27:165;15366:40;;-1:-1:-1;;;;;15421:34:165;;15457:22;;;15418:62;15415:88;;;15483:18;;:::i;:::-;15519:2;15512:22;15265:275;;-1:-1:-1;15265:275:165:o;15545:118::-;15631:5;15624:13;15617:21;15610:5;15607:32;15597:60;;15653:1;15650;15643:12;15668:156;15734:20;;15794:4;15783:16;;15773:27;;15763:55;;15814:1;15811;15804:12;15829:1564;15942:6;15950;15958;15966;16019:3;16007:9;15998:7;15994:23;15990:33;15987:53;;;16036:1;16033;16026:12;15987:53;16059:28;16077:9;16059:28;:::i;:::-;16049:38;;16106:2;16159;16148:9;16144:18;16131:32;-1:-1:-1;;;;;16223:2:165;16215:6;16212:14;16209:34;;;16239:1;16236;16229:12;16209:34;16262:22;;;;16318:4;16300:16;;;16296:27;16293:47;;;16336:1;16333;16326:12;16293:47;16362:22;;:::i;:::-;16407:21;16425:2;16407:21;:::i;:::-;16400:5;16393:36;16461:30;16487:2;16483;16479:11;16461:30;:::i;:::-;16456:2;16449:5;16445:14;16438:54;16537:2;16533;16529:11;16516:25;16550:30;16572:7;16550:30;:::i;:::-;16607:2;16596:14;;16589:31;16673:2;16665:11;;;16652:25;16636:14;;;16629:49;16724:3;16716:12;;16703:26;16741:16;;;16738:36;;;16770:1;16767;16760:12;16738:36;16801:8;16797:2;16793:17;16783:27;;;16848:7;16841:4;16837:2;16833:13;16829:27;16819:55;;16870:1;16867;16860:12;16819:55;16906:2;16893:16;16928:2;16924;16921:10;16918:36;;;16934:18;;:::i;:::-;16976:53;17019:2;17000:13;;-1:-1:-1;;16996:27:165;16992:36;;16976:53;:::i;:::-;16963:66;;17052:2;17045:5;17038:17;17092:7;17087:2;17082;17078;17074:11;17070:20;17067:33;17064:53;;;17113:1;17110;17103:12;17064:53;17168:2;17163;17159;17155:11;17150:2;17143:5;17139:14;17126:45;17212:1;17191:14;;;17187:23;;;17180:34;;;;17241:3;17230:15;;17223:30;-1:-1:-1;17234:5:165;-1:-1:-1;17296:36:165;17328:2;17313:18;;17296:36;:::i;:::-;17286:46;;17351:36;17383:2;17372:9;17368:18;17351:36;:::i;17398:241::-;17540:2;17525:18;;17573:1;17562:13;;17552:47;;17579:18;;:::i;17644:132::-;17705:38;17737:5;17705:38;:::i;:::-;17752:18;;17644:132::o;17781:459::-;17833:3;17871:5;17865:12;17898:6;17893:3;17886:19;17924:4;17953:2;17948:3;17944:12;17937:19;;17990:2;17983:5;17979:14;18011:1;18021:194;18035:6;18032:1;18029:13;18021:194;;;18100:13;;-1:-1:-1;;;;;18096:38:165;18084:51;;18155:12;;;;18190:15;;;;18057:1;18050:9;18021:194;;;-1:-1:-1;18231:3:165;;17781:459;-1:-1:-1;;;;;17781:459:165:o;18245:1456::-;18434:2;18423:9;18416:21;18446:52;18494:2;18483:9;18479:18;18470:6;18464:13;-1:-1:-1;;;;;588:30:165;576:43;;523:102;18446:52;18397:4;18545:2;18537:6;18533:15;18527:22;18558:51;18605:2;18594:9;18590:18;18576:12;-1:-1:-1;;;;;588:30:165;576:43;;523:102;18558:51;;18658:2;18650:6;18646:15;18640:22;18671:61;18728:2;18717:9;18713:18;18697:14;18671:61;:::i;:::-;-1:-1:-1;18781:2:165;18769:15;;18763:22;-1:-1:-1;;;;;588:30:165;;18843:3;18828:19;;576:43;-1:-1:-1;18897:3:165;18885:16;;18879:23;1549:13;;1542:21;18958:3;18943:19;;1530:34;18911:52;19018:3;19010:6;19006:16;19000:23;18994:3;18983:9;18979:19;18972:52;19079:3;19071:6;19067:16;19061:23;19055:3;19044:9;19040:19;19033:52;19122:3;19114:6;19110:16;19104:23;19146:3;19185:2;19180;19169:9;19165:18;19158:30;19225:2;19217:6;19213:15;19207:22;19197:32;;;19248:3;19287:2;19282;19271:9;19267:18;19260:30;19339:2;19331:6;19327:15;19321:22;19299:44;;;19362:3;19374:59;19429:2;19418:9;19414:18;19398:14;8739:12;;8727:25;;8801:4;8790:16;;;8784:23;8768:14;;8761:47;8668:146;19374:59;19476:15;;19470:22;19464:3;19449:19;;19442:51;-1:-1:-1;19542:6:165;19530:19;;19524:26;19569:6;19591:18;;;19584:30;19631:64;19690:3;19675:19;;19524:26;19631:64;:::i;19949:1091::-;-1:-1:-1;;;;;20481:15:165;;;20463:34;;20533:15;;;20528:2;20513:18;;20506:43;20413:3;20398:19;;;20558:39;20590:6;20558:39;:::i;:::-;20633:6;20628:2;20617:9;20613:18;20606:34;20688:2;20680:6;20676:15;20671:2;20660:9;20656:18;20649:43;;20743:6;20736:14;20729:22;20723:3;20712:9;20708:19;20701:51;20789:6;20783:3;20772:9;20768:19;20761:35;20833:6;20827:3;20816:9;20812:19;20805:35;20877:6;20871:3;20860:9;20856:19;20849:35;20921:6;20915:3;20904:9;20900:19;20893:35;20937:52;20984:3;20973:9;20969:19;20961:6;8739:12;;8727:25;;8801:4;8790:16;;;8784:23;8768:14;;8761:47;8668:146;20937:52;21026:7;21020:3;21009:9;21005:19;20998:36;19949:1091;;;;;;;;;;;;;;:::o;21045:359::-;21248:6;21237:9;21230:25;21291:6;21286:2;21275:9;21271:18;21264:34;21334:2;21329;21318:9;21314:18;21307:30;21211:4;21354:44;21394:2;21383:9;21379:18;21371:6;21354:44;:::i;21409:127::-;21470:10;21465:3;21461:20;21458:1;21451:31;21501:4;21498:1;21491:15;21525:4;21522:1;21515:15;21541:128;21608:9;;;21629:11;;;21626:37;;;21643:18;;:::i;21674:125::-;21739:9;;;21760:10;;;21757:36;;;21773:18;;:::i;21804:127::-;21865:10;21860:3;21856:20;21853:1;21846:31;21896:4;21893:1;21886:15;21920:4;21917:1;21910:15;21936:135;21975:3;21996:17;;;21993:43;;22016:18;;:::i;:::-;-1:-1:-1;22063:1:165;22052:13;;21936:135::o;22076:245::-;22143:6;22196:2;22184:9;22175:7;22171:23;22167:32;22164:52;;;22212:1;22209;22202:12;22164:52;22244:9;22238:16;22263:28;22285:5;22263:28;:::i;22326:380::-;22405:1;22401:12;;;;22448;;;22469:61;;22523:4;22515:6;22511:17;22501:27;;22469:61;22576:2;22568:6;22565:14;22545:18;22542:38;22539:161;;22622:10;22617:3;22613:20;22610:1;22603:31;22657:4;22654:1;22647:15;22685:4;22682:1;22675:15;22539:161;;22326:380;;;:::o;23677:176::-;23744:14;23778:10;;;23790;;;23774:27;;23813:11;;;23810:37;;;23827:18;;:::i;:::-;23810:37;23677:176;;;;:::o;23983:544::-;24084:2;24079:3;24076:11;24073:448;;;24120:1;24145:5;24141:2;24134:17;24190:4;24186:2;24176:19;24260:2;24248:10;24244:19;24241:1;24237:27;24231:4;24227:38;24296:4;24284:10;24281:20;24278:47;;;-1:-1:-1;24319:4:165;24278:47;24374:2;24369:3;24365:12;24362:1;24358:20;24352:4;24348:31;24338:41;;24429:82;24447:2;24440:5;24437:13;24429:82;;;24492:17;;;24473:1;24462:13;24429:82;;;24433:3;;;23983:544;;;:::o;24703:1348::-;24827:3;24821:10;-1:-1:-1;;;;;24846:6:165;24843:30;24840:56;;;24876:18;;:::i;:::-;24905:96;24994:6;24954:38;24986:4;24980:11;24954:38;:::i;:::-;24948:4;24905:96;:::i;:::-;25056:4;;25120:2;25109:14;;25137:1;25132:662;;;;25838:1;25855:6;25852:89;;;-1:-1:-1;25907:19:165;;;25901:26;25852:89;-1:-1:-1;;24660:1:165;24656:11;;;24652:24;24648:29;24638:40;24684:1;24680:11;;;24635:57;25954:81;;25102:943;;25132:662;23930:1;23923:14;;;23967:4;23954:18;;-1:-1:-1;;25168:20:165;;;25285:236;25299:7;25296:1;25293:14;25285:236;;;25388:19;;;25382:26;25367:42;;25480:27;;;;25448:1;25436:14;;;;25315:19;;25285:236;;;25289:3;25549:6;25540:7;25537:19;25534:201;;;25610:19;;;25604:26;-1:-1:-1;;25693:1:165;25689:14;;;25705:3;25685:24;25681:37;25677:42;25662:58;25647:74;;25534:201;-1:-1:-1;;;;;25781:1:165;25765:14;;;25761:22;25748:36;;-1:-1:-1;24703:1348:165:o;26056:184::-;26114:6;26167:2;26155:9;26146:7;26142:23;26138:32;26135:52;;;26183:1;26180;26173:12;26135:52;26206:28;26224:9;26206:28;:::i;26245:183::-;-1:-1:-1;;;;;26364:10:165;;;26352;;;26348:27;;26387:12;;;26384:38;;;26402:18;;:::i;26433:422::-;26522:1;26565:5;26522:1;26579:270;26600:7;26590:8;26587:21;26579:270;;;26659:4;26655:1;26651:6;26647:17;26641:4;26638:27;26635:53;;;26668:18;;:::i;:::-;26718:7;26708:8;26704:22;26701:55;;;26738:16;;;;26701:55;26817:22;;;;26777:15;;;;26579:270;;;26583:3;26433:422;;;;;:::o;26860:806::-;26909:5;26939:8;26929:80;;-1:-1:-1;26980:1:165;26994:5;;26929:80;27028:4;27018:76;;-1:-1:-1;27065:1:165;27079:5;;27018:76;27110:4;27128:1;27123:59;;;;27196:1;27191:130;;;;27103:218;;27123:59;27153:1;27144:10;;27167:5;;;27191:130;27228:3;27218:8;27215:17;27212:43;;;27235:18;;:::i;:::-;-1:-1:-1;;27291:1:165;27277:16;;27306:5;;27103:218;;27405:2;27395:8;27392:16;27386:3;27380:4;27377:13;27373:36;27367:2;27357:8;27354:16;27349:2;27343:4;27340:12;27336:35;27333:77;27330:159;;;-1:-1:-1;27442:19:165;;;27474:5;;27330:159;27521:34;27546:8;27540:4;27521:34;:::i;:::-;27591:6;27587:1;27583:6;27579:19;27570:7;27567:32;27564:58;;;27602:18;;:::i;:::-;27640:20;;26860:806;-1:-1:-1;;;26860:806:165:o;27671:140::-;27729:5;27758:47;27799:4;27789:8;27785:19;27779:4;27758:47;:::i;27816:180::-;-1:-1:-1;;;;;27921:10:165;;;27933;;;27917:27;;27956:11;;;27953:37;;;27970:18;;:::i;28001:209::-;28039:3;-1:-1:-1;;;;;28120:2:165;28113:5;28109:14;28147:2;28138:7;28135:15;28132:41;;28153:18;;:::i;:::-;28202:1;28189:15;;28001:209;-1:-1:-1;;;28001:209:165:o;29531:127::-;29592:10;29587:3;29583:20;29580:1;29573:31;29623:4;29620:1;29613:15;29647:4;29644:1;29637:15;29663:489;29755:6;29763;29807:9;29798:7;29794:23;29837:2;29833;29829:11;29826:31;;;29853:1;29850;29843:12;29826:31;29876:23;;;-1:-1:-1;29933:4:165;-1:-1:-1;;29915:16:165;;29911:27;29908:47;;;29951:1;29948;29941:12;29908:47;;29977:22;;:::i;:::-;30050:2;30039:9;30035:18;30022:32;30015:5;30008:47;30115:4;30104:9;30100:20;30087:34;30082:2;30075:5;30071:14;30064:58;30141:5;30131:15;;;29663:489;;;;;:::o;30157:165::-;30235:13;;30288:8;30277:20;;30267:31;;30257:59;;30312:1;30309;30302:12;30327:277;30390:5;30438:4;30426:9;30421:3;30417:19;30413:30;30410:50;;;30456:1;30453;30446:12;30410:50;30478:22;;:::i;:::-;30469:31;;30529:9;30523:16;30516:5;30509:31;30593:2;30582:9;30578:18;30572:25;30567:2;30560:5;30556:14;30549:49;30327:277;;;;:::o;30609:717::-;30715:6;30768:3;30756:9;30747:7;30743:23;30739:33;30736:53;;;30785:1;30782;30775:12;30736:53;30818:2;30812:9;30860:4;30852:6;30848:17;30931:6;30919:10;30916:22;-1:-1:-1;;;;;30883:10:165;30880:34;30877:62;30874:88;;;30942:18;;:::i;:::-;30978:2;30971:22;31017:16;;31002:32;;31067:48;31111:2;31096:18;;31067:48;:::i;:::-;31062:2;31054:6;31050:15;31043:73;31149:48;31193:2;31182:9;31178:18;31149:48;:::i;:::-;31144:2;31136:6;31132:15;31125:73;31231:63;31286:7;31281:2;31270:9;31266:18;31231:63;:::i;:::-;31226:2;31214:15;;31207:88;31218:6;30609:717;-1:-1:-1;;;30609:717:165:o;31967:287::-;32096:3;32134:6;32128:13;32150:66;32209:6;32204:3;32197:4;32189:6;32185:17;32150:66;:::i;:::-;32232:16;;;;;31967:287;-1:-1:-1;;31967:287:165:o;32601:246::-;32695:6;32748:2;32736:9;32727:7;32723:23;32719:32;32716:52;;;32764:1;32761;32754:12;32716:52;32787:54;32833:7;32822:9;32787:54;:::i;35297:297::-;35415:12;;35462:4;35451:16;;;35445:23;;35415:12;35480:16;;35477:111;;;-1:-1:-1;;35554:4:165;35550:17;;;;35547:1;35543:25;35539:38;35528:50;;35297:297;-1:-1:-1;35297:297:165:o;35942:136::-;35981:3;36009:5;35999:39;;36018:18;;:::i;:::-;-1:-1:-1;;;36054:18:165;;35942:136::o",
    "linkReferences": {},
    "immutableReferences": {
      "63150": [
        { "start": 866, "length": 32 },
        { "start": 2666, "length": 32 },
        { "start": 2737, "length": 32 },
        { "start": 3131, "length": 32 },
        { "start": 3244, "length": 32 },
        { "start": 3310, "length": 32 },
        { "start": 4043, "length": 32 },
        { "start": 4879, "length": 32 },
        { "start": 4945, "length": 32 },
        { "start": 5213, "length": 32 },
        { "start": 5279, "length": 32 },
        { "start": 6264, "length": 32 },
        { "start": 6330, "length": 32 },
        { "start": 6590, "length": 32 },
        { "start": 6656, "length": 32 },
        { "start": 7778, "length": 32 },
        { "start": 7860, "length": 32 },
        { "start": 7926, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "PARENT()": "122b83f9",
    "TYPE()": "bb24fe8a",
    "VEECODE()": "d61735ca",
    "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": "bae96bdd",
    "auctionData(uint96)": "e2cfa6ea",
    "auctionType()": "994595e1",
    "bid(uint96,address,address,uint256,bytes)": "87698a31",
    "bids(uint96,uint64)": "0fb276fc",
    "cancelAuction(uint96)": "b04046df",
    "capacityInQuote(uint96)": "39792cdc",
    "claimBids(uint96,uint64[])": "0a35511b",
    "claimProceeds(uint96)": "24546b2d",
    "decryptAndSortBids(uint96,uint64,bytes32[])": "25e34a8e",
    "decryptBid(uint96,uint64)": "a1a61ec5",
    "decryptedBids(uint96)": "de1d3112",
    "dedicatedSettlePeriod()": "a85cebb6",
    "encryptedBids(uint96,uint64)": "54c87c01",
    "getAuctionData(uint96)": "cadb3383",
    "getBid(uint96,uint64)": "a8bf44e4",
    "getBidIdAtIndex(uint96,uint256)": "7d7b6853",
    "getBidIds(uint96,uint256,uint256)": "00b33217",
    "getLot(uint96)": "4e1f4258",
    "getNextInQueue(uint96,bytes32)": "8bde6109",
    "getNumBids(uint96)": "d899a337",
    "getNumBidsInQueue(uint96)": "0cf5538d",
    "getPartialFill(uint96)": "a16f7ef7",
    "hasEnded(uint96)": "03855921",
    "isLive(uint96)": "732efc03",
    "lotAuctionOutput(uint96)": "0cd0bcf2",
    "lotData(uint96)": "5806afc3",
    "minAuctionDuration()": "54134876",
    "refundBid(uint96,uint64,uint256,address)": "7d9234bc",
    "remainingCapacity(uint96)": "ace54da5",
    "setDedicatedSettlePeriod(uint48)": "29da5abd",
    "setMinAuctionDuration(uint48)": "12d6ef2d",
    "settle(uint96)": "fb9d3cb6",
    "submitPrivateKey(uint96,uint256,uint64,bytes32[])": "79fd0c1f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InsufficientCapacity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"bidId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidBidId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InvalidKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidLotId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"start_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidStart\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_MarketActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_MarketNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_OnlyMarketOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"name\":\"Bid_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent_\",\"type\":\"address\"}],\"name\":\"Module_InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module_OnlyInternal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"Module_OnlyParent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amountIn\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amountOut\",\"type\":\"uint96\"}],\"name\":\"BidDecrypted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PARENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"internalType\":\"enum Module.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VEECODE\",\"outputs\":[{\"internalType\":\"Veecode\",\"name\":\"\",\"type\":\"bytes7\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"implParams\",\"type\":\"bytes\"}],\"internalType\":\"struct IAuction.AuctionParams\",\"name\":\"params_\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals_\",\"type\":\"uint8\"}],\"name\":\"auction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"auctionData\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nextBidId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nextDecryptIndex\",\"type\":\"uint64\"},{\"internalType\":\"enum EncryptedMarginalPrice.LotStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"marginalBidId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"proceedsClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"marginalPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBidSize\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"publicKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionType\",\"outputs\":[{\"internalType\":\"enum IAuction.AuctionType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"bidder_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"auctionData_\",\"type\":\"bytes\"}],\"name\":\"bid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"minAmountOut\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"enum EncryptedMarginalPrice.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"capacityInQuote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64[]\",\"name\":\"bidIds_\",\"type\":\"uint64[]\"}],\"name\":\"claimBids\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchAuction.BidClaim[]\",\"name\":\"bidClaims\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"claimProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"num_\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[]\",\"name\":\"sortHints_\",\"type\":\"bytes32[]\"}],\"name\":\"decryptAndSortBids\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"decryptBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"decryptedBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numBids\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dedicatedSettlePeriod\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"name\":\"encryptedBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"encryptedAmountOut\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"bidPubKey\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getAuctionData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"nextBidId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nextDecryptIndex\",\"type\":\"uint64\"},{\"internalType\":\"enum EncryptedMarginalPrice.LotStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"marginalBidId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"proceedsClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"marginalPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBidSize\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"publicKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"bidIds\",\"type\":\"uint64[]\"}],\"internalType\":\"struct EncryptedMarginalPrice.AuctionData\",\"name\":\"auctionData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"getBid\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"minAmountOut\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"enum EncryptedMarginalPrice.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct EncryptedMarginalPrice.Bid\",\"name\":\"bid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"encryptedAmountOut\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"bidPubKey\",\"type\":\"tuple\"}],\"internalType\":\"struct EncryptedMarginalPrice.EncryptedBid\",\"name\":\"encryptedBid\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"getBidIdAtIndex\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"startIndex_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"num_\",\"type\":\"uint256\"}],\"name\":\"getBidIds\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getLot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuction.Lot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"key_\",\"type\":\"bytes32\"}],\"name\":\"getNextInQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getNumBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getNumBidsInQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getPartialFill\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"refund\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"internalType\":\"struct EncryptedMarginalPrice.PartialFill\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"hasEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"lotAuctionOutput\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"}],\"name\":\"lotData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuctionDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"refundBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"remainingCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"period_\",\"type\":\"uint48\"}],\"name\":\"setDedicatedSettlePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"privateKey_\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"num_\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[]\",\"name\":\"sortHints_\",\"type\":\"bytes32[]\"}],\"name\":\"submitPrivateKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This batch auction module allows for bids to be encrypted off-chain, then stored, decrypted and settled on-chain.             Note that the maximum bid amount is bounded by uint96.\",\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic.\"},\"TYPE()\":{\"details\":\"This enables the parent contract to check that the module Keycode specifiedis of the correct type\"},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"details\":\"If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum\",\"params\":{\"baseTokenDecimals_\":\"The base token decimals\",\"lotId_\":\"The lot id\",\"params_\":\"The auction parameters\",\"quoteTokenDecimals_\":\"The quote token decimals\"}},\"bid(uint96,address,address,uint256,bytes)\":{\"details\":\"Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module\",\"params\":{\"amount_\":\"The amount of quote tokens to bid\",\"auctionData_\":\"The auction-specific data\",\"bidder_\":\"The bidder of the purchased tokens\",\"lotId_\":\"The lot id\",\"referrer_\":\"The referrer of the bid\"},\"returns\":{\"bidId\":\"          The bid id\"}},\"cancelAuction(uint96)\":{\"details\":\"Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded\",\"params\":{\"lotId_\":\"The lot id\"}},\"capacityInQuote(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the capacity is in quote tokens\"}},\"claimBids(uint96,uint64[])\":{\"details\":\"Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module\",\"params\":{\"bidIds_\":\"The bid ids\",\"lotId_\":\"The lot id\"},\"returns\":{\"auctionOutput\":\"  The auction-specific output\",\"bidClaims\":\"      The bid claim data\"}},\"claimProceeds(uint96)\":{\"details\":\"Implements a basic claimProceeds function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The lot proceeds have already been claimed             - The lot is cancelled             - The caller is not an internal module\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"auctionOutput\":\"  Custom data returned by the auction module\",\"capacity\":\"       The original capacity of the lot\",\"purchased\":\"      The amount of quote tokens purchased\",\"sold\":\"           The amount of base tokens sold\"}},\"decryptAndSortBids(uint96,uint64,bytes32[])\":{\"details\":\"This function handles the following:                 - Performs state validation                 - Iterates over the encrypted bids:                     - Decrypts the bid                     - Ignores if the bid is incorrectly encrypted                     - Does not add to the sorted bid queue if the decrypted amount out is less than the minimum bid size or overflows                     - Otherwise, adds to the sorted bid queue for use during settlement                 - Determines the next decrypt index                 - Sets the auction status to decrypted if all bids have been decrypted                 This function reverts if:                 - The lot ID is invalid                 - The lot has not started                 - The lot is active                 - The private key has not been provided                 - `num_` and `sortHints_` have different lengths\",\"params\":{\"lotId_\":\"The lot ID of the auction to decrypt bids for\",\"num_\":\"The number of bids to decrypt. Reduced to the number remaining if greater\",\"sortHints_\":\"The sort hints for the bid decryption\"}},\"decryptBid(uint96,uint64)\":{\"details\":\"This function does not alter the state of the contract, but provides a way to peek at the decrypted bid             This function reverts if:             - The lot ID is invalid             - The private key has not been provided\",\"params\":{\"bidId_\":\"The bid ID to decrypt\",\"lotId_\":\"The lot ID of the auction to decrypt the bid for\"},\"returns\":{\"amountOut\":\"  The decrypted amount out\"}},\"getLot(uint96)\":{\"params\":{\"lotId_\":\"The lot ID\"}},\"hasEnded(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"isLive(uint96)\":{\"details\":\"A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"refundBid(uint96,uint64,uint256,address)\":{\"details\":\"Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is decrypted or settled (but not concluded)             - The lot is within the dedicated settle period             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module             This is a modified version of the refundBid function in the AuctionModule contract.             It does not revert if the lot is concluded.\",\"params\":{\"bidId_\":\"The bid id\",\"caller_\":\"The caller\",\"index_\":\"The index of the bid ID in the auction's bid list\",\"lotId_\":\"The lot id\"},\"returns\":{\"refund\":\"     The amount of quote tokens to refund\"}},\"remainingCapacity(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return the remaining capacity of the lot\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"uint96 The remaining capacity of the lot\"}},\"setMinAuctionDuration(uint48)\":{\"details\":\"This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`.\"},\"settle(uint96)\":{\"details\":\"Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"auctionOutput\":\"  Custom data returned by the auction module\",\"totalIn\":\"        Total amount of quote tokens from bids that were filled\",\"totalOut\":\"       Total amount of base tokens paid out to winning bids\"}},\"submitPrivateKey(uint96,uint256,uint64,bytes32[])\":{\"params\":{\"lotId_\":\"The lot ID of the auction to submit the private key for\",\"num_\":\"The number of bids to decrypt after submitting the private key (passed to `_decryptAndSortBids()`)\",\"privateKey_\":\"The ECIES private key to decrypt the bids\",\"sortHints_\":\"The sort hints for the bid decryption (passed to `_decryptAndSortBids()`)\"}}},\"stateVariables\":{\"_MIN_BID_PERCENT\":{\"details\":\"1% = 1_000 or 1e3. 100% = 100_000 or 1e5.\"},\"_lotPartialFill\":{\"details\":\"Each EMPA can have at most one partial fill\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Module_InvalidParent(address)\":[{\"notice\":\"Error when the parent contract is invalid\"}],\"Module_OnlyInternal()\":[{\"notice\":\"Error when a module function is called by a non-internal contract\"}],\"Module_OnlyParent(address)\":[{\"notice\":\"Error when a module function is called by a non-parent contract\"}]},\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"PARENT()\":{\"notice\":\"The parent contract for this module.\"},\"TYPE()\":{\"notice\":\"2 byte identifier for the module type\"},\"VEECODE()\":{\"notice\":\"7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z.\"},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"notice\":\"Create an auction lot\"},\"auctionData(uint96)\":{\"notice\":\"Auction-specific data for a lot\"},\"auctionType()\":{\"notice\":\"Get the auction type\"},\"bid(uint96,address,address,uint256,bytes)\":{\"notice\":\"Bid on an auction lot\"},\"bids(uint96,uint64)\":{\"notice\":\"General information about bids on a lot\"},\"cancelAuction(uint96)\":{\"notice\":\"Cancel an auction lot\"},\"capacityInQuote(uint96)\":{\"notice\":\"Get whether or not the capacity is in quote tokens\"},\"claimBids(uint96,uint64[])\":{\"notice\":\"Claim multiple bids\"},\"claimProceeds(uint96)\":{\"notice\":\"Claim the seller proceeds from a settled auction lot\"},\"decryptAndSortBids(uint96,uint64,bytes32[])\":{\"notice\":\"Decrypts a batch of bids and sorts them by price in descending order\"},\"decryptBid(uint96,uint64)\":{\"notice\":\"Returns the decrypted amountOut of a single bid\"},\"decryptedBids(uint96)\":{\"notice\":\"Queue of decrypted bids for a lot (populated on decryption)\"},\"dedicatedSettlePeriod()\":{\"notice\":\"Time period after auction conclusion where bidders cannot refund bids\"},\"encryptedBids(uint96,uint64)\":{\"notice\":\"Data for encryption information for a specific bid\"},\"getBidIdAtIndex(uint96,uint256)\":{\"notice\":\"Returns the bid id at the specified index\"},\"getLot(uint96)\":{\"notice\":\"Get the lot data for a given lot ID\"},\"getNextInQueue(uint96,bytes32)\":{\"notice\":\"Returns the bid after `key_` in the queue\"},\"hasEnded(uint96)\":{\"notice\":\"Returns whether the auction has ended\"},\"isLive(uint96)\":{\"notice\":\"Returns whether the auction is currently accepting bids or purchases\"},\"lotAuctionOutput(uint96)\":{\"notice\":\"Custom auction output for each lot\"},\"lotData(uint96)\":{\"notice\":\"General information pertaining to auction lots\"},\"minAuctionDuration()\":{\"notice\":\"Minimum auction duration in seconds\"},\"refundBid(uint96,uint64,uint256,address)\":{\"notice\":\"Refund a bid\"},\"remainingCapacity(uint96)\":{\"notice\":\"Get the remaining capacity of a lot\"},\"setMinAuctionDuration(uint48)\":{\"notice\":\"Set the minimum auction duration\"},\"settle(uint96)\":{\"notice\":\"Settle a batch auction lot with on-chain storage and settlement\"},\"submitPrivateKey(uint96,uint256,uint64,bytes32[])\":{\"notice\":\"Submits the private key for the auction lot and decrypts an initial number of bids                 It does not require gating. If the seller wishes to limit who can call, they can simply not reveal the key to anyone else.                 On the other hand, if a key management service is used, then anyone can call it once the key is revealed.                 This function reverts if:                 - The lot ID is invalid                 - The lot is not active                 - The lot has not concluded                 - The private key has already been submitted                 - The private key is invalid for the public key\"}},\"notice\":\"Encrypted Marginal Price\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/auctions/EMP.sol\":\"EncryptedMarginalPrice\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":prb-math/=lib/prb-math/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4\",\"dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/interfaces/IAuction.sol\":{\"keccak256\":\"0x74110464236a31f033543d66688e8ace41e34888b6cc21401f500e86c921bd40\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://05c0faef54664eabdb1135e01ac943b82b84a3cf318fb3df301a84d59689d279\",\"dweb:/ipfs/QmfHFavfSBy4gyTyiDyzv9oHpfnLB6DSTyookqbgLGj26i\"]},\"src/interfaces/IBatchAuction.sol\":{\"keccak256\":\"0xdac51bf51e865ddadf96c915c58ab8b8d3eba46cf987f88e60e09cc71a0384c4\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://16f9b723fae83715d691bbcab90e1840cc4ea1acb47637e2e8ff80e09712bb8a\",\"dweb:/ipfs/QmVDRJQz3q2ZpwCEmwzawsxt4vEoj6qYwFFGF7U6Y8dFqA\"]},\"src/lib/ECIES.sol\":{\"keccak256\":\"0xab32c6f4b6531463ce073a61cfa01a2d6682a4d732070fab3b46069ec9d1e945\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://f5b4f77d5e9792972bcf0b14be1109ecd7db2baa796e06c25f388ce4f32b9a95\",\"dweb:/ipfs/QmUYQ7pqwt4yagadGXqmpjcUN3GqNHVEnQR14NE5ttVjs5\"]},\"src/lib/MaxPriorityQueue.sol\":{\"keccak256\":\"0x0a8d77f0f9a30ba78250ed8cc5009822a5ade63153d5dab5b4d189a9fb0e10a6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://504e2d6c46be64665d6f0b8081ddfbd84578694c6131e992d6d51c5d63112ff6\",\"dweb:/ipfs/QmVRrHMzrSGwnXimCd344RQ5KrG59rfVE81ecyxobGXwP7\"]},\"src/modules/Auction.sol\":{\"keccak256\":\"0xeab7ae7d50a6b831495e52c6b3c44037dfcf4303a7b1d3426bdb58c1557e33be\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://5d5d70f00e05ad97256ef69e9227decc465a5407ddc575ebbd0b25f05b0e20d3\",\"dweb:/ipfs/QmTnayejGYrdJZz1c5y3gRco9Q9F2hjDm4mWb6SgBSpXNY\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd\",\"dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu\"]},\"src/modules/Modules.sol\":{\"keccak256\":\"0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee\",\"dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v\"]},\"src/modules/auctions/BatchAuctionModule.sol\":{\"keccak256\":\"0x1b4319e4170ca662bcaef48fde44eb4b619017008c59d4807d9e445e209de64b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://e8b028912ec79bf051d5af3d6027acc320ef7c136804cfcb13d555231e68eb18\",\"dweb:/ipfs/QmTncFVkNU4WVmpWBTPXRYAGEsghisy7xMyzq326WaRxm9\"]},\"src/modules/auctions/EMP.sol\":{\"keccak256\":\"0xb908d9c33b4ddde15b639347c6dd0bd192546a2cb4621ad5dbf2233bc4ade58e\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ccbe6ca83be5804af5aacb7348e5bf47d92d36f970e9aae9f8ee68f02510499e\",\"dweb:/ipfs/QmQrvU6FXduh2XBgXnPwugeARQ2PmaS82EB3GdM555LufL\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "auctionHouse_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_InsufficientCapacity"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint96", "name": "bidId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_InvalidBidId"
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "duration_", "type": "uint48" },
            { "internalType": "uint48", "name": "minimum_", "type": "uint48" }
          ],
          "type": "error",
          "name": "Auction_InvalidDuration"
        },
        { "inputs": [], "type": "error", "name": "Auction_InvalidKey" },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_InvalidLotId"
        },
        { "inputs": [], "type": "error", "name": "Auction_InvalidParams" },
        {
          "inputs": [
            { "internalType": "uint48", "name": "start_", "type": "uint48" },
            { "internalType": "uint48", "name": "minimum_", "type": "uint48" }
          ],
          "type": "error",
          "name": "Auction_InvalidStart"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_MarketActive"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_MarketNotActive"
        },
        { "inputs": [], "type": "error", "name": "Auction_NotAuthorized" },
        { "inputs": [], "type": "error", "name": "Auction_NotBidder" },
        { "inputs": [], "type": "error", "name": "Auction_NotImplemented" },
        { "inputs": [], "type": "error", "name": "Auction_OnlyMarketOwner" },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_WrongState"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ],
          "type": "error",
          "name": "Bid_WrongState"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "parent_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_InvalidParent"
        },
        { "inputs": [], "type": "error", "name": "Module_OnlyInternal" },
        {
          "inputs": [
            { "internalType": "address", "name": "caller_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_OnlyParent"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "NotPermitted"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "bidId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "amountIn",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "amountOut",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BidDecrypted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PARENT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "TYPE",
          "outputs": [
            { "internalType": "enum Module.Type", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VEECODE",
          "outputs": [
            { "internalType": "Veecode", "name": "", "type": "bytes7" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "struct IAuction.AuctionParams",
              "name": "params_",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "start", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "duration",
                  "type": "uint48"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "implParams",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals_",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "auction"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "auctionData",
          "outputs": [
            { "internalType": "uint64", "name": "nextBidId", "type": "uint64" },
            {
              "internalType": "uint64",
              "name": "nextDecryptIndex",
              "type": "uint64"
            },
            {
              "internalType": "enum EncryptedMarginalPrice.LotStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "marginalBidId",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "proceedsClaimed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "marginalPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minFilled",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minBidSize",
              "type": "uint256"
            },
            {
              "internalType": "struct Point",
              "name": "publicKey",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "x", "type": "uint256" },
                { "internalType": "uint256", "name": "y", "type": "uint256" }
              ]
            },
            {
              "internalType": "uint256",
              "name": "privateKey",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "auctionType",
          "outputs": [
            {
              "internalType": "enum IAuction.AuctionType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "address", "name": "bidder_", "type": "address" },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            { "internalType": "bytes", "name": "auctionData_", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bid",
          "outputs": [
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bids",
          "outputs": [
            { "internalType": "address", "name": "bidder", "type": "address" },
            { "internalType": "uint96", "name": "amount", "type": "uint96" },
            {
              "internalType": "uint96",
              "name": "minAmountOut",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "enum EncryptedMarginalPrice.BidStatus",
              "name": "status",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAuction"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "capacityInQuote",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint64[]",
              "name": "bidIds_",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimBids",
          "outputs": [
            {
              "internalType": "struct IBatchAuction.BidClaim[]",
              "name": "bidClaims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimProceeds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "sold", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "num_", "type": "uint64" },
            {
              "internalType": "bytes32[]",
              "name": "sortHints_",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decryptAndSortBids"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decryptBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decryptedBids",
          "outputs": [
            { "internalType": "uint256", "name": "numBids", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dedicatedSettlePeriod",
          "outputs": [
            { "internalType": "uint48", "name": "", "type": "uint48" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedBids",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "encryptedAmountOut",
              "type": "uint256"
            },
            {
              "internalType": "struct Point",
              "name": "bidPubKey",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "x", "type": "uint256" },
                { "internalType": "uint256", "name": "y", "type": "uint256" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuctionData",
          "outputs": [
            {
              "internalType": "struct EncryptedMarginalPrice.AuctionData",
              "name": "auctionData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "nextBidId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "nextDecryptIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "enum EncryptedMarginalPrice.LotStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "marginalBidId",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "proceedsClaimed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "marginalPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minFilled",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minBidSize",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Point",
                  "name": "publicKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "x",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "privateKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64[]",
                  "name": "bidIds",
                  "type": "uint64[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBid",
          "outputs": [
            {
              "internalType": "struct EncryptedMarginalPrice.Bid",
              "name": "bid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "amount",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "minAmountOut",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "enum EncryptedMarginalPrice.BidStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            },
            {
              "internalType": "struct EncryptedMarginalPrice.EncryptedBid",
              "name": "encryptedBid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "encryptedAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Point",
                  "name": "bidPubKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "x",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "y",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint256", "name": "index_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIdAtIndex",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint256",
              "name": "startIndex_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "num_", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIds",
          "outputs": [
            { "internalType": "uint64[]", "name": "", "type": "uint64[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLot",
          "outputs": [
            {
              "internalType": "struct IAuction.Lot",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "start", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "conclusion",
                  "type": "uint48"
                },
                {
                  "internalType": "uint8",
                  "name": "quoteTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "purchased",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "bytes32", "name": "key_", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextInQueue",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumBids",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumBidsInQueue",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPartialFill",
          "outputs": [
            {
              "internalType": "struct EncryptedMarginalPrice.PartialFill",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint64", "name": "bidId", "type": "uint64" },
                {
                  "internalType": "uint96",
                  "name": "refund",
                  "type": "uint96"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasEnded",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotAuctionOutput",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "id", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotData",
          "outputs": [
            { "internalType": "uint48", "name": "start", "type": "uint48" },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "sold", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minAuctionDuration",
          "outputs": [
            { "internalType": "uint48", "name": "", "type": "uint48" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" },
            { "internalType": "uint256", "name": "index_", "type": "uint256" },
            { "internalType": "address", "name": "caller_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refundBid",
          "outputs": [
            { "internalType": "uint256", "name": "refund", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingCapacity",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "period_", "type": "uint48" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDedicatedSettlePeriod"
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "duration_", "type": "uint48" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinAuctionDuration"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settle",
          "outputs": [
            { "internalType": "uint256", "name": "totalIn", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "totalOut",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint256",
              "name": "privateKey_",
              "type": "uint256"
            },
            { "internalType": "uint64", "name": "num_", "type": "uint64" },
            {
              "internalType": "bytes32[]",
              "name": "sortHints_",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitPrivateKey"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic."
          },
          "TYPE()": {
            "details": "This enables the parent contract to check that the module Keycode specifiedis of the correct type"
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "details": "If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum",
            "params": {
              "baseTokenDecimals_": "The base token decimals",
              "lotId_": "The lot id",
              "params_": "The auction parameters",
              "quoteTokenDecimals_": "The quote token decimals"
            }
          },
          "bid(uint96,address,address,uint256,bytes)": {
            "details": "Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module",
            "params": {
              "amount_": "The amount of quote tokens to bid",
              "auctionData_": "The auction-specific data",
              "bidder_": "The bidder of the purchased tokens",
              "lotId_": "The lot id",
              "referrer_": "The referrer of the bid"
            },
            "returns": { "bidId": "          The bid id" }
          },
          "cancelAuction(uint96)": {
            "details": "Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded",
            "params": { "lotId_": "The lot id" }
          },
          "capacityInQuote(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens",
            "params": { "lotId_": "The lot id" },
            "returns": {
              "_0": "bool    Whether or not the capacity is in quote tokens"
            }
          },
          "claimBids(uint96,uint64[])": {
            "details": "Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module",
            "params": { "bidIds_": "The bid ids", "lotId_": "The lot id" },
            "returns": {
              "auctionOutput": "  The auction-specific output",
              "bidClaims": "      The bid claim data"
            }
          },
          "claimProceeds(uint96)": {
            "details": "Implements a basic claimProceeds function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The lot proceeds have already been claimed             - The lot is cancelled             - The caller is not an internal module",
            "params": { "lotId_": "The lot id" },
            "returns": {
              "auctionOutput": "  Custom data returned by the auction module",
              "capacity": "       The original capacity of the lot",
              "purchased": "      The amount of quote tokens purchased",
              "sold": "           The amount of base tokens sold"
            }
          },
          "decryptAndSortBids(uint96,uint64,bytes32[])": {
            "details": "This function handles the following:                 - Performs state validation                 - Iterates over the encrypted bids:                     - Decrypts the bid                     - Ignores if the bid is incorrectly encrypted                     - Does not add to the sorted bid queue if the decrypted amount out is less than the minimum bid size or overflows                     - Otherwise, adds to the sorted bid queue for use during settlement                 - Determines the next decrypt index                 - Sets the auction status to decrypted if all bids have been decrypted                 This function reverts if:                 - The lot ID is invalid                 - The lot has not started                 - The lot is active                 - The private key has not been provided                 - `num_` and `sortHints_` have different lengths",
            "params": {
              "lotId_": "The lot ID of the auction to decrypt bids for",
              "num_": "The number of bids to decrypt. Reduced to the number remaining if greater",
              "sortHints_": "The sort hints for the bid decryption"
            }
          },
          "decryptBid(uint96,uint64)": {
            "details": "This function does not alter the state of the contract, but provides a way to peek at the decrypted bid             This function reverts if:             - The lot ID is invalid             - The private key has not been provided",
            "params": {
              "bidId_": "The bid ID to decrypt",
              "lotId_": "The lot ID of the auction to decrypt the bid for"
            },
            "returns": { "amountOut": "  The decrypted amount out" }
          },
          "getLot(uint96)": { "params": { "lotId_": "The lot ID" } },
          "hasEnded(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases",
            "params": { "lotId_": "The lot id" },
            "returns": { "_0": "bool    Whether or not the lot is active" }
          },
          "isLive(uint96)": {
            "details": "A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)",
            "params": { "lotId_": "The lot ID" },
            "returns": { "_0": "bool    Whether or not the lot is active" }
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "details": "Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is decrypted or settled (but not concluded)             - The lot is within the dedicated settle period             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module             This is a modified version of the refundBid function in the AuctionModule contract.             It does not revert if the lot is concluded.",
            "params": {
              "bidId_": "The bid id",
              "caller_": "The caller",
              "index_": "The index of the bid ID in the auction's bid list",
              "lotId_": "The lot id"
            },
            "returns": { "refund": "     The amount of quote tokens to refund" }
          },
          "remainingCapacity(uint96)": {
            "details": "The implementing function should handle the following:             - Return the remaining capacity of the lot",
            "params": { "lotId_": "The lot id" },
            "returns": { "_0": "uint96 The remaining capacity of the lot" }
          },
          "setMinAuctionDuration(uint48)": {
            "details": "This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`."
          },
          "settle(uint96)": {
            "details": "Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module",
            "params": { "lotId_": "The lot id" },
            "returns": {
              "auctionOutput": "  Custom data returned by the auction module",
              "totalIn": "        Total amount of quote tokens from bids that were filled",
              "totalOut": "       Total amount of base tokens paid out to winning bids"
            }
          },
          "submitPrivateKey(uint96,uint256,uint64,bytes32[])": {
            "params": {
              "lotId_": "The lot ID of the auction to submit the private key for",
              "num_": "The number of bids to decrypt after submitting the private key (passed to `_decryptAndSortBids()`)",
              "privateKey_": "The ECIES private key to decrypt the bids",
              "sortHints_": "The sort hints for the bid decryption (passed to `_decryptAndSortBids()`)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": { "notice": "Initialization function for the module" },
          "PARENT()": { "notice": "The parent contract for this module." },
          "TYPE()": { "notice": "2 byte identifier for the module type" },
          "VEECODE()": {
            "notice": "7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z."
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "notice": "Create an auction lot"
          },
          "auctionData(uint96)": {
            "notice": "Auction-specific data for a lot"
          },
          "auctionType()": { "notice": "Get the auction type" },
          "bid(uint96,address,address,uint256,bytes)": {
            "notice": "Bid on an auction lot"
          },
          "bids(uint96,uint64)": {
            "notice": "General information about bids on a lot"
          },
          "cancelAuction(uint96)": { "notice": "Cancel an auction lot" },
          "capacityInQuote(uint96)": {
            "notice": "Get whether or not the capacity is in quote tokens"
          },
          "claimBids(uint96,uint64[])": { "notice": "Claim multiple bids" },
          "claimProceeds(uint96)": {
            "notice": "Claim the seller proceeds from a settled auction lot"
          },
          "decryptAndSortBids(uint96,uint64,bytes32[])": {
            "notice": "Decrypts a batch of bids and sorts them by price in descending order"
          },
          "decryptBid(uint96,uint64)": {
            "notice": "Returns the decrypted amountOut of a single bid"
          },
          "decryptedBids(uint96)": {
            "notice": "Queue of decrypted bids for a lot (populated on decryption)"
          },
          "dedicatedSettlePeriod()": {
            "notice": "Time period after auction conclusion where bidders cannot refund bids"
          },
          "encryptedBids(uint96,uint64)": {
            "notice": "Data for encryption information for a specific bid"
          },
          "getBidIdAtIndex(uint96,uint256)": {
            "notice": "Returns the bid id at the specified index"
          },
          "getLot(uint96)": { "notice": "Get the lot data for a given lot ID" },
          "getNextInQueue(uint96,bytes32)": {
            "notice": "Returns the bid after `key_` in the queue"
          },
          "hasEnded(uint96)": {
            "notice": "Returns whether the auction has ended"
          },
          "isLive(uint96)": {
            "notice": "Returns whether the auction is currently accepting bids or purchases"
          },
          "lotAuctionOutput(uint96)": {
            "notice": "Custom auction output for each lot"
          },
          "lotData(uint96)": {
            "notice": "General information pertaining to auction lots"
          },
          "minAuctionDuration()": {
            "notice": "Minimum auction duration in seconds"
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "notice": "Refund a bid"
          },
          "remainingCapacity(uint96)": {
            "notice": "Get the remaining capacity of a lot"
          },
          "setMinAuctionDuration(uint48)": {
            "notice": "Set the minimum auction duration"
          },
          "settle(uint96)": {
            "notice": "Settle a batch auction lot with on-chain storage and settlement"
          },
          "submitPrivateKey(uint96,uint256,uint64,bytes32[])": {
            "notice": "Submits the private key for the auction lot and decrypts an initial number of bids                 It does not require gating. If the seller wishes to limit who can call, they can simply not reveal the key to anyone else.                 On the other hand, if a key management service is used, then anyone can call it once the key is revealed.                 This function reverts if:                 - The lot ID is invalid                 - The lot is not active                 - The lot has not concluded                 - The private key has already been submitted                 - The private key is invalid for the public key"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/prb-math/node_modules/@prb/test/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "prb-math/=lib/prb-math/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/modules/auctions/EMP.sol": "EncryptedMarginalPrice"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776",
        "urls": [
          "bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4",
          "dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IAuction.sol": {
        "keccak256": "0x74110464236a31f033543d66688e8ace41e34888b6cc21401f500e86c921bd40",
        "urls": [
          "bzz-raw://05c0faef54664eabdb1135e01ac943b82b84a3cf318fb3df301a84d59689d279",
          "dweb:/ipfs/QmfHFavfSBy4gyTyiDyzv9oHpfnLB6DSTyookqbgLGj26i"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IBatchAuction.sol": {
        "keccak256": "0xdac51bf51e865ddadf96c915c58ab8b8d3eba46cf987f88e60e09cc71a0384c4",
        "urls": [
          "bzz-raw://16f9b723fae83715d691bbcab90e1840cc4ea1acb47637e2e8ff80e09712bb8a",
          "dweb:/ipfs/QmVDRJQz3q2ZpwCEmwzawsxt4vEoj6qYwFFGF7U6Y8dFqA"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/lib/ECIES.sol": {
        "keccak256": "0xab32c6f4b6531463ce073a61cfa01a2d6682a4d732070fab3b46069ec9d1e945",
        "urls": [
          "bzz-raw://f5b4f77d5e9792972bcf0b14be1109ecd7db2baa796e06c25f388ce4f32b9a95",
          "dweb:/ipfs/QmUYQ7pqwt4yagadGXqmpjcUN3GqNHVEnQR14NE5ttVjs5"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/lib/MaxPriorityQueue.sol": {
        "keccak256": "0x0a8d77f0f9a30ba78250ed8cc5009822a5ade63153d5dab5b4d189a9fb0e10a6",
        "urls": [
          "bzz-raw://504e2d6c46be64665d6f0b8081ddfbd84578694c6131e992d6d51c5d63112ff6",
          "dweb:/ipfs/QmVRrHMzrSGwnXimCd344RQ5KrG59rfVE81ecyxobGXwP7"
        ],
        "license": "UNLICENSED"
      },
      "src/modules/Auction.sol": {
        "keccak256": "0xeab7ae7d50a6b831495e52c6b3c44037dfcf4303a7b1d3426bdb58c1557e33be",
        "urls": [
          "bzz-raw://5d5d70f00e05ad97256ef69e9227decc465a5407ddc575ebbd0b25f05b0e20d3",
          "dweb:/ipfs/QmTnayejGYrdJZz1c5y3gRco9Q9F2hjDm4mWb6SgBSpXNY"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e",
        "urls": [
          "bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd",
          "dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Modules.sol": {
        "keccak256": "0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689",
        "urls": [
          "bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee",
          "dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/auctions/BatchAuctionModule.sol": {
        "keccak256": "0x1b4319e4170ca662bcaef48fde44eb4b619017008c59d4807d9e445e209de64b",
        "urls": [
          "bzz-raw://e8b028912ec79bf051d5af3d6027acc320ef7c136804cfcb13d555231e68eb18",
          "dweb:/ipfs/QmTncFVkNU4WVmpWBTPXRYAGEsghisy7xMyzq326WaRxm9"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/auctions/EMP.sol": {
        "keccak256": "0xb908d9c33b4ddde15b639347c6dd0bd192546a2cb4621ad5dbf2233bc4ade58e",
        "urls": [
          "bzz-raw://ccbe6ca83be5804af5aacb7348e5bf47d92d36f970e9aae9f8ee68f02510499e",
          "dweb:/ipfs/QmQrvU6FXduh2XBgXnPwugeARQ2PmaS82EB3GdM555LufL"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "id": 88
}
