/* tslint:disable */
/* eslint-disable */
/**
 * Axis Points Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * A JSON object containing information about an activity.
 * @export
 * @interface Activity
 */
export interface Activity {
  /**
   *
   * @type {string}
   * @memberof Activity
   */
  address?: string;
  /**
   *
   * @type {string}
   * @memberof Activity
   */
  event?: string;
  /**
   *
   * @type {string}
   * @memberof Activity
   */
  platform?: string;
  /**
   *
   * @type {string}
   * @memberof Activity
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof Activity
   */
  phase?: number;
  /**
   *
   * @type {number}
   * @memberof Activity
   */
  refPoints?: number;
  /**
   *
   * @type {number}
   * @memberof Activity
   */
  bidPoints?: number;
}

/**
 * Check if a given object implements the Activity interface.
 */
export function instanceOfActivity(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ActivityFromJSON(json: any): Activity {
  return ActivityFromJSONTyped(json, false);
}

export function ActivityFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Activity {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    address: !exists(json, "address") ? undefined : json["address"],
    event: !exists(json, "event") ? undefined : json["event"],
    platform: !exists(json, "platform") ? undefined : json["platform"],
    description: !exists(json, "description") ? undefined : json["description"],
    phase: !exists(json, "phase") ? undefined : json["phase"],
    refPoints: !exists(json, "ref_points") ? undefined : json["ref_points"],
    bidPoints: !exists(json, "bid_points") ? undefined : json["bid_points"],
  };
}

export function ActivityToJSON(value?: Activity | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    address: value.address,
    event: value.event,
    platform: value.platform,
    description: value.description,
    phase: value.phase,
    ref_points: value.refPoints,
    bid_points: value.bidPoints,
  };
}
