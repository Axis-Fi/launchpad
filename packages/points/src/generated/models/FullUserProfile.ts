/* tslint:disable */
/* eslint-disable */
/**
 * Axis Points Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { WalletPoints } from "./WalletPoints";
import {
  WalletPointsFromJSON,
  WalletPointsFromJSONTyped,
  WalletPointsToJSON,
} from "./WalletPoints";
import type { FullUserProfilePoints } from "./FullUserProfilePoints";
import {
  FullUserProfilePointsFromJSON,
  FullUserProfilePointsFromJSONTyped,
  FullUserProfilePointsToJSON,
} from "./FullUserProfilePoints";
import type { FullUserProfileActivities } from "./FullUserProfileActivities";
import {
  FullUserProfileActivitiesFromJSON,
  FullUserProfileActivitiesFromJSONTyped,
  FullUserProfileActivitiesToJSON,
} from "./FullUserProfileActivities";

/**
 * A JSON object containing the user's profile information, including points by category and total, and detailed wallet information.
 * @export
 * @interface FullUserProfile
 */
export interface FullUserProfile {
  /**
   *
   * @type {string}
   * @memberof FullUserProfile
   */
  username?: string;
  /**
   *
   * @type {string}
   * @memberof FullUserProfile
   */
  profileImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof FullUserProfile
   */
  referrer?: string;
  /**
   *
   * @type {FullUserProfilePoints}
   * @memberof FullUserProfile
   */
  points?: FullUserProfilePoints;
  /**
   *
   * @type {Array<WalletPoints>}
   * @memberof FullUserProfile
   */
  wallets?: Array<WalletPoints>;
  /**
   *
   * @type {FullUserProfileActivities}
   * @memberof FullUserProfile
   */
  activities?: FullUserProfileActivities;
  /**
   *
   * @type {number}
   * @memberof FullUserProfile
   */
  rank?: number;
}

/**
 * Check if a given object implements the FullUserProfile interface.
 */
export function instanceOfFullUserProfile(
  value: object,
): value is FullUserProfile {
  return true;
}

export function FullUserProfileFromJSON(json: any): FullUserProfile {
  return FullUserProfileFromJSONTyped(json, false);
}

export function FullUserProfileFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FullUserProfile {
  if (json == null) {
    return json;
  }
  return {
    username: json["username"] == null ? undefined : json["username"],
    profileImageUrl:
      json["profile_image_url"] == null ? undefined : json["profile_image_url"],
    referrer: json["referrer"] == null ? undefined : json["referrer"],
    points:
      json["points"] == null
        ? undefined
        : FullUserProfilePointsFromJSON(json["points"]),
    wallets:
      json["wallets"] == null
        ? undefined
        : (json["wallets"] as Array<any>).map(WalletPointsFromJSON),
    activities:
      json["activities"] == null
        ? undefined
        : FullUserProfileActivitiesFromJSON(json["activities"]),
    rank: json["rank"] == null ? undefined : json["rank"],
  };
}

export function FullUserProfileToJSON(value?: FullUserProfile | null): any {
  if (value == null) {
    return value;
  }
  return {
    username: value["username"],
    profile_image_url: value["profileImageUrl"],
    referrer: value["referrer"],
    points: FullUserProfilePointsToJSON(value["points"]),
    wallets:
      value["wallets"] == null
        ? undefined
        : (value["wallets"] as Array<any>).map(WalletPointsToJSON),
    activities: FullUserProfileActivitiesToJSON(value["activities"]),
    rank: value["rank"],
  };
}
